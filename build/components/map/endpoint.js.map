{"version":3,"sources":["endpoint.js"],"names":["Endpoint","rememberPlace","props","location","Object","assign","id","icon","type","forgetPlace","clearLocation","setLocation","_clearLocation","otherType","e","target","getLatLng","reverseGeocode","locations","showPopup","position","lat","lon","fgStyle","fontSize","width","height","bgStyle","paddingTop","match","find","l","isWork","isHome","iconHtml","ReactDOMServer","renderToStaticMarkup","name","opacity","marginLeft","marginTop","color","html","className","_onDragEnd","padding","_forgetHome","_rememberAsHome","_forgetWork","_rememberAsWork","_swapLocation","Component"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport ReactDOMServer from 'react-dom/server'\n\nimport { Button } from 'react-bootstrap'\nimport { Marker, Popup } from 'react-leaflet'\nimport { divIcon } from 'leaflet'\n\nimport Icon from '../narrative/icon'\nimport { constructLocation, matchLatLon } from '../../util/map'\nimport LocationIcon from '../icons/location-icon'\n\nexport default class Endpoint extends Component {\n  _rememberAsHome = () => {\n    const { rememberPlace } = this.props\n    const location = Object.assign({}, this.props.location)\n    location.id = 'home'\n    location.icon = 'home'\n    location.type = 'home'\n    rememberPlace({ type: 'home', location })\n  }\n\n  _rememberAsWork = () => {\n    const { rememberPlace } = this.props\n    const location = Object.assign({}, this.props.location)\n    location.id = 'work'\n    location.icon = 'briefcase'\n    location.type = 'work'\n    rememberPlace({ type: 'work', location })\n  }\n\n  _forgetHome = () => this.props.forgetPlace('home')\n\n  _forgetWork = () => this.props.forgetPlace('work')\n\n  _clearLocation = () => {\n    const { clearLocation, type } = this.props\n    clearLocation({ type })\n  }\n\n  _swapLocation = () => {\n    const { location, setLocation, type } = this.props\n    this._clearLocation()\n    const otherType = type === 'from' ? 'to' : 'from'\n    setLocation({ type: otherType, location })\n  }\n\n  _onDragEnd = (e) => {\n    const { setLocation, type } = this.props\n    const location = constructLocation(e.target.getLatLng())\n    setLocation({ type, location, reverseGeocode: true })\n  }\n\n  render () {\n    const { type, location, locations, showPopup } = this.props\n    const position = location && location.lat && location.lon ? [location.lat, location.lon] : null\n    if (!position) return null\n    const fgStyle = { fontSize: 24, width: 32, height: 32 }\n    const bgStyle = { fontSize: 32, width: 32, height: 32, paddingTop: 1 }\n    const match = locations.find(l => matchLatLon(l, location))\n    const isWork = match && match.type === 'work'\n    const isHome = match && match.type === 'home'\n    const iconHtml = ReactDOMServer.renderToStaticMarkup(\n      <span title={location.name} className={`fa-stack endpoint-${type}-icon`} style={{ opacity: 1.0, marginLeft: -10, marginTop: -7 }}>\n        {type === 'from'\n          // From icon should have white circle background\n          ? <i\n            className='fa-stack-1x fa fa-circle'\n            style={{ color: '#fff', ...fgStyle }} />\n          : <span>\n            <LocationIcon\n              type={type}\n              className='fa-stack-1x'\n              style={{ color: '#333', ...bgStyle }} />\n            <i\n              className='fa-stack-1x fa fa-circle'\n              style={{ color: '#fff', ...bgStyle, fontSize: 12, marginTop: -4 }} />\n          </span>\n        }\n        <LocationIcon type={type} className='fa-stack-1x' style={fgStyle} />\n      </span>\n    )\n    const otherType = type === 'from' ? 'to' : 'from'\n    const icon = isWork\n      ? 'briefcase'\n      : isHome\n        ? 'home'\n        : 'map-marker'\n    return (\n      <Marker\n        draggable\n        icon={divIcon({ html: iconHtml, className: '' })}\n        position={position}\n        onDragEnd={this._onDragEnd}>\n        {showPopup &&\n          <Popup>\n            <div>\n              <strong>\n                <Icon type={icon} /> {location.name}\n              </strong>\n              <div>\n                <Button\n                  bsStyle='link'\n                  bsSize='small'\n                  disabled={isWork}\n                  style={{ padding: 0 }}\n                  onClick={isHome ? this._forgetHome : this._rememberAsHome}>\n                  {isHome\n                    ? <span><Icon type='times' /> Forget home</span>\n                    : <span><Icon type='home' /> Save as home</span>\n                  }\n                </Button>\n              </div>\n              <div>\n                <Button\n                  bsStyle='link'\n                  bsSize='small'\n                  disabled={isHome}\n                  style={{ padding: 0 }}\n                  onClick={isWork ? this._forgetWork : this._rememberAsWork}>\n                  {isWork\n                    ? <span><Icon type='times' /> Forget work</span>\n                    : <span><Icon type='briefcase' /> Save as work</span>\n                  }\n                </Button>\n              </div>\n              <div>\n                <Button\n                  bsStyle='link'\n                  bsSize='small'\n                  style={{ padding: 0 }}\n                  onClick={this._clearLocation}>\n                  <Icon type='times' /> Remove as {type} location\n                </Button>\n              </div>\n              <div>\n                <Button\n                  bsStyle='link'\n                  bsSize='small'\n                  style={{ padding: 0 }}\n                  onClick={this._swapLocation}>\n                  <Icon type='refresh' /> Change to {otherType} location\n                </Button>\n              </div>\n            </div>\n          </Popup>\n        }\n      </Marker>\n    )\n  }\n}\n"]}