{"version":3,"sources":["stops-overlay.js"],"names":["StopsOverlay","props","leaflet","map","on","_refreshStops","getZoom","minZoom","forceUpdate","bounds","getBounds","equals","lastBounds","setTimeout","refreshStops","minLat","getSouth","maxLat","getNorth","minLon","getWest","maxLon","getEast","setLocation","setViewedStop","setMainPanelContent","stops","languageConfig","mobileView","length","createStopMarker","stop","id","MapLayer","PropTypes","number","queryMode","string","array","func","StopMarker","stopId","name","lat","lon","idArr","split","radius","half","quarter","html","icon","className","iconSize","_onClickView","stopViewer","Component","bool","object","mapStateToProps","state","ownProps","otp","overlay","transit","currentQuery","mode","config","language","mapDispatchToProps","findStopsWithinBBox","clearStops"],"mappings":"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","sourcesContent":["import { divIcon } from 'leaflet'\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { FeatureGroup, MapLayer, Popup, Marker, withLeaflet } from 'react-leaflet'\nimport { Button } from 'react-bootstrap'\n\nimport SetFromToButtons from './set-from-to'\nimport { isMobile } from '../../util/ui'\nimport { findStopsWithinBBox, clearStops } from '../../actions/api'\nimport { setLocation } from '../../actions/map'\nimport { setViewedStop, setMainPanelContent } from '../../actions/ui'\n\nclass StopsOverlay extends MapLayer {\n  static propTypes = {\n    minZoom: PropTypes.number,\n    queryMode: PropTypes.string,\n    stops: PropTypes.array,\n    refreshStops: PropTypes.func\n  }\n\n  static defaultProps = {\n    minZoom: 15\n  }\n\n  componentDidMount () {\n    // set up pan/zoom listener\n    this.props.leaflet.map.on('moveend', () => {\n      this._refreshStops()\n    })\n  }\n\n  // TODO: determine why the default MapLayer componentWillUnmount() method throws an error\n  componentWillUnmount () { }\n\n  _refreshStops () {\n    if (this.props.leaflet.map.getZoom() < this.props.minZoom) {\n      this.forceUpdate()\n      return\n    }\n\n    const bounds = this.props.leaflet.map.getBounds()\n    if (!bounds.equals(this.lastBounds)) {\n      setTimeout(() => {\n        this.props.refreshStops({\n          minLat: bounds.getSouth(),\n          maxLat: bounds.getNorth(),\n          minLon: bounds.getWest(),\n          maxLon: bounds.getEast()\n        })\n        this.lastBounds = bounds\n      }, 300)\n    }\n  }\n\n  createLeafletElement () {\n  }\n\n  updateLeafletElement () {\n  }\n\n  render () {\n    const { leaflet, minZoom, setLocation, setViewedStop, setMainPanelContent, stops, languageConfig } = this.props\n    const mobileView = isMobile()\n\n    // Don't render if below zoom threshold or no stops visible\n    if (this.props.leaflet.map.getZoom() < minZoom || !stops || stops.length === 0) {\n      return <FeatureGroup />\n    }\n\n    // Helper to create StopMarker from stop\n    const createStopMarker = (stop) => <StopMarker\n      key={stop.id}\n      stop={stop}\n      leaflet={leaflet}\n      mobileView={mobileView}\n      setLocation={setLocation}\n      setViewedStop={setViewedStop}\n      setMainPanelContent={setMainPanelContent}\n      languageConfig={languageConfig}\n    />\n\n    // Singleton case; return FeatureGroup with single StopMarker\n    if (stops.length === 1) {\n      return <FeatureGroup>{createStopMarker(stops[0])}</FeatureGroup>\n    }\n\n    // Otherwise, return FeatureGroup with mapped array of StopMarkers\n    return <FeatureGroup>{stops.map(stop => createStopMarker(stop))}</FeatureGroup>\n  }\n}\n\nclass StopMarker extends Component {\n  static propTypes = {\n    mobileView: PropTypes.bool,\n    setLocation: PropTypes.func,\n    setViewedStop: PropTypes.func,\n    setMainPanelContent: PropTypes.func,\n    stop: PropTypes.object\n  }\n\n  _onClickView = () => {\n    this.props.setMainPanelContent(null)\n    this.props.setViewedStop({ stopId: this.props.stop.id })\n  }\n\n  render () {\n    const { setLocation, stop, languageConfig } = this.props\n    const { id, name, lat, lon } = stop\n    const idArr = id.split(':')\n    const radius = 20\n    const half = radius / 2\n    const quarter = radius / 4\n    const html = `<div class=\"stop-overlay-icon\" style=\"height: ${half}px; width: ${half}px; margin-left: ${quarter}px; margin-top: ${quarter}px;\" />`\n    const icon = divIcon({\n      html,\n      className: 'stop-overlay-bg',\n      iconSize: radius\n    })\n\n    return (\n      <Marker\n        position={[lat, lon]}\n        icon={icon}\n      >\n        <Popup>\n          <div className='map-overlay-popup'>\n            <div className='popup-title'>{name}</div>\n\n            <div className='popup-row'><b>Agency:</b> {idArr[0]}</div>\n            <div className='popup-row'>\n              <span><b>Stop ID:</b> {idArr[1]}</span>\n              {/* The Stop Viewer button\n                * Note: we use a vanilla Button instead of ViewStopButton because\n                * connected components don't work within react-leaflet Popups)\n                * TODO: Make ViewStopButton work here, perhaps w/ React 16 portals\n                */}\n              <Button\n                className='view-stop-button'\n                bsSize='xsmall'\n                onClick={this._onClickView}\n              >{languageConfig.stopViewer || 'Stop Viewer'}</Button>\n            </div>\n\n            {/* The \"Set as [from/to]\" ButtonGroup */}\n            <div className='popup-row'>\n              <SetFromToButtons\n                map={this.props.leaflet.map}\n                location={{ lat, lon, name }}\n                setLocation={setLocation}\n              />\n            </div>\n          </div>\n        </Popup>\n      </Marker>\n    )\n  }\n}\n\n// connect to the redux store\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    stops: state.otp.overlay.transit.stops,\n    queryMode: state.otp.currentQuery.mode,\n    languageConfig: state.otp.config.language\n  }\n}\n\nconst mapDispatchToProps = {\n  refreshStops: findStopsWithinBBox,\n  clearStops,\n  setLocation,\n  setViewedStop,\n  setMainPanelContent\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withLeaflet(StopsOverlay))\n"]}