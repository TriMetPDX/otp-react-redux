{"version":3,"sources":["base-map.js"],"names":["L","Evented","addInitHook","_singleClickTimeout","on","_scheduleSingleClick","_cancelSingleClick","include","setTimeout","_clearSingleClickTimeout","bind","e","_fireSingleClick","options","singleClickTimeout","originalEvent","_stopped","fire","Util","extend","type","clearTimeout","BaseMap","props","setMapPopupLocation","setLocation","location","popupLocation","reverseGeocode","onSetLocation","_setLocationFromPopup","setMapPopupLocationAndGeocode","latlng","onClick","name","updateOverlayVisibility","bounds","target","getBounds","equals","mapState","updateMapState","zoom","setMapZoom","oldQuery","newQuery","overlays","mode","oldModes","split","newModes","removed","filter","m","includes","added","overlayVisibility","oConfig","modes","length","overlayMode","companies","overlayCompany","Object","keys","oldProps","newProps","map","refs","padding","oldItinBounds","itinerary","fromChanged","query","from","toChanged","to","newItinBounds","leafletElement","fitBounds","activeLeg","legs","lat","lon","panTo","activeStep","leg","step","steps","_updateBounds","lmap","_onLeftClick","prevProps","_handleQueryChange","eachLayer","layer","removeLayer","config","children","diagramLeg","elevationPoint","baseLayers","showElevationProfile","Boolean","elevationProfile","userControlledOverlays","fixedOverlays","React","Children","toArray","forEach","child","push","center","initLat","initLon","elevationPointMarker","pos","initZoom","_onOverlayAdd","_onOverlayRemove","_onViewportChanged","i","retinaProps","Browser","retina","hasRetinaSupport","tileSize","zoomOffset","url","attribution","maxZoom","visible","_popupClosed","width","fontSize","marginBottom","splice","join","margin","_onClickFrom","_onClickTo","Component","PropTypes","object","mapClick","func","toggleName","element","mapStateToProps","state","ownProps","activeSearch","otp","ui","isFromSet","currentQuery","isToSet","mapPopupLocation","mapDispatchToProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEAA,iBAAEC,OAAF,CAAUC,WAAV,CAAsB,YAAY;AAChC,MAAI,IAAJ,EAAU,KAAKC,mBAAL,GAA2B,IAA3B;AACV,OAAKC,EAAL,CAAQ,OAAR,EAAiB,KAAKC,oBAAtB,EAA4C,IAA5C;AACA,OAAKD,EAAL,CAAQ,8BAAR,EAAwC,KAAKE,kBAA7C,EAAiE,IAAjE;AACD,CAJD;;AAMAN,iBAAEC,OAAF,CAAUM,OAAV,CAAkB;AAChBD,EAAAA,kBAAkB,EAAE,8BAAY;AAC9B;AACA;AACA;AACAE,IAAAA,UAAU,CAAC,KAAKC,wBAAL,CAA8BC,IAA9B,CAAmC,IAAnC,CAAD,EAA2C,CAA3C,CAAV;AACD,GANe;AAQhBL,EAAAA,oBAAoB,EAAE,8BAAUM,CAAV,EAAa;AACjC,SAAKF,wBAAL;;AAEA,SAAKN,mBAAL,GAA2BK,UAAU,CACnC,KAAKI,gBAAL,CAAsBF,IAAtB,CAA2B,IAA3B,EAAiCC,CAAjC,CADmC,EAElC,KAAKE,OAAL,CAAaC,kBAAb,IAAmC,GAFD,CAArC;AAID,GAfe;AAiBhBF,EAAAA,gBAAgB,EAAE,0BAAUD,CAAV,EAAa;AAC7B,QAAI,CAACA,CAAC,CAACI,aAAF,CAAgBC,QAArB,EAA+B;AAC7B,WAAKC,IAAL,CAAU,aAAV,EAAyBjB,iBAAEkB,IAAF,CAAOC,MAAP,CAAcR,CAAd,EAAiB;AAAES,QAAAA,IAAI,EAAE;AAAR,OAAjB,CAAzB;AACD;AACF,GArBe;AAuBhBX,EAAAA,wBAAwB,EAAE,oCAAY;AACpC,QAAI,KAAKN,mBAAL,KAA6B,IAAjC,EAAuC;AACrCkB,MAAAA,YAAY,CAAC,KAAKlB,mBAAN,CAAZ;AACA,WAAKA,mBAAL,GAA2B,IAA3B;AACD;AACF;AA5Be,CAAlB;;IA+BMmB,O;;;;;;;;;;;;;;;;;;4EAUoB,UAACF,IAAD,EAAU;AAAA,wBACsC,MAAKG,KAD3C;AAAA,UACxBC,mBADwB,eACxBA,mBADwB;AAAA,UACHC,WADG,eACHA,WADG;AAAA,UACyBC,QADzB,eACUC,aADV;AAEhCH,MAAAA,mBAAmB,CAAC;AAAEE,QAAAA,QAAQ,EAAE;AAAZ,OAAD,CAAnB;AACAD,MAAAA,WAAW,CAAC;AAAEL,QAAAA,IAAI,EAAJA,IAAF;AAAQM,QAAAA,QAAQ,EAARA,QAAR;AAAkBE,QAAAA,cAAc,EAAE;AAAlC,OAAD,CAAX;;AACA,UAAI,OAAO,MAAKL,KAAL,CAAWM,aAAlB,KAAoC,UAAxC,EAAoD;AAClD,cAAKN,KAAL,CAAWM,aAAX,CAAyB;AAACT,UAAAA,IAAI,EAAJA,IAAD;AAAOM,UAAAA,QAAQ,EAARA;AAAP,SAAzB;AACD;AACF,K;;iEAEY;AAAA,aAAM,MAAKI,qBAAL,CAA2B,IAA3B,CAAN;AAAA,K;;mEAEE;AAAA,aAAM,MAAKA,qBAAL,CAA2B,MAA3B,CAAN;AAAA,K;;mEAEA,UAACnB,CAAD,EAAO;AACpB,YAAKY,KAAL,CAAWQ,6BAAX,CAAyC;AAAEL,QAAAA,QAAQ,EAAE,6BAAkBf,CAAC,CAACqB,MAApB;AAAZ,OAAzC;;AACA,UAAI,OAAO,MAAKT,KAAL,CAAWU,OAAlB,KAA8B,UAAlC,EAA8C,MAAKV,KAAL,CAAWU,OAAX,CAAmBtB,CAAnB;AAC/C,K;;oEAEe;AAAA,UAAGuB,IAAH,QAAGA,IAAH;AAAA,aAAc,MAAKX,KAAL,CAAWY,uBAAX,qBAAsCD,IAAtC,EAA6C,IAA7C,EAAd;AAAA,K;;uEAEG;AAAA,UAAGA,IAAH,SAAGA,IAAH;AAAA,aAAc,MAAKX,KAAL,CAAWY,uBAAX,qBAAsCD,IAAtC,EAA6C,KAA7C,EAAd;AAAA,K;;wEAGC,UAAAvB,CAAC,EAAI;AACvB,UAAMyB,MAAM,GAAGzB,CAAC,CAAC0B,MAAF,CAASC,SAAT,EAAf;;AACA,UAAI,CAACF,MAAM,CAACG,MAAP,CAAc,MAAKhB,KAAL,CAAWiB,QAAX,CAAoBJ,MAAlC,CAAL,EAAgD;AAC9C,cAAKb,KAAL,CAAWkB,cAAX,CAA0B;AAAEL,UAAAA,MAAM,EAANA;AAAF,SAA1B;AACD;AACF,K;;yEAEoB;AAAA,UAAGM,IAAH,SAAGA,IAAH;AAAA,aAAc,MAAKnB,KAAL,CAAWoB,UAAX,CAAsB;AAAED,QAAAA,IAAI,EAAJA;AAAF,OAAtB,CAAd;AAAA,K;;mEA4DN;AAAA,aAAM,MAAKnB,KAAL,CAAWC,mBAAX,CAA+B;AAAEE,QAAAA,QAAQ,EAAE;AAAZ,OAA/B,CAAN;AAAA,K;;yEAOM,UAACkB,QAAD,EAAWC,QAAX,EAAwB;AAAA,UACnCC,QADmC,GACtB,MAAKvB,KADiB,CACnCuB,QADmC;;AAE3C,UAAIA,QAAQ,IAAIF,QAAQ,CAACG,IAAzB,EAA+B;AAC7B;AACA,YAAMC,QAAQ,GAAGJ,QAAQ,CAACG,IAAT,CAAcE,KAAd,CAAoB,GAApB,CAAjB;AACA,YAAMC,QAAQ,GAAGL,QAAQ,CAACE,IAAT,CAAcE,KAAd,CAAoB,GAApB,CAAjB;AACA,YAAME,OAAO,GAAGH,QAAQ,CAACI,MAAT,CAAgB,UAAAC,CAAC;AAAA,iBAAI,CAACH,QAAQ,CAACI,QAAT,CAAkBD,CAAlB,CAAL;AAAA,SAAjB,CAAhB;AACA,YAAME,KAAK,GAAGL,QAAQ,CAACE,MAAT,CAAgB,UAAAC,CAAC;AAAA,iBAAI,CAACL,QAAQ,CAACM,QAAT,CAAkBD,CAAlB,CAAL;AAAA,SAAjB,CAAd;AACA,YAAMG,iBAAiB,GAAG,EAA1B;AAN6B;AAAA;AAAA;;AAAA;AAO7B,+BAAsBV,QAAtB,8HAAgC;AAAA,gBAArBW,OAAqB;AAC9B,gBAAI,CAACA,OAAO,CAACC,KAAT,IAAkBD,OAAO,CAACC,KAAR,CAAcC,MAAd,KAAyB,CAA/C,EAAkD,SADpB,CAE9B;;AACA,gBAAMC,WAAW,GAAGH,OAAO,CAACC,KAAR,CAAc,CAAd,CAApB;;AAEA,gBACE,CACEE,WAAW,KAAK,UAAhB,IACAA,WAAW,KAAK,UADhB,IAEAA,WAAW,KAAK,oBAHlB,KAKAH,OAAO,CAACI,SANV,EAOE;AACA;AACA,kBAAMC,cAAc,GAAGL,OAAO,CAACI,SAAR,CAAkB,CAAlB,CAAvB,CAFA,CAE4C;;AAC5C,kBAAIN,KAAK,CAACD,QAAN,CAAeM,WAAf,CAAJ,EAAiC;AAC/B;AACA,oBAAIf,QAAQ,CAACgB,SAAT,CAAmBP,QAAnB,CAA4BQ,cAA5B,CAAJ,EAAiDN,iBAAiB,CAACC,OAAO,CAACvB,IAAT,CAAjB,GAAkC,IAAlC;AAClD,eAHD,MAGO,IAAIiB,OAAO,CAACG,QAAR,CAAiBM,WAAjB,CAAJ,EAAmC;AACxC;AACAJ,gBAAAA,iBAAiB,CAACC,OAAO,CAACvB,IAAT,CAAjB,GAAkC,KAAlC;AACD,eAHM,MAGA,IAAIgB,QAAQ,CAACI,QAAT,CAAkBM,WAAlB,KAAkChB,QAAQ,CAACiB,SAAT,KAAuBhB,QAAQ,CAACgB,SAAtE,EAAiF;AACtF;AACAL,gBAAAA,iBAAiB,CAACC,OAAO,CAACvB,IAAT,CAAjB,GAAkCW,QAAQ,CAACgB,SAAT,CAAmBP,QAAnB,CAA4BQ,cAA5B,CAAlC;AACD;AACF,aApBD,MAoBO;AAAE;AACP,kBAAIP,KAAK,CAACD,QAAN,CAAeM,WAAf,CAAJ,EAAiCJ,iBAAiB,CAACC,OAAO,CAACvB,IAAT,CAAjB,GAAkC,IAAlC;AACjC,kBAAIiB,OAAO,CAACG,QAAR,CAAiBM,WAAjB,CAAJ,EAAmCJ,iBAAiB,CAACC,OAAO,CAACvB,IAAT,CAAjB,GAAkC,KAAlC;AACpC;AACF,WApC4B,CAqC7B;;AArC6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAsC7B,YAAI6B,MAAM,CAACC,IAAP,CAAYR,iBAAZ,EAA+BG,MAA/B,GAAwC,CAA5C,EAA+C;AAC7C,gBAAKpC,KAAL,CAAWY,uBAAX,CAAmCqB,iBAAnC;AACD;AACF;AACF,K;;;;;;;kCA7GcS,Q,EAAUC,Q,EAAU;AACjC;AAEAD,MAAAA,QAAQ,GAAGA,QAAQ,IAAI,EAAvB;AACAC,MAAAA,QAAQ,GAAGA,QAAQ,IAAI,EAAvB,CAJiC,CAMjC;;AACA,UAAID,QAAQ,CAACtC,aAAT,IAA0BuC,QAAQ,CAACvC,aAAvC,EAAsD;AAPrB,UASzBwC,GATyB,GASjB,KAAKC,IATY,CASzBD,GATyB;AAUjC,UAAI,CAACA,GAAL,EAAU;AAEV,UAAME,OAAO,GAAG,CAAC,EAAD,EAAK,EAAL,CAAhB,CAZiC,CAcjC;;AACA,UAAMC,aAAa,GAAGL,QAAQ,CAACM,SAAT,IAAsB,mCAAmBN,QAAQ,CAACM,SAA5B,CAA5C;AACA,UAAMC,WAAW,GAAG,CAAC,qBAAQP,QAAQ,CAACQ,KAAT,IAAkBR,QAAQ,CAACQ,KAAT,CAAeC,IAAzC,EAA+CR,QAAQ,CAACO,KAAT,IAAkBP,QAAQ,CAACO,KAAT,CAAeC,IAAhF,CAArB;AACA,UAAMC,SAAS,GAAG,CAAC,qBAAQV,QAAQ,CAACQ,KAAT,IAAkBR,QAAQ,CAACQ,KAAT,CAAeG,EAAzC,EAA6CV,QAAQ,CAACO,KAAT,IAAkBP,QAAQ,CAACO,KAAT,CAAeG,EAA9E,CAAnB;AACA,UAAMC,aAAa,GAAGX,QAAQ,CAACK,SAAT,IAAsB,mCAAmBL,QAAQ,CAACK,SAA5B,CAA5C;;AACA,UACG,CAACD,aAAD,IAAkBO,aAAnB,IACCP,aAAa,IAAIO,aAAjB,IAAkC,CAACP,aAAa,CAAC/B,MAAd,CAAqBsC,aAArB,CAFtC,EAGE;AACAV,QAAAA,GAAG,CAACW,cAAJ,CAAmBC,SAAnB,CAA6BF,aAA7B,EAA4C;AAAER,UAAAA,OAAO,EAAPA;AAAF,SAA5C,EADA,CAGF;AACC,OAPD,MAOO,IAAIH,QAAQ,CAACK,SAAT,IAAsBL,QAAQ,CAACc,SAAT,KAAuBf,QAAQ,CAACe,SAAtD,IAAmEd,QAAQ,CAACc,SAAT,KAAuB,IAA9F,EAAoG;AACzGb,QAAAA,GAAG,CAACW,cAAJ,CAAmBC,SAAnB,CACE,6BAAab,QAAQ,CAACK,SAAT,CAAmBU,IAAnB,CAAwBf,QAAQ,CAACc,SAAjC,CAAb,CADF,EAEE;AAAEX,UAAAA,OAAO,EAAPA;AAAF,SAFF,EADyG,CAM3G;AACC,OAPM,MAOA,IAAIH,QAAQ,CAACO,KAAT,CAAeC,IAAf,IAAuBR,QAAQ,CAACO,KAAT,CAAeG,EAAtC,KAA6CJ,WAAW,IAAIG,SAA5D,CAAJ,EAA4E;AACjFR,QAAAA,GAAG,CAACW,cAAJ,CAAmBC,SAAnB,CAA6B,CAC3B,CAACb,QAAQ,CAACO,KAAT,CAAeC,IAAf,CAAoBQ,GAArB,EAA0BhB,QAAQ,CAACO,KAAT,CAAeC,IAAf,CAAoBS,GAA9C,CAD2B,EAE3B,CAACjB,QAAQ,CAACO,KAAT,CAAeG,EAAf,CAAkBM,GAAnB,EAAwBhB,QAAQ,CAACO,KAAT,CAAeG,EAAf,CAAkBO,GAA1C,CAF2B,CAA7B,EAGG;AAAEd,UAAAA,OAAO,EAAPA;AAAF,SAHH,EADiF,CAMnF;AACC,OAPM,MAOA,IAAIH,QAAQ,CAACO,KAAT,CAAeC,IAAf,IAAuBF,WAA3B,EAAwC;AAC7CL,QAAAA,GAAG,CAACW,cAAJ,CAAmBM,KAAnB,CAAyB,CAAClB,QAAQ,CAACO,KAAT,CAAeC,IAAf,CAAoBQ,GAArB,EAA0BhB,QAAQ,CAACO,KAAT,CAAeC,IAAf,CAAoBS,GAA9C,CAAzB;AACD,OAFM,MAEA,IAAIjB,QAAQ,CAACO,KAAT,CAAeG,EAAf,IAAqBD,SAAzB,EAAoC;AACzCR,QAAAA,GAAG,CAACW,cAAJ,CAAmBM,KAAnB,CAAyB,CAAClB,QAAQ,CAACO,KAAT,CAAeG,EAAf,CAAkBM,GAAnB,EAAwBhB,QAAQ,CAACO,KAAT,CAAeG,EAAf,CAAkBO,GAA1C,CAAzB,EADyC,CAG3C;AACC,OAJM,MAIA,IACLjB,QAAQ,CAACK,SAAT,IACAL,QAAQ,CAACc,SAAT,KAAuB,IADvB,IAEAd,QAAQ,CAACmB,UAAT,KAAwB,IAFxB,IAGAnB,QAAQ,CAACmB,UAAT,KAAwBpB,QAAQ,CAACoB,UAJ5B,EAKL;AACA,YAAMC,GAAG,GAAGpB,QAAQ,CAACK,SAAT,CAAmBU,IAAnB,CAAwBf,QAAQ,CAACc,SAAjC,CAAZ;AACA,YAAMO,IAAI,GAAGD,GAAG,CAACE,KAAJ,CAAUtB,QAAQ,CAACmB,UAAnB,CAAb;AACAlB,QAAAA,GAAG,CAACW,cAAJ,CAAmBM,KAAnB,CAAyB,CAACG,IAAI,CAACL,GAAN,EAAWK,IAAI,CAACJ,GAAhB,CAAzB;AACD;AACF;;;;AAuDD;wCAEqB;AAAA;;AACnB,WAAKM,aAAL,CAAmB,IAAnB,EAAyB,KAAKlE,KAA9B;;AAEA,UAAMmE,IAAI,GAAG,KAAKtB,IAAL,CAAUD,GAAV,CAAcW,cAA3B;AACAY,MAAAA,IAAI,CAAC7E,OAAL,CAAaC,kBAAb,GAAkC,GAAlC;AACA4E,MAAAA,IAAI,CAACtF,EAAL,CAAQ,aAAR,EAAuB,UAACO,CAAD,EAAO;AAAE,QAAA,MAAI,CAACgF,YAAL,CAAkBhF,CAAlB;AAAsB,OAAtD;AACD;;;uCAEmBiF,S,EAAW;AAC7B,WAAKH,aAAL,CAAmBG,SAAnB,EAA8B,KAAKrE,KAAnC,EAD6B,CAE7B;;;AACA,WAAKsE,kBAAL,CAAwBD,SAAS,CAACnB,KAAlC,EAAyC,KAAKlD,KAAL,CAAWkD,KAApD;AACD,K,CAED;AACA;;;;2CACwB;AACtB,UAAMiB,IAAI,GAAG,KAAKtB,IAAL,CAAUD,GAAV,CAAcW,cAA3B;AACAY,MAAAA,IAAI,CAACI,SAAL,CAAe,UAACC,KAAD,EAAW;AACxBL,QAAAA,IAAI,CAACM,WAAL,CAAiBD,KAAjB;AACD,OAFD;AAGD;;;6BAES;AAAA,yBACgE,KAAKxE,KADrE;AAAA,UACA0E,MADA,gBACAA,MADA;AAAA,UACQC,QADR,gBACQA,QADR;AAAA,UACkBC,UADlB,gBACkBA,UADlB;AAAA,UAC8BC,cAD9B,gBAC8BA,cAD9B;AAAA,UAC8CzE,aAD9C,gBAC8CA,aAD9C;AAAA,UAEA0E,UAFA,GAEeJ,MAAM,CAAC9B,GAFtB,CAEAkC,UAFA;AAGR,UAAMC,oBAAoB,GAAGC,OAAO,CAACN,MAAM,CAACO,gBAAR,CAApC,CAHQ,CAIR;AACA;AACA;;AACA,UAAMC,sBAAsB,GAAG,EAA/B;AACA,UAAMC,aAAa,GAAG,EAAtB;;AACAC,qBAAMC,QAAN,CACGC,OADH,CACWX,QADX,EAEGY,OAFH,CAEW,UAAAC,KAAK,EAAI;AAChB,YAAIA,KAAK,CAACxF,KAAN,CAAYW,IAAhB,EAAsBuE,sBAAsB,CAACO,IAAvB,CAA4BD,KAA5B,EAAtB,KACKL,aAAa,CAACM,IAAd,CAAmBD,KAAnB;AACN,OALH;;AAOA,UAAME,MAAM,GAAGhB,MAAM,CAAC9B,GAAP,IAAc8B,MAAM,CAAC9B,GAAP,CAAW+C,OAAzB,IAAoCjB,MAAM,CAAC9B,GAAP,CAAWgD,OAA/C,GACX,CAAClB,MAAM,CAAC9B,GAAP,CAAW+C,OAAZ,EAAqBjB,MAAM,CAAC9B,GAAP,CAAWgD,OAAhC,CADW,GAEX,IAFJ,CAhBQ,CAoBR;;AACA,UAAIC,oBAAoB,GAAG,IAA3B;;AACA,UAAId,oBAAoB,IAAIH,UAAxB,IAAsCC,cAA1C,EAA0D;AACxD,YAAMiB,GAAG,GAAG,sCAAsBlB,UAAtB,EAAkCC,cAAlC,CAAZ;;AACA,YAAIiB,GAAJ,EAAS;AACPD,UAAAA,oBAAoB,GAClB,6BAAC,0BAAD;AACE,YAAA,MAAM,EAAEC,GADV;AAEE,YAAA,SAAS,EAAC,SAFZ;AAGE,YAAA,MAAM,EAAE,CAHV;AAIE,YAAA,KAAK,EAAC,MAJR;AAKE,YAAA,OAAO,EAAE,GALX;AAME,YAAA,MAAM,EAAE,CANV;AAOE,YAAA,IAAI,MAPN;AAQE,YAAA,WAAW,EAAE;AARf,YADF;AAWD;AACF;;AAED,aACE,6BAAC,iBAAD;AACE,QAAA,GAAG,EAAC,KADN;AAEE,QAAA,SAAS,EAAC,KAFZ;AAGE,QAAA,MAAM,EAAEJ,MAHV,CAIE;AAJF;AAKE,QAAA,IAAI,EAAEhB,MAAM,CAAC9B,GAAP,CAAWmD,QAAX,IAAuB,EAL/B;AAME,QAAA,YAAY,EAAE,KAAKC,aANrB;AAOE,QAAA,eAAe,EAAE,KAAKC,gBAPxB;AAQE,QAAA,iBAAiB,EAAE,KAAKC;AACxB;;AATF,SAaE,6BAAC,2BAAD;AAAe,QAAA,QAAQ,EAAC;AAAxB;AACG;AACCpB,MAAAA,UAAU,IAAIA,UAAU,CAAClC,GAAX,CAAe,UAAC4B,KAAD,EAAQ2B,CAAR,EAAc;AACzC;AACA,YAAMC,WAAW,GAAG3H,iBAAE4H,OAAF,CAAUC,MAAV,IAAoB9B,KAAK,CAAC+B,gBAA1B,GAChB;AAAEC,UAAAA,QAAQ,EAAE,GAAZ;AAAiBC,UAAAA,UAAU,EAAE,CAAC;AAA9B,SADgB,GAEhB,EAFJ;AAGA,eACE,6BAAC,2BAAD,CAAe,SAAf;AACE,UAAA,IAAI,EAAEjC,KAAK,CAAC7D,IADd;AAEE,UAAA,OAAO,EAAEwF,CAAC,KAAK,CAFjB;AAGE,UAAA,GAAG,EAAEA;AAHP,WAIE,6BAAC,uBAAD;AACE,UAAA,GAAG,EAAE3B,KAAK,CAACkC,GADb;AAEE,UAAA,WAAW,EAAElC,KAAK,CAACmC,WAFrB;AAGE,UAAA,OAAO,EAAEnC,KAAK,CAACoC;AAHjB,WAIMR,WAJN;AAKE,UAAA,YAAY;AALd,WAJF,CADF;AAaD,OAlBa,CAFlB;AAuBG;AACClB,MAAAA,sBAAsB,CAACtC,GAAvB,CAA2B,UAAC4C,KAAD,EAAQW,CAAR,EAAc;AACvC,eACE,6BAAC,2BAAD,CAAe,OAAf;AACE,UAAA,GAAG,EAAEA,CADP;AAEE,UAAA,IAAI,EAAEX,KAAK,CAACxF,KAAN,CAAYW,IAFpB;AAGE,UAAA,OAAO,EAAE6E,KAAK,CAACxF,KAAN,CAAY6G;AAHvB,WAKGrB,KALH,CADF;AASD,OAVD,CAxBJ,CAbF,EAoDGL,aApDH,EAuDG/E,aAAa,IACZ,6BAAC,mBAAD;AAAO,QAAA,GAAG,EAAC,YAAX;AACE,QAAA,QAAQ,EAAE,CAACA,aAAa,CAACuD,GAAf,EAAoBvD,aAAa,CAACwD,GAAlC,CADZ;AAEE,QAAA,OAAO,EAAE,KAAKkD;AAFhB,SAIE;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT;AAAZ,SACE;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,QAAQ,EAAE,EAAZ;AAAgBC,UAAAA,YAAY,EAAE;AAA9B;AAAZ,SACG7G,aAAa,CAACO,IAAd,CAAmBe,KAAnB,CAAyB,GAAzB,EAA8BU,MAA9B,GAAuC,CAAvC,GACGhC,aAAa,CAACO,IAAd,CAAmBe,KAAnB,CAAyB,GAAzB,EAA8BwF,MAA9B,CAAqC,CAArC,EAAwC,CAAxC,EAA2CC,IAA3C,CAAgD,GAAhD,CADH,GAEG/G,aAAa,CAACO,IAHpB,CADF,EAOE,0DAEE;AAAM,QAAA,KAAK,EAAE;AAAEyG,UAAAA,MAAM,EAAE;AAAV;AAAb,SAAoC,6BAAC,qBAAD;AAAc,QAAA,IAAI,EAAC;AAAnB,QAApC,CAFF,EAGE;AAAQ,QAAA,SAAS,EAAC,aAAlB;AACE,QAAA,OAAO,EAAE,KAAKC;AADhB,qBAHF,EAMY,GANZ,OAMkB,GANlB,EAOE;AAAM,QAAA,KAAK,EAAE;AAAED,UAAAA,MAAM,EAAE;AAAV;AAAb,SAAoC,6BAAC,qBAAD;AAAc,QAAA,IAAI,EAAC;AAAnB,QAApC,CAPF,EAQE;AAAQ,QAAA,SAAS,EAAC,aAAlB;AACE,QAAA,OAAO,EAAE,KAAKE;AADhB,mBARF,CAPF,CAJF,CAxDJ,EAqFGzB,oBArFH,CADF;AAyFD;;;;EAlTmB0B,gB,GAqTtB;;;gBArTMxH,O,eACe;AACjB2E,EAAAA,MAAM,EAAE8C,mBAAUC,MADD;AAEjBC,EAAAA,QAAQ,EAAEF,mBAAUG,IAFH;AAGjBzH,EAAAA,WAAW,EAAEsH,mBAAUG,IAHN;AAGY;AAC7BC,EAAAA,UAAU,EAAEJ,mBAAUK;AAJL,C;;AAsTrB,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,QAAR,EAAqB;AAC3C,MAAMC,YAAY,GAAG,4BAAgBF,KAAK,CAACG,GAAtB,CAArB;AACA,MAAM3G,QAAQ,GAAGwG,KAAK,CAACG,GAAN,CAAUxD,MAAV,CAAiB9B,GAAjB,IAAwBmF,KAAK,CAACG,GAAN,CAAUxD,MAAV,CAAiB9B,GAAjB,CAAqBrB,QAA7C,GACbwG,KAAK,CAACG,GAAN,CAAUxD,MAAV,CAAiB9B,GAAjB,CAAqBrB,QADR,GAEb,EAFJ;AAGA,SAAO;AACLkC,IAAAA,SAAS,EAAEwE,YAAY,IAAIA,YAAY,CAACxE,SADnC;AAELK,IAAAA,UAAU,EAAEmE,YAAY,IAAIA,YAAY,CAACnE,UAFpC;AAGLY,IAAAA,MAAM,EAAEqD,KAAK,CAACG,GAAN,CAAUxD,MAHb;AAILE,IAAAA,UAAU,EAAEmD,KAAK,CAACG,GAAN,CAAUC,EAAV,CAAavD,UAJpB;AAKLC,IAAAA,cAAc,EAAEkD,KAAK,CAACG,GAAN,CAAUC,EAAV,CAAatD,cALxB;AAML5D,IAAAA,QAAQ,EAAE8G,KAAK,CAACG,GAAN,CAAUjH,QANf;AAOLmH,IAAAA,SAAS,EACPL,KAAK,CAACG,GAAN,CAAUG,YAAV,CAAuBlF,IAAvB,IACA4E,KAAK,CAACG,GAAN,CAAUG,YAAV,CAAuBlF,IAAvB,CAA4BQ,GAA5B,KAAoC,IADpC,IAEAoE,KAAK,CAACG,GAAN,CAAUG,YAAV,CAAuBlF,IAAvB,CAA4BS,GAA5B,KAAoC,IAVjC;AAWL0E,IAAAA,OAAO,EACLP,KAAK,CAACG,GAAN,CAAUG,YAAV,CAAuBhF,EAAvB,IACA0E,KAAK,CAACG,GAAN,CAAUG,YAAV,CAAuBhF,EAAvB,CAA0BM,GAA1B,KAAkC,IADlC,IAEAoE,KAAK,CAACG,GAAN,CAAUG,YAAV,CAAuBhF,EAAvB,CAA0BO,GAA1B,KAAkC,IAd/B;AAeLZ,IAAAA,SAAS,EAAE,+BAAmB+E,KAAK,CAACG,GAAzB,CAfN;AAgBL3G,IAAAA,QAAQ,EAARA,QAhBK;AAiBLnB,IAAAA,aAAa,EAAE2H,KAAK,CAACG,GAAN,CAAUC,EAAV,CAAaI,gBAjBvB;AAkBLrF,IAAAA,KAAK,EAAE6E,KAAK,CAACG,GAAN,CAAUG;AAlBZ,GAAP;AAoBD,CAzBD;;AA2BA,IAAMG,kBAAkB,GAAG;AACzBtI,EAAAA,WAAW,EAAXA,gBADyB;AAEzBD,EAAAA,mBAAmB,EAAnBA,wBAFyB;AAGzBO,EAAAA,6BAA6B,EAA7BA,kCAHyB;AAIzBY,EAAAA,UAAU,EAAVA,kBAJyB;AAKzBR,EAAAA,uBAAuB,EAAvBA;AALyB,CAA3B;;eAQe,yBAAQkH,eAAR,EAAyBU,kBAAzB,EAA6CzI,OAA7C,C","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport isEqual from 'lodash.isequal'\n\nimport { Map, TileLayer, LayersControl, Popup, CircleMarker } from 'react-leaflet'\n\nimport { setLocation, setMapPopupLocation, setMapPopupLocationAndGeocode } from '../../actions/map'\nimport { setMapZoom, updateOverlayVisibility } from '../../actions/config'\nimport LocationIcon from '../icons/location-icon'\nimport { constructLocation } from '../../util/map'\nimport { getActiveItinerary, getActiveSearch } from '../../util/state'\nimport { getItineraryBounds, getLegBounds, legLocationAtDistance } from '../../util/itinerary'\n\nimport L from 'leaflet'\n\nL.Evented.addInitHook(function () {\n  if (this) this._singleClickTimeout = null\n  this.on('click', this._scheduleSingleClick, this)\n  this.on('dblclick dragstart zoomstart', this._cancelSingleClick, this)\n})\n\nL.Evented.include({\n  _cancelSingleClick: function () {\n    // This timeout is key to workaround an issue where double-click events\n    // are fired in this order on some touch browsers: ['click', 'dblclick', 'click']\n    // instead of ['click', 'click', 'dblclick']\n    setTimeout(this._clearSingleClickTimeout.bind(this), 0)\n  },\n\n  _scheduleSingleClick: function (e) {\n    this._clearSingleClickTimeout()\n\n    this._singleClickTimeout = setTimeout(\n      this._fireSingleClick.bind(this, e),\n      (this.options.singleClickTimeout || 500)\n    )\n  },\n\n  _fireSingleClick: function (e) {\n    if (!e.originalEvent._stopped) {\n      this.fire('singleclick', L.Util.extend(e, { type: 'singleclick' }))\n    }\n  },\n\n  _clearSingleClickTimeout: function () {\n    if (this._singleClickTimeout !== null) {\n      clearTimeout(this._singleClickTimeout)\n      this._singleClickTimeout = null\n    }\n  }\n})\n\nclass BaseMap extends Component {\n  static propTypes = {\n    config: PropTypes.object,\n    mapClick: PropTypes.func,\n    setLocation: PropTypes.func, // TODO: rename from action name to avoid namespace conflict?\n    toggleName: PropTypes.element\n  }\n\n  /* Internal Methods */\n\n  _setLocationFromPopup = (type) => {\n    const { setMapPopupLocation, setLocation, popupLocation: location } = this.props\n    setMapPopupLocation({ location: null })\n    setLocation({ type, location, reverseGeocode: true })\n    if (typeof this.props.onSetLocation === 'function') {\n      this.props.onSetLocation({type, location})\n    }\n  }\n\n  _onClickTo = () => this._setLocationFromPopup('to')\n\n  _onClickFrom = () => this._setLocationFromPopup('from')\n\n  _onLeftClick = (e) => {\n    this.props.setMapPopupLocationAndGeocode({ location: constructLocation(e.latlng) })\n    if (typeof this.props.onClick === 'function') this.props.onClick(e)\n  }\n\n  _onOverlayAdd = ({ name }) => this.props.updateOverlayVisibility({ [name]: true })\n\n  _onOverlayRemove = ({ name }) => this.props.updateOverlayVisibility({ [name]: false })\n\n  // TODO: make map controlled component\n  _mapBoundsChanged = e => {\n    const bounds = e.target.getBounds()\n    if (!bounds.equals(this.props.mapState.bounds)) {\n      this.props.updateMapState({ bounds })\n    }\n  }\n\n  _onViewportChanged = ({ zoom }) => this.props.setMapZoom({ zoom })\n\n  _updateBounds (oldProps, newProps) {\n    // TODO: maybe setting bounds ought to be handled in map props...\n\n    oldProps = oldProps || {}\n    newProps = newProps || {}\n\n    // Don't auto-fit if popup us active\n    if (oldProps.popupLocation || newProps.popupLocation) return\n\n    const { map } = this.refs\n    if (!map) return\n\n    const padding = [30, 30]\n\n    // Fit map to to entire itinerary if active itinerary bounds changed\n    const oldItinBounds = oldProps.itinerary && getItineraryBounds(oldProps.itinerary)\n    const fromChanged = !isEqual(oldProps.query && oldProps.query.from, newProps.query && newProps.query.from)\n    const toChanged = !isEqual(oldProps.query && oldProps.query.to, newProps.query && newProps.query.to)\n    const newItinBounds = newProps.itinerary && getItineraryBounds(newProps.itinerary)\n    if (\n      (!oldItinBounds && newItinBounds) ||\n      (oldItinBounds && newItinBounds && !oldItinBounds.equals(newItinBounds))\n    ) {\n      map.leafletElement.fitBounds(newItinBounds, { padding })\n\n    // Pan to to itinerary leg if made active (clicked); newly active leg must be non-null\n    } else if (newProps.itinerary && newProps.activeLeg !== oldProps.activeLeg && newProps.activeLeg !== null) {\n      map.leafletElement.fitBounds(\n        getLegBounds(newProps.itinerary.legs[newProps.activeLeg]),\n        { padding }\n      )\n\n    // If no itinerary update but from/to locations are present, fit to those\n    } else if (newProps.query.from && newProps.query.to && (fromChanged || toChanged)) {\n      map.leafletElement.fitBounds([\n        [newProps.query.from.lat, newProps.query.from.lon],\n        [newProps.query.to.lat, newProps.query.to.lon]\n      ], { padding })\n\n    // If only from or to is set, pan to that\n    } else if (newProps.query.from && fromChanged) {\n      map.leafletElement.panTo([newProps.query.from.lat, newProps.query.from.lon])\n    } else if (newProps.query.to && toChanged) {\n      map.leafletElement.panTo([newProps.query.to.lat, newProps.query.to.lon])\n\n    // Pan to to itinerary step if made active (clicked)\n    } else if (\n      newProps.itinerary &&\n      newProps.activeLeg !== null &&\n      newProps.activeStep !== null &&\n      newProps.activeStep !== oldProps.activeStep\n    ) {\n      const leg = newProps.itinerary.legs[newProps.activeLeg]\n      const step = leg.steps[newProps.activeStep]\n      map.leafletElement.panTo([step.lat, step.lon])\n    }\n  }\n\n  _popupClosed = () => this.props.setMapPopupLocation({ location: null })\n\n  /**\n   * Checks whether the modes have changed between old and new queries and\n   * whether to update the map overlays accordingly (e.g., to show rental vehicle\n   * options on the map).\n   */\n  _handleQueryChange = (oldQuery, newQuery) => {\n    const { overlays } = this.props\n    if (overlays && oldQuery.mode) {\n      // Determine any added/removed modes\n      const oldModes = oldQuery.mode.split(',')\n      const newModes = newQuery.mode.split(',')\n      const removed = oldModes.filter(m => !newModes.includes(m))\n      const added = newModes.filter(m => !oldModes.includes(m))\n      const overlayVisibility = {}\n      for (const oConfig of overlays) {\n        if (!oConfig.modes || oConfig.modes.length !== 1) continue\n        // TODO: support multi-mode overlays\n        const overlayMode = oConfig.modes[0]\n\n        if (\n          (\n            overlayMode === 'CAR_RENT' ||\n            overlayMode === 'CAR_HAIL' ||\n            overlayMode === 'MICROMOBILITY_RENT'\n          ) &&\n          oConfig.companies\n        ) {\n          // Special handling for company-based mode overlays (e.g. carshare, car-hail)\n          const overlayCompany = oConfig.companies[0] // TODO: handle multi-company overlays\n          if (added.includes(overlayMode)) {\n            // Company-based mode was just selected; enable overlay iff overlay's company is active\n            if (newQuery.companies.includes(overlayCompany)) overlayVisibility[oConfig.name] = true\n          } else if (removed.includes(overlayMode)) {\n            // Company-based mode was just deselected; disable overlay (regardless of company)\n            overlayVisibility[oConfig.name] = false\n          } else if (newModes.includes(overlayMode) && oldQuery.companies !== newQuery.companies) {\n            // Company-based mode remains selected but companies change\n            overlayVisibility[oConfig.name] = newQuery.companies.includes(overlayCompany)\n          }\n        } else { // Default handling for other modes\n          if (added.includes(overlayMode)) overlayVisibility[oConfig.name] = true\n          if (removed.includes(overlayMode)) overlayVisibility[oConfig.name] = false\n        }\n      }\n      // Only trigger update action if there are overlays to update.\n      if (Object.keys(overlayVisibility).length > 0) {\n        this.props.updateOverlayVisibility(overlayVisibility)\n      }\n    }\n  }\n\n  /* React Lifecycle methods */\n\n  componentDidMount () {\n    this._updateBounds(null, this.props)\n\n    const lmap = this.refs.map.leafletElement\n    lmap.options.singleClickTimeout = 250\n    lmap.on('singleclick', (e) => { this._onLeftClick(e) })\n  }\n\n  componentDidUpdate (prevProps) {\n    this._updateBounds(prevProps, this.props)\n    // Check if any overlays should be toggled due to mode change\n    this._handleQueryChange(prevProps.query, this.props.query)\n  }\n\n  // remove custom overlays on unmount\n  // TODO: Is this needed? It may have something to do with mobile vs desktop views\n  componentWillUnmount () {\n    const lmap = this.refs.map.leafletElement\n    lmap.eachLayer((layer) => {\n      lmap.removeLayer(layer)\n    })\n  }\n\n  render () {\n    const { config, children, diagramLeg, elevationPoint, popupLocation } = this.props\n    const { baseLayers } = config.map\n    const showElevationProfile = Boolean(config.elevationProfile)\n    // Separate overlay layers into user-controlled (those with a checkbox in\n    // the layer control) and those that are needed by the app (e.g., stop viewer\n    // and itinerary overlay).\n    const userControlledOverlays = []\n    const fixedOverlays = []\n    React.Children\n      .toArray(children)\n      .forEach(child => {\n        if (child.props.name) userControlledOverlays.push(child)\n        else fixedOverlays.push(child)\n      })\n\n    const center = config.map && config.map.initLat && config.map.initLon\n      ? [config.map.initLat, config.map.initLon]\n      : null\n\n    // Compute the elevation point marker, if activeLeg and elevation profile is enabled.\n    let elevationPointMarker = null\n    if (showElevationProfile && diagramLeg && elevationPoint) {\n      const pos = legLocationAtDistance(diagramLeg, elevationPoint)\n      if (pos) {\n        elevationPointMarker = (\n          <CircleMarker\n            center={pos}\n            fillColor='#084c8d'\n            weight={6}\n            color='#555'\n            opacity={0.4}\n            radius={5}\n            fill\n            fillOpacity={1} />\n        )\n      }\n    }\n\n    return (\n      <Map\n        ref='map'\n        className='map'\n        center={center}\n        // onClick={this._onLeftClick}\n        zoom={config.map.initZoom || 13}\n        onOverlayAdd={this._onOverlayAdd}\n        onOverlayRemove={this._onOverlayRemove}\n        onViewportChanged={this._onViewportChanged}\n        /* Note: Map-click is handled via single-click plugin, set up in componentDidMount() */\n      >\n        {/* Create the layers control, including base map layers and any\n          * user-controlled overlays. */}\n        <LayersControl position='topright'>\n          {/* base layers */\n            baseLayers && baseLayers.map((layer, i) => {\n              // Fix tile size/zoom offset: https://stackoverflow.com/a/37043490/915811\n              const retinaProps = L.Browser.retina && layer.hasRetinaSupport\n                ? { tileSize: 512, zoomOffset: -1 }\n                : {}\n              return (\n                <LayersControl.BaseLayer\n                  name={layer.name}\n                  checked={i === 0}\n                  key={i}>\n                  <TileLayer\n                    url={layer.url}\n                    attribution={layer.attribution}\n                    maxZoom={layer.maxZoom}\n                    {...retinaProps}\n                    detectRetina />\n                </LayersControl.BaseLayer>\n              )\n            })\n          }\n\n          {/* user-controlled overlay layers (e.g., vehicle locations, stops) */\n            userControlledOverlays.map((child, i) => {\n              return (\n                <LayersControl.Overlay\n                  key={i}\n                  name={child.props.name}\n                  checked={child.props.visible}\n                >\n                  {child}\n                </LayersControl.Overlay>\n              )\n            })\n          }\n        </LayersControl>\n\n        {/* Add the fixed, i.e. non-user-controllable, overlays (e.g., itinerary overlay) */}\n        {fixedOverlays}\n\n        {/* Add the location selection popup, if visible */}\n        {popupLocation && (\n          <Popup ref='clickPopup'\n            position={[popupLocation.lat, popupLocation.lon]}\n            onClose={this._popupClosed}\n          >\n            <div style={{ width: 240 }}>\n              <div style={{ fontSize: 14, marginBottom: 6 }}>\n                {popupLocation.name.split(',').length > 3\n                  ? popupLocation.name.split(',').splice(0, 3).join(',')\n                  : popupLocation.name\n                }\n              </div>\n              <div>\n                Plan a trip:\n                <span style={{ margin: '0px 5px' }}><LocationIcon type='from' /></span>\n                <button className='link-button'\n                  onClick={this._onClickFrom}>\n                  From here\n                </button>{' '}|{' '}\n                <span style={{ margin: '0px 5px' }}><LocationIcon type='to' /></span>\n                <button className='link-button'\n                  onClick={this._onClickTo}>\n                  To here\n                </button>\n              </div>\n            </div>\n          </Popup>\n        )}\n\n        {/* Add the elevation point marker */}\n        {elevationPointMarker}\n      </Map>\n    )\n  }\n}\n\n// connect to the redux store\n\nconst mapStateToProps = (state, ownProps) => {\n  const activeSearch = getActiveSearch(state.otp)\n  const overlays = state.otp.config.map && state.otp.config.map.overlays\n    ? state.otp.config.map.overlays\n    : []\n  return {\n    activeLeg: activeSearch && activeSearch.activeLeg,\n    activeStep: activeSearch && activeSearch.activeStep,\n    config: state.otp.config,\n    diagramLeg: state.otp.ui.diagramLeg,\n    elevationPoint: state.otp.ui.elevationPoint,\n    mapState: state.otp.mapState,\n    isFromSet:\n      state.otp.currentQuery.from &&\n      state.otp.currentQuery.from.lat !== null &&\n      state.otp.currentQuery.from.lon !== null,\n    isToSet:\n      state.otp.currentQuery.to &&\n      state.otp.currentQuery.to.lat !== null &&\n      state.otp.currentQuery.to.lon !== null,\n    itinerary: getActiveItinerary(state.otp),\n    overlays,\n    popupLocation: state.otp.ui.mapPopupLocation,\n    query: state.otp.currentQuery\n  }\n}\n\nconst mapDispatchToProps = {\n  setLocation,\n  setMapPopupLocation,\n  setMapPopupLocationAndGeocode,\n  setMapZoom,\n  updateOverlayVisibility\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BaseMap)\n"]}