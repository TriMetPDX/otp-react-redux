{"version":3,"sources":["itinerary-overlay.js"],"names":["ItineraryOverlay","props","activeLeg","activeStep","itinerary","setActiveLeg","Component","PropTypes","number","object","mapStateToProps","state","ownProps","activeSearch","otp","mapDispatchToProps","dispatch","index","leg"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AAEA;;AAGA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;IAEMA,gB;;;;;;;;;;;;;6BAOM;AAAA,wBACqC,KAAKC,KAD1C;AAAA,UACAC,SADA,eACAA,SADA;AAAA,UACWC,UADX,eACWA,UADX;AAAA,UACuBC,SADvB,eACuBA,SADvB;AAER,UAAI,CAACA,SAAL,EAAgB,OAAO,IAAP;AAChB,aACE,0CACE,6BAAC,sBAAD;AACE,QAAA,SAAS,EAAEA,SADb;AAEE,QAAA,SAAS,EAAEF,SAFb;AAGE,QAAA,YAAY,EAAE,KAAKD,KAAL,CAAWI;AAH3B,QADF,EAME,6BAAC,uBAAD;AACE,QAAA,SAAS,EAAED,SADb;AAEE,QAAA,SAAS,EAAEF,SAFb;AAGE,QAAA,YAAY,EAAE,KAAKD,KAAL,CAAWI;AAH3B,QANF,EAWE,6BAAC,uBAAD;AACE,QAAA,SAAS,EAAED,SADb;AAEE,QAAA,SAAS,EAAEF,SAFb;AAGE,QAAA,UAAU,EAAEC;AAHd,QAXF,CADF;AAmBD;;;;EA7B4BG,gB,GAgC/B;;;gBAhCMN,gB,eACe;AACjBE,EAAAA,SAAS,EAAEK,iBAAUC,MADJ;AAEjBL,EAAAA,UAAU,EAAEI,iBAAUC,MAFL;AAGjBJ,EAAAA,SAAS,EAAEG,iBAAUE;AAHJ,C;;AAiCrB,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,QAAR,EAAqB;AAC3C,MAAMC,YAAY,GAAG,4BAAgBF,KAAK,CAACG,GAAtB,CAArB;AACA,SAAO;AACLV,IAAAA,SAAS,EAAE,+BAAmBO,KAAK,CAACG,GAAzB,CADN;AAELZ,IAAAA,SAAS,EAAEW,YAAY,IAAIA,YAAY,CAACX,SAFnC;AAGLC,IAAAA,UAAU,EAAEU,YAAY,IAAIA,YAAY,CAACV;AAHpC,GAAP;AAKD,CAPD;;AASA,IAAMY,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAWJ,QAAX,EAAwB;AACjD,SAAO;AACLP,IAAAA,YAAY,EAAE,sBAACY,KAAD,EAAQC,GAAR,EAAgB;AAAEF,MAAAA,QAAQ,CAAC,6BAAa;AAAEC,QAAAA,KAAK,EAALA,KAAF;AAASC,QAAAA,GAAG,EAAHA;AAAT,OAAb,CAAD,CAAR;AAAwC;AADnE,GAAP;AAGD,CAJD;;eAMe,yBAAQR,eAAR,EAAyBK,kBAAzB,EAA6Cf,gBAA7C,C","sourcesContent":["import React, { Component, PropTypes } from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  setActiveLeg\n} from '../../actions/narrative'\nimport { getActiveItinerary, getActiveSearch } from '../../util/state'\nimport ItinerarySteps from './itinerary-steps'\nimport ItineraryStops from './itinerary-stops'\nimport ItineraryLegs from './itinerary-legs'\n\nclass ItineraryOverlay extends Component {\n  static propTypes = {\n    activeLeg: PropTypes.number,\n    activeStep: PropTypes.number,\n    itinerary: PropTypes.object\n  }\n\n  render () {\n    const { activeLeg, activeStep, itinerary } = this.props\n    if (!itinerary) return null\n    return (\n      <div>\n        <ItineraryLegs\n          itinerary={itinerary}\n          activeLeg={activeLeg}\n          setActiveLeg={this.props.setActiveLeg}\n        />\n        <ItineraryStops\n          itinerary={itinerary}\n          activeLeg={activeLeg}\n          setActiveLeg={this.props.setActiveLeg}\n        />\n        <ItinerarySteps\n          itinerary={itinerary}\n          activeLeg={activeLeg}\n          activeStep={activeStep}\n        />\n      </div>\n    )\n  }\n}\n\n// connect to the redux store\n\nconst mapStateToProps = (state, ownProps) => {\n  const activeSearch = getActiveSearch(state.otp)\n  return {\n    itinerary: getActiveItinerary(state.otp),\n    activeLeg: activeSearch && activeSearch.activeLeg,\n    activeStep: activeSearch && activeSearch.activeStep\n  }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    setActiveLeg: (index, leg) => { dispatch(setActiveLeg({ index, leg })) }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ItineraryOverlay)\n"]}