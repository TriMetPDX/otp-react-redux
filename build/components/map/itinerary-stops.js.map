{"version":3,"sources":["itinerary-stops.js"],"names":["ItineraryStops","array","item","stopId","indexOf","push","itinerary","props","stops","legs","map","l","addItineraryStop","from","to","stop","index","icon","html","name","className","lat","lon","Component","PropTypes","object"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;AACA;AAEA;IAEqBA,c;;;;;;;;;;;;;qCAIDC,K,EAAOC,I,EAAM;AAC7B,UAAIA,IAAI,CAACC,MAAL,IAAeF,KAAK,CAACG,OAAN,CAAcF,IAAI,CAACC,MAAnB,MAA+B,CAAC,CAAnD,EAAsD;AACpDF,QAAAA,KAAK,CAACI,IAAN,CAAWH,IAAX;AACD;AACF;;;6BACS;AAAA;;AAAA,UACAI,SADA,GACc,KAAKC,KADnB,CACAD,SADA;AAER,UAAME,KAAK,GAAG,EAAd;AACAF,MAAAA,SAAS,CAACG,IAAV,CAAeC,GAAf,CAAmB,UAAAC,CAAC,EAAI;AACtB,QAAA,KAAI,CAACC,gBAAL,CAAsBJ,KAAtB,EAA6BG,CAAC,CAACE,IAA/B;;AACA,QAAA,KAAI,CAACD,gBAAL,CAAsBJ,KAAtB,EAA6BG,CAAC,CAACG,EAA/B;AACD,OAHD;AAIA,aACE,0CACGN,KAAK,CAACE,GAAN,CAAU,UAACK,IAAD,EAAOC,KAAP,EAAiB;AAC1B,YAAMC,IAAI,GAAG,sBAAQ;AACnBC,UAAAA,IAAI,0BAAkBH,IAAI,CAACI,IAAvB,sQADe;AAKnBC,UAAAA,SAAS,EAAE;AALQ,SAAR,CAAb;AAOA,eACE,6BAAC,oBAAD;AACE,UAAA,IAAI,EAAEH,IADR;AAEE,UAAA,QAAQ,EAAE,CAACF,IAAI,CAACM,GAAN,EAAWN,IAAI,CAACO,GAAhB,CAFZ;AAGE,UAAA,GAAG,EAAEN;AAHP,UADF;AAOD,OAfA,CADH,CADF;AAoBD;;;;EApCyCO,gB;;;;gBAAvBvB,c,eACA;AACjBM,EAAAA,SAAS,EAAEkB,iBAAUC;AADJ,C","sourcesContent":["import { divIcon } from 'leaflet'\nimport React, {Component, PropTypes} from 'react'\nimport { Marker } from 'react-leaflet'\n// import polyline from '@mapbox/polyline'\n\n// import { isTransit } from '../../util/itinerary'\n\nexport default class ItineraryStops extends Component {\n  static propTypes = {\n    itinerary: PropTypes.object\n  }\n  addItineraryStop (array, item) {\n    if (item.stopId && array.indexOf(item.stopId) === -1) {\n      array.push(item)\n    }\n  }\n  render () {\n    const { itinerary } = this.props\n    const stops = []\n    itinerary.legs.map(l => {\n      this.addItineraryStop(stops, l.from)\n      this.addItineraryStop(stops, l.to)\n    })\n    return (\n      <div>\n        {stops.map((stop, index) => {\n          const icon = divIcon({\n            html: `<span title=\"${stop.name}\" class=\"fa-stack stop-icon\" style=\"opacity: 1.0\">\n                    <i class=\"fa fa-circle fa-stack-2x\" style=\"color: #ffffff\"></i>\n                    <i class=\"fa fa-bus fa-stack-1x\" style=\"color: #000000\"></i>\n                  </span>`,\n            className: ''\n          })\n          return (\n            <Marker\n              icon={icon}\n              position={[stop.lat, stop.lon]}\n              key={index}\n            />\n          )\n        })}\n      </div>\n    )\n  }\n}\n"]}