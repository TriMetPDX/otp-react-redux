{"version":3,"sources":["current-position-marker.js"],"names":["CurrentPositionMarker","currentPosition","props","coords","latitude","longitude","MapLayer","PropTypes","object","mapStateToProps","state","ownProps","otp","location"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;;IAIMA,qB;;;;;;;;;;;;;2CAMoB,CAAG;;;wCACN,CAAG;;;2CAEA,CACvB;;;2CAEuB,CACvB;;;6BAES;AAAA,UACAC,eADA,GACoB,KAAKC,KADzB,CACAD,eADA;AAGR,UAAI,CAACA,eAAD,IAAoB,CAACA,eAAe,CAACE,MAAzC,EAAiD,OAAO,6BAAC,0BAAD,OAAP;AAEjD,aACE,6BAAC,0BAAD,QACE,6BAAC,0BAAD;AACE,QAAA,MAAM,EAAE,CAACF,eAAe,CAACE,MAAhB,CAAuBC,QAAxB,EAAkCH,eAAe,CAACE,MAAhB,CAAuBE,SAAzD,CADV;AAEE,QAAA,MAAM,EAAE,CAFV;AAGE,QAAA,WAAW,EAAE,GAHf;AAIE,QAAA,SAAS,EAAC,MAJZ;AAKE,QAAA,KAAK,EAAC,MALR;AAME,QAAA,MAAM,EAAE;AANV,QADF,CADF;AAYD;;;;EAhCiCC,sB,GAmCpC;;;gBAnCMN,qB,eACe;AACjBC,EAAAA,eAAe,EAAEM,mBAAUC,MADV,CAInB;;AAJmB,C;;AAoCrB,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,QAAR,EAAqB;AAC3C,SAAO;AACLV,IAAAA,eAAe,EAAES,KAAK,CAACE,GAAN,CAAUC,QAAV,CAAmBZ;AAD/B,GAAP;AAGD,CAJD;;eAMe,yBAAQQ,eAAR,EAAyBT,qBAAzB,C","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { FeatureGroup, MapLayer, CircleMarker } from 'react-leaflet'\n\n/* A small circular marker showing the user's current position. Intended\n * primarily for use in mobile mode.\n */\n\nclass CurrentPositionMarker extends MapLayer {\n  static propTypes = {\n    currentPosition: PropTypes.object\n  }\n\n  // TODO: determine why the default MapLayer componentWillUnmount() method throws an error\n  componentWillUnmount () { }\n  componentDidMount () { }\n\n  createLeafletElement () {\n  }\n\n  updateLeafletElement () {\n  }\n\n  render () {\n    const { currentPosition } = this.props\n\n    if (!currentPosition || !currentPosition.coords) return <FeatureGroup />\n\n    return (\n      <FeatureGroup>\n        <CircleMarker\n          center={[currentPosition.coords.latitude, currentPosition.coords.longitude]}\n          radius={3}\n          fillOpacity={0.5}\n          fillColor='#f44'\n          color='#f00'\n          weight={1}\n        />\n      </FeatureGroup>\n    )\n  }\n}\n\n// connect to the redux store\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    currentPosition: state.otp.location.currentPosition\n  }\n}\n\nexport default connect(mapStateToProps)(CurrentPositionMarker)\n"]}