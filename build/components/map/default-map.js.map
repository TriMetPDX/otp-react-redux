{"version":3,"sources":["default-map.js"],"names":["DefaultMap","props","bikeRentalQuery","bikeRentalStations","carRentalQuery","carRentalStations","mapConfig","vehicleRentalQuery","vehicleRentalStations","overlays","map","overlayConfig","k","type","Component","mapStateToProps","state","ownProps","otp","overlay","bikeRental","stations","carRental","config","vehicleRental","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport {\n  bikeRentalQuery,\n  carRentalQuery,\n  vehicleRentalQuery\n} from '../../actions/api'\nimport BaseMap from './base-map'\nimport EndpointsOverlay from './endpoints-overlay'\nimport ParkAndRideOverlay from './park-and-ride-overlay'\nimport StopsOverlay from './stops-overlay'\nimport StopViewerOverlay from './stop-viewer-overlay'\nimport TileOverlay from './tile-overlay'\nimport TransitiveOverlay from './transitive-overlay'\nimport TripViewerOverlay from './trip-viewer-overlay'\nimport RouteViewerOverlay from './route-viewer-overlay'\nimport VehicleRentalOverlay from './vehicle-rental-overlay'\nimport ZipcarOverlay from './zipcar-overlay'\nimport {SelectVehicles} from 'transit-components';\n\n\nclass DefaultMap extends Component {\n  render () {\n    const {\n      bikeRentalQuery,\n      bikeRentalStations,\n      carRentalQuery,\n      carRentalStations,\n      mapConfig,\n      vehicleRentalQuery,\n      vehicleRentalStations\n    } = this.props\n    return (\n      <BaseMap\n        toggleLabel={<span><i className='fa fa-map' /> Map View</span>}\n        {...this.props}\n      >\n        {/* The default overlays */}\n        <TripViewerOverlay />\n        <StopViewerOverlay />\n        <RouteViewerOverlay />\n        <TransitiveOverlay />\n        <EndpointsOverlay />\n\n        {/* The configurable overlays */}\n        {mapConfig.overlays && mapConfig.overlays.map((overlayConfig, k) => {\n          switch (overlayConfig.type) {\n            case 'vehicles': return <SelectVehicles visible={false} key={k} {...overlayConfig} />;\n            case 'bike-rental': return (\n              <VehicleRentalOverlay\n                key={k}\n                {...overlayConfig}\n                refreshVehicles={bikeRentalQuery}\n                stations={bikeRentalStations}\n              />\n            )\n            case 'car-rental': return (\n              <VehicleRentalOverlay\n                key={k}\n                baseIconClass='car-rental-icon'\n                {...overlayConfig}\n                refreshVehicles={carRentalQuery}\n                stations={carRentalStations}\n              />\n            )\n            case 'park-and-ride': return <ParkAndRideOverlay key={k} {...overlayConfig} />\n            case 'stops': return <StopsOverlay key={k} {...overlayConfig} />\n            case 'tile': return <TileOverlay key={k} {...overlayConfig} />\n            case 'micromobility-rental': return (\n              <VehicleRentalOverlay\n                key={k}\n                baseIconClass='micromobility-rental-icon'\n                {...overlayConfig}\n                refreshVehicles={vehicleRentalQuery}\n                stations={vehicleRentalStations}\n              />\n            )\n            case 'zipcar': return <ZipcarOverlay key={k} {...overlayConfig} />\n            default: return null\n          }\n        })}\n      </BaseMap>\n    )\n  }\n}\n\n// connect to the redux store\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    bikeRentalStations: state.otp.overlay.bikeRental.stations,\n    carRentalStations: state.otp.overlay.carRental.stations,\n    mapConfig: state.otp.config.map,\n    vehicleRentalStations: state.otp.overlay.vehicleRental.stations\n  }\n}\n\nconst mapDispatchToProps = {\n  bikeRentalQuery,\n  carRentalQuery,\n  vehicleRentalQuery\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DefaultMap)\n"]}