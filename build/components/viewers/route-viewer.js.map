{"version":3,"sources":["route-viewer.js"],"names":["operatorIndexForRoute","operators","route","agency","index","findIndex","o","id","toLowerCase","split","order","RouteViewer","props","setMainPanelContent","findRoutes","findRoute","hideBackButton","languageConfig","routes","setViewedRoute","viewedRoute","sortedRoutes","Object","values","sort","routeComparator","agencySortedRoutes","length","a","b","_backClicked","routeViewer","routeViewerDetails","clear","map","routeId","Component","PropTypes","bool","object","RouteRow","isActive","operator","defaultRouteColor","defaultRouteTextColor","longNameSplitter","color","textColor","backgroundColor","nameParts","longName","borderBottom","padding","width","_onClick","display","marginTop","fontSize","fontWeight","shortName","animation","url","PureComponent","mapStateToProps","state","ownProps","otp","config","transitIndex","ui","language","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component, PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport { Label, Button } from 'react-bootstrap'\nimport { VelocityTransitionGroup } from 'velocity-react'\nimport { connect } from 'react-redux'\n\nimport Icon from '../narrative/icon'\n\nimport { setMainPanelContent, setViewedRoute } from '../../actions/ui'\nimport { findRoutes, findRoute } from '../../actions/api'\nimport { routeComparator } from '../../util/itinerary'\n\nfunction operatorIndexForRoute (operators, route) {\n  if (!route.agency) return 0\n  const index = operators.findIndex(o =>\n    o.id.toLowerCase() === route.agency.id.split(':')[0].toLowerCase())\n  if (index !== -1 && typeof operators[index].order !== 'undefined') return operators[index].order\n  else return 0\n}\n\nclass RouteViewer extends Component {\n  static propTypes = {\n    hideBackButton: PropTypes.bool,\n    routes: PropTypes.object\n  }\n\n  _backClicked = () => this.props.setMainPanelContent(null)\n\n  componentDidMount () {\n    this.props.findRoutes()\n  }\n\n  render () {\n    const {\n      findRoute,\n      hideBackButton,\n      languageConfig,\n      operators,\n      routes,\n      setViewedRoute,\n      viewedRoute\n    } = this.props\n    const sortedRoutes = routes ? Object.values(routes).sort(routeComparator) : []\n    const agencySortedRoutes = operators.length > 0\n      ? sortedRoutes.sort((a, b) => {\n        return operatorIndexForRoute(operators, a) - operatorIndexForRoute(operators, b)\n      })\n      : sortedRoutes\n    return (\n      <div className='route-viewer'>\n        {/* Header Block */}\n        <div className='route-viewer-header'>\n          {/* Back button */}\n          {!hideBackButton && (\n            <div className='back-button-container'>\n              <Button\n                bsSize='small'\n                onClick={this._backClicked}\n              ><Icon type='arrow-left' />Back</Button>\n            </div>\n          )}\n\n          {/* Header Text */}\n          <div className='header-text'>\n            {languageConfig.routeViewer || 'Route Viewer'}\n          </div>\n          <div className=''>\n            {languageConfig.routeViewerDetails}\n          </div>\n          <div style={{ clear: 'both' }} />\n        </div>\n\n        <div className='route-viewer-body'>\n          {agencySortedRoutes\n            .map(route => {\n              // Find operator based on agency_id (extracted from OTP route ID).\n              // TODO: re-implement multi-agency logos for route viewer.\n              // const operator = operatorForRoute(operators, route) || {}\n              return (\n                <RouteRow\n                  findRoute={findRoute}\n                  isActive={viewedRoute && viewedRoute.routeId === route.id}\n                  key={route.id\n                  /* operator={operator */}\n                  route={route}\n                  setViewedRoute={setViewedRoute}\n                />\n              )\n            })\n          }\n        </div>\n      </div>\n    )\n  }\n}\n\nclass RouteRow extends PureComponent {\n  _onClick = () => {\n    const { findRoute, isActive, route, setViewedRoute } = this.props\n    if (isActive) {\n      // Deselect current route if active.\n      setViewedRoute({ routeId: null })\n    } else {\n      // Otherwise, set active and fetch route patterns.\n      findRoute({ routeId: route.id })\n      setViewedRoute({ routeId: route.id })\n    }\n  }\n\n  render () {\n    const {isActive, route, operator} = this.props\n    const {defaultRouteColor, defaultRouteTextColor, longNameSplitter} = operator || {}\n    const color = `#${defaultRouteTextColor || route.textColor || '000000'}`\n    const backgroundColor = `#${defaultRouteColor || route.color || 'ffffff'}`\n    const nameParts = route.longName.split(longNameSplitter)\n    const longName = (longNameSplitter && route.longName && nameParts.length > 1)\n      ? nameParts[1]\n      : route.longName\n    return (\n      <div\n        style={{\n          borderBottom: '1px solid gray',\n          backgroundColor: isActive ? '#f6f8fa' : 'white'\n        }}>\n        <Button className='clear-button-formatting' style={{ padding: 8, width: '100%' }}\n          onClick={this._onClick}\n        >\n          <div style={{display: 'inline-block'}}>\n            {// TODO: re-implement multi-agency logos for route viewer.\n              // Currently, the agency object is not nested within the get all\n              // routes endpoint and causing this to only display operators for\n              // the selected route.\n              // operator && <img src={operator.logo} style={{marginRight: '5px'}} height={25} />\n            }\n          </div>\n          <div style={{display: 'inline-block', marginTop: '2px'}}>\n            <Label\n              style={{\n                backgroundColor: backgroundColor === '#ffffff' ? 'rgba(0,0,0,0)' : backgroundColor,\n                fontSize: 'medium',\n                fontWeight: 400,\n                color\n              }}>\n              <b>{route.shortName}</b> {longName}\n            </Label>\n          </div>\n        </Button>\n        <VelocityTransitionGroup enter={{animation: 'slideDown'}} leave={{animation: 'slideUp'}}>\n          {isActive && (\n            <div style={{ padding: 8 }}>\n              {route.url\n                ? <a href={route.url} target='_blank'>Route Details</a>\n                : 'No route URL provided.'\n              }\n            </div>\n          )}\n        </VelocityTransitionGroup>\n      </div>\n    )\n  }\n}\n// connect to redux store\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    operators: state.otp.config.operators,\n    routes: state.otp.transitIndex.routes,\n    viewedRoute: state.otp.ui.viewedRoute,\n    languageConfig: state.otp.config.language\n  }\n}\n\nconst mapDispatchToProps = {\n  findRoute,\n  findRoutes,\n  setMainPanelContent,\n  setViewedRoute\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RouteViewer)\n"]}