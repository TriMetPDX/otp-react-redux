{"version":3,"sources":["narrative-profile-options.js"],"names":["NarrativeProfileOptions","props","pending","itineraryClass","query","activeItinerary","options","itineraries","customIcons","length","map","itinerary","index","React","createElement","key","active","routingType","Component","PropTypes","array","object","func","bool","activeOption","number","setActiveItinerary","setActiveLeg","setActiveStep","DefaultItinerary","mapStateToProps","state","ownProps","activeSearch","otp","response","profile","activeLeg","activeStep","mapDispatchToProps","dispatch","leg","step"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\n\nimport { setActiveItinerary, setActiveLeg, setActiveStep } from '../../actions/narrative'\nimport DefaultItinerary from './default/default-itinerary'\nimport NarrativeProfileSummary from './narrative-profile-summary'\nimport Loading from './loading'\nimport { getActiveSearch } from '../../util/state'\nimport { profileOptionsToItineraries } from '../../util/profile'\n\nclass NarrativeProfileOptions extends Component {\n  static propTypes = {\n    options: PropTypes.array,\n    query: PropTypes.object,\n    itineraryClass: PropTypes.func,\n    pending: PropTypes.bool,\n    activeOption: PropTypes.number,\n    setActiveItinerary: PropTypes.func,\n    setActiveLeg: PropTypes.func,\n    setActiveStep: PropTypes.func,\n    customIcons: PropTypes.object\n  }\n\n  static defaultProps = {\n    itineraryClass: DefaultItinerary\n  }\n\n  render () {\n    const { pending, itineraryClass, query, activeItinerary } = this.props\n    if (pending) return <Loading />\n\n    const options = this.props.options\n    if (!options) return null\n\n    const itineraries = profileOptionsToItineraries(options, query)\n\n    return (\n      <div className='options profile'>\n        <div className='header'>Your best options:</div>\n        <NarrativeProfileSummary options={options} customIcons={this.props.customIcons} />\n        <div className='header'>We found <strong>{options.length}</strong> total options:</div>\n        {itineraries.map((itinerary, index) => {\n          return React.createElement(itineraryClass, {\n            itinerary,\n            index,\n            key: index,\n            active: index === activeItinerary,\n            routingType: 'PROFILE',\n            ...this.props\n          })\n        })}\n      </div>\n    )\n  }\n}\n\n// connect to the redux store\nconst mapStateToProps = (state, ownProps) => {\n  const activeSearch = getActiveSearch(state.otp)\n  // const { activeItinerary, activeLeg, activeStep } = activeSearch ? activeSearch.activeItinerary : {}\n  const pending = activeSearch && activeSearch.pending\n  return {\n    options:\n      activeSearch &&\n      activeSearch.response &&\n      activeSearch.response.otp\n        ? activeSearch.response.otp.profile\n        : null,\n    pending,\n    activeItinerary: activeSearch && activeSearch.activeItinerary,\n    activeLeg: activeSearch && activeSearch.activeLeg,\n    activeStep: activeSearch && activeSearch.activeStep,\n    query: activeSearch && activeSearch.query\n  }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    setActiveItinerary: (index) => { dispatch(setActiveItinerary({ index })) },\n    setActiveLeg: (index, leg) => { dispatch(setActiveLeg({ index, leg })) },\n    setActiveStep: (index, step) => { dispatch(setActiveStep({ index, step })) }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NarrativeProfileOptions)\n"]}