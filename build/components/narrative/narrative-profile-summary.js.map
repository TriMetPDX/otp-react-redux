{"version":3,"sources":["narrative-profile-summary.js"],"names":["NarrativeProfileSummary","options","props","bestTransit","walk","bicycle","bicycleRent","forEach","option","i","transit","time","modes","length","indexOf","summary","icon","title","map","k","backgroundColor","width","display","verticalAlign","marginRight","padding","textAlign","color","height","fill","marginTop","customIcons","fontSize","textTransform","letterSpacing","fontWeight","Math","round","Component","PropTypes","array","object"],"mappings":";;;;;;;;;;;AAAA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;IAEqBA,uB;;;;;;;;;;;;;6BAMT;AAAA;;AAAA,UACAC,OADA,GACY,KAAKC,KADjB,CACAD,OADA;AAGR,UAAIE,WAAW,GAAG,CAAlB;AACA,UAAIC,IAAI,GAAG,CAAX;AACA,UAAIC,OAAO,GAAG,CAAd;AACA,UAAIC,WAAW,GAAG,CAAlB;AAEAL,MAAAA,OAAO,CAACM,OAAR,CAAgB,UAACC,MAAD,EAASC,CAAT,EAAe;AAC7B,YAAID,MAAM,CAACE,OAAX,EAAoB;AAClB,cAAIF,MAAM,CAACG,IAAP,GAAcR,WAAd,IAA6BA,WAAW,KAAK,CAAjD,EAAoD;AAClDA,YAAAA,WAAW,GAAGK,MAAM,CAACG,IAArB;AACD;AACF,SAJD,MAIO;AACL,cAAIH,MAAM,CAACI,KAAP,CAAaC,MAAb,KAAwB,CAAxB,IAA6BL,MAAM,CAACI,KAAP,CAAa,CAAb,MAAoB,SAArD,EAAgEP,OAAO,GAAGG,MAAM,CAACG,IAAjB,CAAhE,KACK,IAAIH,MAAM,CAACI,KAAP,CAAaC,MAAb,KAAwB,CAAxB,IAA6BL,MAAM,CAACI,KAAP,CAAa,CAAb,MAAoB,MAArD,EAA6DR,IAAI,GAAGI,MAAM,CAACG,IAAd,CAA7D,KACA,IAAIH,MAAM,CAACI,KAAP,CAAaE,OAAb,CAAqB,cAArB,MAAyC,CAAC,CAA9C,EAAiDR,WAAW,GAAGE,MAAM,CAACG,IAArB;AACvD;AACF,OAVD;AAYA,UAAMI,OAAO,GAAG,CACd;AACEC,QAAAA,IAAI,EAAE,KADR;AAEEC,QAAAA,KAAK,EAAE,SAFT;AAGEN,QAAAA,IAAI,EAAER;AAHR,OADc,EAKX;AACDa,QAAAA,IAAI,EAAE,SADL;AAEDC,QAAAA,KAAK,EAAE,SAFN;AAGDN,QAAAA,IAAI,EAAEN;AAHL,OALW,EASX;AACDW,QAAAA,IAAI,EAAE,cADL;AAEDC,QAAAA,KAAK,EAAE,WAFN;AAGDN,QAAAA,IAAI,EAAEL;AAHL,OATW,EAaX;AACDU,QAAAA,IAAI,EAAE,MADL;AAEDC,QAAAA,KAAK,EAAE,MAFN;AAGDN,QAAAA,IAAI,EAAEP;AAHL,OAbW,CAAhB;AAoBA,aACE;AAAK,QAAA,KAAK,EAAE;AAAZ,SACGW,OAAO,CAACG,GAAR,CAAY,UAACV,MAAD,EAASW,CAAT,EAAe;AAC1B,eACE;AAAK,UAAA,GAAG,EAAEA,CAAV;AAAa,UAAA,KAAK,EAAE;AAClBC,YAAAA,eAAe,EAAEZ,MAAM,CAACG,IAAP,GAAc,CAAd,GAAkB,SAAlB,GAA8B,MAD7B;AAElBU,YAAAA,KAAK,EAAE,KAFW;AAGlBC,YAAAA,OAAO,EAAE,cAHS;AAIlBC,YAAAA,aAAa,EAAE,KAJG;AAKlBC,YAAAA,WAAW,EAAGL,CAAC,GAAG,CAAJ,GAAQ,IAAR,GAAe,CALX;AAMlBM,YAAAA,OAAO,EAAE,KANS;AAOlBC,YAAAA,SAAS,EAAE,QAPO;AAQlBC,YAAAA,KAAK,EAAE;AARW;AAApB,WAUE;AAAK,UAAA,KAAK,EAAE;AAAEC,YAAAA,MAAM,EAAE,MAAV;AAAkBP,YAAAA,KAAK,EAAE,MAAzB;AAAiCC,YAAAA,OAAO,EAAE,cAA1C;AAA0DO,YAAAA,IAAI,EAAE,OAAhE;AAAyEC,YAAAA,SAAS,EAAE,KAApF;AAA2FJ,YAAAA,SAAS,EAAE;AAAtG;AAAZ,WAA+H,wBAAQlB,MAAM,CAACQ,IAAf,EAAqB,KAAI,CAACd,KAAL,CAAW6B,WAAhC,CAA/H,CAVF,EAWE;AAAK,UAAA,KAAK,EAAE;AAAEC,YAAAA,QAAQ,EAAE,MAAZ;AAAoBN,YAAAA,SAAS,EAAE,QAA/B;AAAyCI,YAAAA,SAAS,EAAE,KAApD;AAA2DG,YAAAA,aAAa,EAAE,WAA1E;AAAuFC,YAAAA,aAAa,EAAE;AAAtG;AAAZ,WAA4H1B,MAAM,CAACS,KAAnI,CAXF,EAYE;AAAK,UAAA,KAAK,EAAE;AAAES,YAAAA,SAAS,EAAE,QAAb;AAAuBI,YAAAA,SAAS,EAAE,KAAlC;AAAyCF,YAAAA,MAAM,EAAE;AAAjD;AAAZ,WACGpB,MAAM,CAACG,IAAP,GAAc,CAAd,GACG,2CAAM;AAAM,UAAA,KAAK,EAAE;AAAEqB,YAAAA,QAAQ,EAAE,EAAZ;AAAgBG,YAAAA,UAAU,EAAE;AAA5B;AAAb,WAAmDC,IAAI,CAACC,KAAL,CAAW7B,MAAM,CAACG,IAAP,GAAc,EAAzB,CAAnD,CAAN,SADH,GAEG;AAAM,UAAA,KAAK,EAAE;AAAEqB,YAAAA,QAAQ,EAAE;AAAZ;AAAb,yBAHN,CAZF,CADF;AAqBD,OAtBA,CADH,CADF;AA2BD;;;;EAzEkDM,gB;;;;gBAAhCtC,uB,eACA;AACjBC,EAAAA,OAAO,EAAEsC,iBAAUC,KADF;AAEjBT,EAAAA,WAAW,EAAEQ,iBAAUE;AAFN,C","sourcesContent":["import React, { Component, PropTypes } from 'react'\n\nimport { getIcon } from '../../util/itinerary'\n\nexport default class NarrativeProfileSummary extends Component {\n  static propTypes = {\n    options: PropTypes.array,\n    customIcons: PropTypes.object\n  }\n\n  render () {\n    const { options } = this.props\n\n    let bestTransit = 0\n    let walk = 0\n    let bicycle = 0\n    let bicycleRent = 0\n\n    options.forEach((option, i) => {\n      if (option.transit) {\n        if (option.time < bestTransit || bestTransit === 0) {\n          bestTransit = option.time\n        }\n      } else {\n        if (option.modes.length === 1 && option.modes[0] === 'bicycle') bicycle = option.time\n        else if (option.modes.length === 1 && option.modes[0] === 'walk') walk = option.time\n        else if (option.modes.indexOf('bicycle_rent') !== -1) bicycleRent = option.time\n      }\n    })\n\n    const summary = [\n      {\n        icon: 'BUS',\n        title: 'Transit',\n        time: bestTransit\n      }, {\n        icon: 'BICYCLE',\n        title: 'Bicycle',\n        time: bicycle\n      }, {\n        icon: 'BICYCLE_RENT',\n        title: 'Bikeshare',\n        time: bicycleRent\n      }, {\n        icon: 'WALK',\n        title: 'Walk',\n        time: walk\n      }\n    ]\n\n    return (\n      <div style={{ }}>\n        {summary.map((option, k) => {\n          return (\n            <div key={k} style={{\n              backgroundColor: option.time > 0 ? '#084C8D' : '#bbb',\n              width: '22%',\n              display: 'inline-block',\n              verticalAlign: 'top',\n              marginRight: (k < 3 ? '4%' : 0),\n              padding: '3px',\n              textAlign: 'center',\n              color: 'white' }}\n            >\n              <div style={{ height: '24px', width: '24px', display: 'inline-block', fill: 'white', marginTop: '6px', textAlign: 'center' }}>{getIcon(option.icon, this.props.customIcons)}</div>\n              <div style={{ fontSize: '10px', textAlign: 'center', marginTop: '2px', textTransform: 'uppercase', letterSpacing: '2px' }}>{option.title}</div>\n              <div style={{ textAlign: 'center', marginTop: '2px', height: '30px' }}>\n                {option.time > 0\n                  ? <span><span style={{ fontSize: 24, fontWeight: '500' }}>{Math.round(option.time / 60)}</span> min</span>\n                  : <span style={{ fontSize: '11px' }}>(Not Found)</span>\n                }\n              </div>\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n}\n"]}