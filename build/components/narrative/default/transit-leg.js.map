{"version":3,"sources":["transit-leg.js"],"names":["TransitLeg","props","setState","expanded","state","e","leg","index","active","setActiveLeg","numStops","to","stopIndex","from","_onLegClick","mode","routeShortName","routeLongName","headsign","realTime","startTime","backgroundColor","float","stopId","formatLocation","name","tripId","_onClick","duration","clear","intermediateStops","map","s","i","alerts","alert","alertDescriptionText","alertUrl","agencyUrl","agencyName","endTime","Component","itinerary","PropTypes","object","str","trim","toLowerCase","replace","split","includes","toUpperCase","capitalizeFirst","join","charAt","slice"],"mappings":"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","sourcesContent":["import Icon from '../icon'\nimport React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport ModeIcon from '../../icons/mode-icon'\nimport ViewTripButton from '../../viewers/view-trip-button'\nimport ViewStopButton from '../../viewers/view-stop-button'\n\nimport { getMapColor } from '../../../util/itinerary'\nimport { formatDuration, formatTime } from '../../../util/time'\n\nexport default class TransitLeg extends Component {\n  static propTypes = {\n    itinerary: PropTypes.object\n  }\n\n  constructor (props) {\n    super(props)\n    this.state = {\n      expanded: false\n    }\n  }\n\n  _onLegClick (e, leg, index) {\n    if (this.props.active) {\n      this.props.setActiveLeg(null)\n    } else {\n      this.props.setActiveLeg(index, leg)\n    }\n  }\n\n  _onClick = () => {\n    this.setState({expanded: !this.state.expanded})\n  }\n\n  render () {\n    const { active, index, leg } = this.props\n    const { expanded } = this.state\n    const numStops = leg.to.stopIndex - leg.from.stopIndex - 1\n\n    return (\n      <div\n        className={`leg${active ? ' active' : ''} transit-leg`}>\n        <button\n          className={`header`}\n          onClick={(e) => this._onLegClick(e, leg, index)}\n        >\n          <div className='mode-icon-container'>\n            <ModeIcon mode={leg.mode} />\n          </div>\n          <div className='route-name'>\n            <div>\n              {leg.routeShortName && <span className='route-short-name'>{leg.routeShortName}</span>}\n              {leg.routeLongName && <span className='route-long-name'>{leg.routeLongName}</span>}\n            </div>\n            {leg.headsign && <div className='headsign'>To {leg.headsign}</div>}\n          </div>\n          {leg.realTime ? <Icon type='rss' /> : null}\n        </button>\n        <div className='step-by-step'>\n          <div className='transit-leg-body'>\n\n            {/* 'from' Stop Row */}\n            <div className='from-row'>\n              <div className='time-cell'>{formatTime(leg.startTime)}</div>\n              <div className='trip-line-cell'>\n                <div className='trip-line-top' style={{ backgroundColor: getMapColor(leg.mode) }} />\n                <div className='stop-bubble' />\n              </div>\n              <div className='stop-name-cell'>\n                <div style={{ float: 'right' }}>\n                  <ViewStopButton stopId={leg.from.stopId} />\n                </div>\n                {formatLocation(leg.from.name)}\n              </div>\n            </div>\n\n            {/* Trip Details Row (intermediate stops, alerts, etc.) ${getMapColor(leg.mode)} */}\n            <div className='trip-details-row'>\n              <div className='time-cell' />\n              <div className='trip-line-cell'>\n                <div className='trip-line-middle' style={{ backgroundColor: getMapColor(leg.mode) }} />\n              </div>\n              <div className='trip-details-cell'>\n                {/* Intermediate Stops (expandable) */}\n                <div className='intermediate-stops'>\n                  <div>\n                    {/* Trip Viewer Button */}\n                    <div style={{float: 'right'}}>\n                      <ViewTripButton\n                        tripId={leg.tripId}\n                        fromIndex={leg.from.stopIndex}\n                        toIndex={leg.to.stopIndex}\n                      />\n                    </div>\n\n                    {/* Expand Stops Button */}\n                    <button className='clear-button-formatting' onClick={this._onClick}>\n                      <Icon type={`caret-${expanded ? 'down' : 'right'}`} />\n                      <span className='transit-duration'>{formatDuration(leg.duration)}</span>\n                      {' '}\n                      ({numStops ? `${numStops} stops` : 'non-stop'})\n                    </button>\n                    <div style={{ clear: 'both' }} />\n                  </div>\n\n                  {/* Expanded Stops */}\n                  {expanded &&\n                    <div>\n                      <div className='stop-list'>\n                        {leg.intermediateStops.map((s, i) => (\n                          <div key={i} className='stop-item item'>\n                            <div className='trip-line-stop' style={{ backgroundColor: getMapColor(leg.mode) }} />\n                            <span className='stop-name'>{formatLocation(s.name)}</span>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  }\n                </div>\n\n                {/* Service Alerts for Leg */}\n                {leg.alerts &&\n                  <div>\n                    <div className='item'><Icon type='exclamation-circle' /> Information</div>\n                    {expanded &&\n                      <div>\n                        {leg.alerts.map((alert, i) => (\n                          <div className='alert-item item' key={i}>\n                            {alert.alertDescriptionText}\n                            {' '}\n                            {alert.alertUrl ? <a target='_blank' href={alert.alertUrl}>more info</a> : null}\n                          </div>\n                        ))}\n                      </div>\n                    }\n                  </div>\n                }\n\n                {/* General Info */}\n                <div className='item info-item'>\n                  <span className='agency-info'>Service operated by <a href={leg.agencyUrl}>{leg.agencyName}</a></span>\n                  {\n                    // route info included?\n                    // <span className='route-info'><a target='_blank' href={leg.routeUrl}>Route information</a></span>\n                  }\n                </div>\n              </div>\n            </div>\n\n            {/* 'to' stop row */}\n            <div className='to-row'>\n              <div className='time-cell'>{formatTime(leg.endTime)}</div>\n              <div className='trip-line-cell'>\n                <div className='trip-line-bottom' style={{ backgroundColor: getMapColor(leg.mode) }} />\n                <div className='stop-bubble' />\n              </div>\n              <div className='stop-name-cell'>\n                <div style={{ float: 'right' }}>\n                  <ViewStopButton stopId={leg.to.stopId} />\n                </div>\n                {formatLocation(leg.to.name)}\n              </div>\n            </div>\n\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nfunction formatLocation (str) {\n  return str\n    .trim()\n    .toLowerCase()\n    .replace('/', ' / ')\n    .replace('-', ' - ')\n    .replace('@', ' @ ')\n    .replace('(', '( ')\n    .replace('  ', ' ')\n    .split(' ')\n    .map(s => {\n      if (['ne', 'sw', 'nw', 'se'].includes(s)) return s.toUpperCase()\n      return capitalizeFirst(s)\n    })\n    .join(' ')\n    .replace('( ', '(')\n}\n\nfunction capitalizeFirst (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n}\n"]}