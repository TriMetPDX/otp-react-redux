{"version":3,"sources":["itinerary-carousel.js"],"names":["ItineraryCarousel","props","onClick","activeItinerary","itineraries","setActiveItinerary","length","index","indexLatest","itineraryClass","hideHeader","pending","showProfileSummary","views","push","padding","fontSize","marginBottom","profileOptions","concat","map","itinerary","React","createElement","key","expanded","_onItineraryClick","_onLeftClick","_onRightClick","_onSwipe","Component","PropTypes","array","bool","number","func","setActiveLeg","setActiveStep","companies","string","DefaultItinerary","mapStateToProps","state","ownProps","activeSearch","otp","response","plan","profile","activeLeg","activeStep","currentQuery","timeFormat","config","mapDispatchToProps","dispatch","leg","step"],"mappings":"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","sourcesContent":["import React, { Component, PropTypes } from 'react'\nimport { Button } from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport SwipeableViews from 'react-swipeable-views'\n\nimport { setActiveItinerary, setActiveLeg, setActiveStep } from '../../actions/narrative'\nimport Icon from './icon'\nimport DefaultItinerary from './default/default-itinerary'\nimport Loading from './loading'\nimport NarrativeProfileSummary from './narrative-profile-summary'\nimport { getActiveItineraries, getActiveSearch } from '../../util/state'\nimport { profileOptionsToItineraries } from '../../util/profile'\nimport { getTimeFormat } from '../../util/time'\n\nclass ItineraryCarousel extends Component {\n  state = {}\n  static propTypes = {\n    itineraries: PropTypes.array,\n    pending: PropTypes.bool,\n    activeItinerary: PropTypes.number,\n    hideHeader: PropTypes.bool,\n    itineraryClass: PropTypes.func,\n    onClick: PropTypes.func,\n    setActiveItinerary: PropTypes.func,\n    setActiveLeg: PropTypes.func,\n    setActiveStep: PropTypes.func,\n    expanded: PropTypes.bool,\n    showProfileSummary: PropTypes.bool,\n    profileOptions: PropTypes.array,\n    companies: PropTypes.string\n  }\n\n  static defaultProps = {\n    itineraryClass: DefaultItinerary\n  }\n\n  _onItineraryClick = () => {\n    if (typeof this.props.onClick === 'function') this.props.onClick()\n  }\n\n  _onLeftClick = () => {\n    const { activeItinerary, itineraries, setActiveItinerary } = this.props\n    setActiveItinerary(activeItinerary === 0 ? itineraries.length - 1 : activeItinerary - 1)\n  }\n\n  _onRightClick = () => {\n    const { activeItinerary, itineraries, setActiveItinerary } = this.props\n    setActiveItinerary(activeItinerary === itineraries.length - 1 ? 0 : activeItinerary + 1)\n  }\n\n  _onSwipe = (index, indexLatest) => {\n    this.props.setActiveItinerary(index)\n  }\n\n  render () {\n    const { activeItinerary, itineraries, itineraryClass, hideHeader, pending, showProfileSummary } = this.props\n    if (pending) return <Loading small />\n    if (!itineraries) return null\n\n    let views = []\n    if (showProfileSummary) {\n      views.push(<div style={{ padding: '6px 10px' }}>\n        <div style={{ fontSize: '13px', marginBottom: '2px' }}>Your Best Options (Swipe to View All)</div>\n        <NarrativeProfileSummary options={this.props.profileOptions} />\n      </div>)\n    }\n    views = views.concat(itineraries.map((itinerary, index) => {\n      return React.createElement(itineraryClass, {\n        itinerary,\n        index,\n        key: index,\n        expanded: this.props.expanded,\n        onClick: this._onItineraryClick,\n        ...this.props\n      })\n    }))\n\n    return (\n      <div className='options itinerary'>\n        {hideHeader\n          ? null\n          : <div className='header carousel-header'>\n            <Button\n              className='carousel-left-button carousel-button'\n              disabled={activeItinerary === 0}\n              onClick={this._onLeftClick}>\n              <Icon type='arrow-left' />\n            </Button>\n            <div\n              className='text-center carousel-header-text'>\n              {activeItinerary + 1} of {itineraries.length}\n            </div>\n            <Button\n              disabled={activeItinerary === itineraries.length - 1}\n              className='pull-right carousel-right-button carousel-button'\n              onClick={this._onRightClick}>\n              <Icon type='arrow-right' />\n            </Button>\n          </div>\n        }\n        <SwipeableViews\n          index={activeItinerary}\n          onChangeIndex={this._onSwipe}\n        >{views}</SwipeableViews>\n      </div>\n    )\n  }\n}\n\n// connect to the redux store\n\nconst mapStateToProps = (state, ownProps) => {\n  const activeSearch = getActiveSearch(state.otp)\n  let itineraries = null\n  let profileOptions = null\n  let showProfileSummary = false\n  if (activeSearch && activeSearch.response && activeSearch.response.plan) {\n    itineraries = getActiveItineraries(state.otp)\n  } else if (activeSearch && activeSearch.response && activeSearch.response.otp) {\n    profileOptions = activeSearch.response.otp.profile\n    itineraries = profileOptionsToItineraries(profileOptions)\n    showProfileSummary = true\n  }\n\n  const pending = activeSearch && activeSearch.pending\n  return {\n    itineraries,\n    profileOptions,\n    pending,\n    showProfileSummary,\n    activeItinerary: activeSearch && activeSearch.activeItinerary,\n    activeLeg: activeSearch && activeSearch.activeLeg,\n    activeStep: activeSearch && activeSearch.activeStep,\n    companies: state.otp.currentQuery.companies,\n    timeFormat: getTimeFormat(state.otp.config)\n  }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    setActiveItinerary: (index) => { dispatch(setActiveItinerary({ index })) },\n    setActiveLeg: (index, leg) => { dispatch(setActiveLeg({ index, leg })) },\n    setActiveStep: (index, step) => { dispatch(setActiveStep({ index, step })) }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ItineraryCarousel)\n"]}