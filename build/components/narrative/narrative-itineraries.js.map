{"version":3,"sources":["narrative-itineraries.js"],"names":["NarrativeItineraries","e","props","setUseRealtimeResponse","useRealtime","activeItinerary","itineraries","itineraryClass","realtimeEffects","length","isAffectedByRealtimeData","exceedsThreshold","routesDiffer","_toggleRealtimeItineraryClick","map","itinerary","index","React","createElement","key","active","routingType","Component","PropTypes","array","func","pending","bool","number","setActiveItinerary","setActiveLeg","setActiveStep","companies","string","DefaultItinerary","mapStateToProps","state","ownProps","activeSearch","otp","activeLeg","activeStep","currentQuery","mapDispatchToProps","dispatch","leg","step"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\n\nimport {\n  setActiveItinerary,\n  setActiveLeg,\n  setActiveStep,\n  setUseRealtimeResponse\n} from '../../actions/narrative'\nimport DefaultItinerary from './default/default-itinerary'\nimport { getActiveItineraries, getActiveSearch, getRealtimeEffects } from '../../util/state'\nimport RealtimeAnnotation from './realtime-annotation'\n\nclass NarrativeItineraries extends Component {\n  static propTypes = {\n    itineraries: PropTypes.array,\n    itineraryClass: PropTypes.func,\n    pending: PropTypes.bool,\n    activeItinerary: PropTypes.number,\n    setActiveItinerary: PropTypes.func,\n    setActiveLeg: PropTypes.func,\n    setActiveStep: PropTypes.func,\n    setUseRealtimeResponse: PropTypes.func,\n    useRealtime: PropTypes.bool,\n    companies: PropTypes.string\n  }\n\n  static defaultProps = {\n    itineraryClass: DefaultItinerary\n  }\n\n  _toggleRealtimeItineraryClick = (e) => {\n    const {setUseRealtimeResponse, useRealtime} = this.props\n    setUseRealtimeResponse({useRealtime: !useRealtime})\n  }\n\n  render () {\n    const {\n      activeItinerary,\n      itineraries,\n      itineraryClass,\n      realtimeEffects,\n      useRealtime\n    } = this.props\n    if (!itineraries) return null\n\n    return (\n      <div className='options itinerary'>\n        <div className='header'>\n          We found {itineraries.length} itineraries:\n        </div>\n\n        {realtimeEffects.isAffectedByRealtimeData && (\n          realtimeEffects.exceedsThreshold ||\n          realtimeEffects.routesDiffer ||\n          !useRealtime) && (\n          <RealtimeAnnotation\n            realtimeEffects={realtimeEffects}\n            toggleRealtime={this._toggleRealtimeItineraryClick}\n            useRealtime={useRealtime} />\n        )\n        }\n\n        {itineraries.map((itinerary, index) => {\n          return React.createElement(itineraryClass, {\n            itinerary,\n            index,\n            key: index,\n            active: index === activeItinerary,\n            routingType: 'ITINERARY',\n            ...this.props\n          })\n        })}\n      </div>\n    )\n  }\n}\n\n// connect to the redux store\n\nconst mapStateToProps = (state, ownProps) => {\n  const activeSearch = getActiveSearch(state.otp)\n  // const { activeItinerary, activeLeg, activeStep } = activeSearch ? activeSearch.activeItinerary : {}\n  const pending = activeSearch ? activeSearch.pending : false\n  const itineraries = getActiveItineraries(state.otp)\n  const realtimeEffects = getRealtimeEffects(state.otp)\n  const useRealtime = state.otp.useRealtime\n  return {\n    // swap out realtime itineraries with non-realtime depending on boolean\n    itineraries,\n    pending,\n    realtimeEffects,\n    activeItinerary: activeSearch && activeSearch.activeItinerary,\n    activeLeg: activeSearch && activeSearch.activeLeg,\n    activeStep: activeSearch && activeSearch.activeStep,\n    useRealtime,\n    companies: state.otp.currentQuery.companies\n  }\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    setActiveItinerary: index => {\n      dispatch(setActiveItinerary({index}))\n    },\n    setActiveLeg: (index, leg) => {\n      dispatch(setActiveLeg({index, leg}))\n    },\n    setActiveStep: (index, step) => {\n      dispatch(setActiveStep({index, step}))\n    },\n    setUseRealtimeResponse: ({useRealtime}) => {\n      dispatch(setUseRealtimeResponse({useRealtime}))\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(\n  NarrativeItineraries\n)\n"]}