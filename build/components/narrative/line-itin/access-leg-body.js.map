{"version":3,"sources":["access-leg-body.js"],"names":["AccessLegBody","props","setState","expanded","state","setActiveLeg","legIndex","leg","config","customIcons","followsTransit","timeOptions","mode","hailedCar","_onSummaryClick","_onStepsHeaderClick","duration","steps","routingType","animation","Component","PropTypes","object","string","TNCLeg","LYFT_CLIENT_ID","UBER_CLIENT_ID","universalLinks","from","lat","lon","encodeURI","name","to","tncData","estimatedArrival","Math","round","displayName","onSummaryClick","marginTop","marginBottom","height","position","company","top","left","paddingTop","width","textAlign","borderTop","borderBottom","borderRight","right","bottom","display","backgroundColor","padding","verticalAlign","color","fontStyle","lineHeight","startTime","minCost","currencyFormatter","format","code","currency","maxCost","AccessLegSummary","distance","companies","AccessLegSteps","map","step","k","float","fill","relativeDirection","marginLeft","fontWeight","array"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { VelocityTransitionGroup } from 'velocity-react'\nimport currencyFormatter from 'currency-formatter'\n\nimport LegDiagramPreview from '../leg-diagram-preview'\n\nimport { distanceString } from '../../../util/distance'\nimport {\n  getLegModeLabel,\n  getLegIcon,\n  getPlaceName,\n  getStepDirection,\n  getStepStreetName\n} from '../../../util/itinerary'\nimport { formatDuration, formatTime } from '../../../util/time'\nimport { isMobile } from '../../../util/ui'\n\nimport DirectionIcon from '../../icons/direction-icon'\n\n/**\n * Component for access (e.g. walk/bike/etc.) leg in narrative itinerary. This\n * particular component is used in the line-itin (i.e., trimet-mod-otp) version\n * of the narrative itinerary.\n */\nexport default class AccessLegBody extends Component {\n  static propTypes = {\n    leg: PropTypes.object,\n    routingType: PropTypes.string\n  }\n\n  constructor (props) {\n    super(props)\n    this.state = { expanded: false }\n  }\n\n  _onStepsHeaderClick = () => {\n    this.setState({ expanded: !this.state.expanded })\n  }\n\n  _onSummaryClick = () => {\n    this.props.setActiveLeg(this.props.legIndex, this.props.leg)\n  }\n\n  render () {\n    const { config, customIcons, followsTransit, leg, timeOptions } = this.props\n\n    if (leg.mode === 'CAR' && leg.hailedCar) {\n      return (\n        <TNCLeg\n          config={config}\n          leg={leg}\n          onSummaryClick={this._onSummaryClick}\n          timeOptions={timeOptions}\n          followsTransit={followsTransit}\n          customIcons={customIcons} />\n      )\n    }\n\n    return (\n      <div className='leg-body'>\n        <AccessLegSummary\n          config={config}\n          leg={leg}\n          onSummaryClick={this._onSummaryClick}\n          customIcons={customIcons} />\n\n        <div onClick={this._onStepsHeaderClick} className='steps-header'>\n          {formatDuration(leg.duration)}\n          {leg.steps && <span> <i className={`fa fa-caret-${this.state.expanded ? 'up' : 'down'}`} /></span>}\n        </div>\n\n        {this.props.routingType === 'ITINERARY' && <LegDiagramPreview leg={leg} />}\n        <VelocityTransitionGroup enter={{animation: 'slideDown'}} leave={{animation: 'slideUp'}}>\n          {this.state.expanded && <AccessLegSteps steps={leg.steps} />}\n        </VelocityTransitionGroup>\n      </div>\n    )\n  }\n}\n\nclass TNCLeg extends Component {\n  render () {\n    // TODO: ensure that client ID fields are populated\n    const {\n      config,\n      LYFT_CLIENT_ID,\n      UBER_CLIENT_ID,\n      customIcons,\n      followsTransit,\n      leg,\n      timeOptions\n    } = this.props\n    const universalLinks = {\n      'UBER': `https://m.uber.com/${isMobile() ? 'ul/' : ''}?client_id=${UBER_CLIENT_ID}&action=setPickup&pickup[latitude]=${leg.from.lat}&pickup[longitude]=${leg.from.lon}&pickup[formatted_address]=${encodeURI(leg.from.name)}&dropoff[latitude]=${leg.to.lat}&dropoff[longitude]=${leg.to.lon}&dropoff[formatted_address]=${encodeURI(leg.to.name)}`,\n      'LYFT': `https://lyft.com/ride?id=lyft&partner=${LYFT_CLIENT_ID}&pickup[latitude]=${leg.from.lat}&pickup[longitude]=${leg.from.lon}&destination[latitude]=${leg.to.lat}&destination[longitude]=${leg.to.lon}`\n    }\n    const { tncData } = leg\n\n    if (!tncData || !tncData.estimatedArrival) return null\n    return (\n      <div>\n        <div className='place-subheader'>\n          Wait {!followsTransit && <span>{Math.round(tncData.estimatedArrival / 60)} minutes </span>}for {tncData.displayName} pickup\n        </div>\n\n        <div className='leg-body'>\n          {/* The icon/summary row */}\n          <AccessLegSummary\n            config={config}\n            leg={leg}\n            onSummaryClick={this.props.onSummaryClick}\n            customIcons={customIcons} />\n\n          {/* The \"Book Ride\" button */}\n          <div style={{ marginTop: 10, marginBottom: 10, height: 32, position: 'relative' }}>\n            <a\n              className='btn btn-default'\n              href={universalLinks[tncData.company]}\n              style={{ position: 'absolute', top: 0, left: 0, height: 32, paddingTop: 4, width: 90, textAlign: 'center' }}\n              target={isMobile() ? '_self' : '_blank'}\n            >\n              Book Ride\n            </a>\n            {followsTransit && <div style={{ position: 'absolute', top: 0, left: 94, width: 0, height: 0, borderTop: '16px solid transparent', borderBottom: '16px solid transparent', borderRight: '16px solid #fcf9d3' }} />}\n            {followsTransit && (\n              <div style={{ position: 'absolute', top: 0, left: 110, right: 0, bottom: 0 }}>\n                <div style={{ display: 'table', backgroundColor: '#fcf9d3', width: '100%', height: '100%' }}>\n                  <div style={{ padding: '0px 2px', display: 'table-cell', verticalAlign: 'middle', color: '#444', fontStyle: 'italic', lineHeight: 0.95 }}>\n                    Wait until {formatTime(leg.startTime - tncData.estimatedArrival * 1000, timeOptions)} to book\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n\n          {/* The estimated travel time */}\n          <div className='steps-header'>\n            Estimated travel time: {formatDuration(leg.duration)} (does not account for traffic)\n          </div>\n\n          {/* The estimated travel cost */}\n          {tncData.minCost &&\n            <p>Estimated cost: {\n              `${currencyFormatter.format(tncData.minCost, { code: tncData.currency })} - ${currencyFormatter.format(tncData.maxCost, { code: tncData.currency })}`\n            }</p>\n          }\n        </div>\n      </div>\n    )\n  }\n}\n\nclass AccessLegSummary extends Component {\n  render () {\n    const { config, customIcons, leg } = this.props\n    return (\n      <div className='summary leg-description' onClick={this.props.onSummaryClick}>\n        {/* Mode-specific icon */}\n        <div><div className='icon'>{getLegIcon(leg, customIcons)}</div></div>\n\n        {/* Leg description, e.g. \"Walk 0.5 mi to...\" */}\n        <div>\n          {getLegModeLabel(leg)}\n          {' '}\n          {leg.distance > 0 && <span> {distanceString(leg.distance)}</span>}\n          {` to ${getPlaceName(leg.to, config.companies)}`}\n        </div>\n      </div>\n    )\n  }\n}\n\nclass AccessLegSteps extends Component {\n  static propTypes = {\n    steps: PropTypes.array\n  }\n\n  render () {\n    return (\n      <div className='steps'>\n        {this.props.steps.map((step, k) => {\n          return <div className='step-row' key={k}>\n            <div style={{ width: 16, height: 16, float: 'left', fill: '#999999' }}>\n              <DirectionIcon relativeDirection={step.relativeDirection} />\n            </div>\n\n            <div style={{ marginLeft: 24, lineHeight: 1.25, paddingTop: 1 }}>\n              {getStepDirection(step)}\n              <span>{step.relativeDirection === 'ELEVATOR' ? ' to ' : ' on '}</span>\n              <span style={{ fontWeight: 500 }}>\n                {getStepStreetName(step)}\n              </span>\n            </div>\n          </div>\n        })}\n      </div>\n    )\n  }\n}\n"]}