{"version":3,"sources":["line-itinerary.js"],"names":["LineItinerary","itinerary","props","summary","_getSummary","transitModes","legs","forEach","leg","index","mode","modeStr","indexOf","push","length","join","active","companies","customIcons","expanded","itineraryFooter","showRealtimeAnnotation","onClick","timeFormat","timeOptions","format","offset","NarrativeItinerary"],"mappings":";;;;;;;;;;;;;AAAA;;AAEA;;AACA;;AACA;;AAEA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;IAEqBA,a;;;;;;;;;;;;;kCACJ;AAAA,UACLC,SADK,GACS,KAAKC,KADd,CACLD,SADK;AAEb,aAAOA,SAAS,CAACE,OAAV,IAAqB,KAAKC,WAAL,CAAiBH,SAAjB,CAA5B;AACD;;;gCAEYA,S,EAAW;AACtB,UAAIE,OAAO,GAAG,EAAd;AACA,UAAIE,YAAY,GAAG,EAAnB;AACAJ,MAAAA,SAAS,CAACK,IAAV,CAAeC,OAAf,CAAuB,UAACC,GAAD,EAAMC,KAAN,EAAgB;AACrC,YAAI,0BAAUD,GAAG,CAACE,IAAd,CAAJ,EAAyB;AACvB,cAAMC,OAAO,GAAG,gCAAgBH,GAAhB,CAAhB;AACA,cAAIH,YAAY,CAACO,OAAb,CAAqBD,OAArB,MAAkC,CAAC,CAAvC,EAA0CN,YAAY,CAACQ,IAAb,CAAkBF,OAAlB;AAC3C;AACF,OALD,EAHsB,CAUtB;;AACA,UAAI,CAAC,0BAAUV,SAAS,CAACK,IAAV,CAAe,CAAf,EAAkBI,IAA5B,CAAL,EAAwC;AACtCP,QAAAA,OAAO,IAAI,gCAAgBF,SAAS,CAACK,IAAV,CAAe,CAAf,CAAhB,CAAX;AACD,OAbqB,CAetB;;;AACA,UAAID,YAAY,CAACS,MAAb,GAAsB,CAA1B,EAA6B;AAC3BX,QAAAA,OAAO,IAAI,SAASE,YAAY,CAACU,IAAb,CAAkB,IAAlB,CAApB;AACD;;AAED,aAAOZ,OAAP;AACD;;;6BAES;AAAA,wBAWJ,KAAKD,KAXD;AAAA,UAENc,MAFM,eAENA,MAFM;AAAA,UAGNC,SAHM,eAGNA,SAHM;AAAA,UAINC,WAJM,eAINA,WAJM;AAAA,UAKNC,QALM,eAKNA,QALM;AAAA,UAMNlB,SANM,eAMNA,SANM;AAAA,UAONmB,eAPM,eAONA,eAPM;AAAA,UAQNC,sBARM,eAQNA,sBARM;AAAA,UASNC,OATM,eASNA,OATM;AAAA,UAUNC,UAVM,eAUNA,UAVM;;AAaR,UAAI,CAACtB,SAAL,EAAgB;AACd,eAAO,0DAAP;AACD;;AAED,UAAMuB,WAAW,GAAG;AAClBC,QAAAA,MAAM,EAAEF,UADU;AAElBG,QAAAA,MAAM,EAAE,kCAAkBzB,SAAlB;AAFU,OAApB;AAKA,aACE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE,6BAAC,oBAAD;AACE,QAAA,SAAS,EAAEgB,SADb;AAEE,QAAA,SAAS,EAAEhB,SAFb;AAGE,QAAA,WAAW,EAAEuB,WAHf;AAIE,QAAA,OAAO,EAAEF,OAJX;AAKE,QAAA,WAAW,EAAEJ;AALf,QADF,EAOGG,sBAAsB,IAAI,6BAAC,iCAAD,OAP7B,EAQGL,MAAM,IAAIG,QAAV,GACG,6BAAC,iBAAD,eACI,KAAKjB,KADT;AAEA,QAAA,SAAS,EAAED,SAFX;AAGA,QAAA,WAAW,EAAEuB;AAHb,SADH,GAKG,IAbN,EAcGJ,eAdH,CADF;AAkBD;;;;EArEwCO,2B","sourcesContent":["import React from 'react'\n\nimport NarrativeItinerary from '../narrative-itinerary'\nimport SimpleRealtimeAnnotation from '../simple-realtime-annotation'\nimport { getLegModeLabel, getTimeZoneOffset, isTransit } from '../../../util/itinerary'\n\nimport ItinerarySummary from './itin-summary'\nimport ItineraryBody from './itin-body'\n\nexport default class LineItinerary extends NarrativeItinerary {\n  _headerText () {\n    const { itinerary } = this.props\n    return itinerary.summary || this._getSummary(itinerary)\n  }\n\n  _getSummary (itinerary) {\n    let summary = ''\n    let transitModes = []\n    itinerary.legs.forEach((leg, index) => {\n      if (isTransit(leg.mode)) {\n        const modeStr = getLegModeLabel(leg)\n        if (transitModes.indexOf(modeStr) === -1) transitModes.push(modeStr)\n      }\n    })\n\n    // check for access mode\n    if (!isTransit(itinerary.legs[0].mode)) {\n      summary += getLegModeLabel(itinerary.legs[0])\n    }\n\n    // append transit modes, if applicable\n    if (transitModes.length > 0) {\n      summary += ' to ' + transitModes.join(', ')\n    }\n\n    return summary\n  }\n\n  render () {\n    const {\n      active,\n      companies,\n      customIcons,\n      expanded,\n      itinerary,\n      itineraryFooter,\n      showRealtimeAnnotation,\n      onClick,\n      timeFormat\n    } = this.props\n\n    if (!itinerary) {\n      return <div>No Itinerary!</div>\n    }\n\n    const timeOptions = {\n      format: timeFormat,\n      offset: getTimeZoneOffset(itinerary)\n    }\n\n    return (\n      <div className='line-itin'>\n        <ItinerarySummary\n          companies={companies}\n          itinerary={itinerary}\n          timeOptions={timeOptions}\n          onClick={onClick}\n          customIcons={customIcons} />\n        {showRealtimeAnnotation && <SimpleRealtimeAnnotation />}\n        {active || expanded\n          ? <ItineraryBody\n            {...this.props}\n            itinerary={itinerary}\n            timeOptions={timeOptions} />\n          : null}\n        {itineraryFooter}\n      </div>\n    )\n  }\n}\n"]}