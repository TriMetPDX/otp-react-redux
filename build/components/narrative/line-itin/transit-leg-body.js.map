{"version":3,"sources":["transit-leg-body.js"],"names":["TransitLegBody","props","setState","stopsExpanded","state","alertsExpanded","setActiveLeg","legIndex","leg","customIcons","longDateFormat","operator","timeFormat","agencyBrandingUrl","agencyName","agencyUrl","alerts","mode","routeShortName","routeLongName","headsign","logoUrl","logo","iconKey","customIconForLeg","customIcon","_onSummaryClick","fontWeight","marginLeft","length","_onToggleAlertsClick","pluralize","animation","intermediateStops","_onToggleStopsClick","duration","tripId","from","stopIndex","to","averageWait","Component","PropTypes","object","number","func","mapStateToProps","ownProps","otp","config","operators","find","id","agencyId","mapDispatchToProps","IntermediateStops","stops","map","stop","k","name","array","AlertsBody","sort","a","b","effectiveStartDate","alert","i","dateTimeString","calendar","sameDay","nextDay","lastDay","lastWeek","sameElse","effectiveDateString","alertDescriptionText","str","list"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { VelocityTransitionGroup } from 'velocity-react'\nimport moment from 'moment'\n\nimport ViewTripButton from '../../viewers/view-trip-button'\nimport { getIcon } from '../../../util/itinerary'\nimport {\n  formatDuration,\n  getLongDateFormat,\n  getTimeFormat\n} from '../../../util/time'\n\n// TODO: support multi-route legs for profile routing\n\nclass TransitLegBody extends Component {\n  static propTypes = {\n    leg: PropTypes.object,\n    legIndex: PropTypes.number,\n    setActiveLeg: PropTypes.func\n  }\n\n  constructor (props) {\n    super(props)\n    this.state = {\n      alertsExpanded: false,\n      stopsExpanded: false\n    }\n  }\n\n  _onToggleStopsClick = () => {\n    this.setState({ stopsExpanded: !this.state.stopsExpanded })\n  }\n\n  _onToggleAlertsClick = () => {\n    this.setState({ alertsExpanded: !this.state.alertsExpanded })\n  }\n\n  _onSummaryClick = () => {\n    this.props.setActiveLeg(this.props.legIndex, this.props.leg)\n  }\n\n  render () {\n    const { customIcons, leg, longDateFormat, operator, timeFormat } = this.props\n    const {\n      agencyBrandingUrl,\n      agencyName,\n      agencyUrl,\n      alerts,\n      mode,\n      routeShortName,\n      routeLongName,\n      headsign\n    } = leg\n    const { alertsExpanded, stopsExpanded } = this.state\n\n    // If the config contains an operator with a logo URL, prefer that over the\n    // one provided by OTP (which is derived from agency.txt#agency_branding_url)\n    const logoUrl = operator && operator.logo ? operator.logo : agencyBrandingUrl\n\n    // get the iconKey for the leg's icon\n    let iconKey = mode\n    if (typeof customIcons.customIconForLeg === 'function') {\n      const customIcon = customIcons.customIconForLeg(leg)\n      if (customIcon) iconKey = customIcon\n    }\n\n    return (\n      <div className='leg-body'>\n        {/* The Route Icon/Name Bar; clickable to set as active leg */}\n        <div className='summary' onClick={this._onSummaryClick}>\n          <div className='route-name leg-description'>\n            <div>\n              <div className='icon'>{getIcon(iconKey, customIcons)}</div>\n            </div>\n            {routeShortName && (\n              <div>\n                <span className='route-short-name'>{routeShortName}</span>\n              </div>\n            )}\n            <div className='route-long-name'>\n              {routeLongName}\n              {headsign && <span> <span style={{ fontWeight: '200' }}>to</span> {headsign}</span>}\n            </div>\n          </div>\n        </div>\n\n        {/* Agency information */}\n        {\n          <div className='agency-info'>\n            Service operated by{' '}\n            <a href={agencyUrl} target='_blank'>\n              {agencyName}{logoUrl &&\n                <img\n                  src={logoUrl}\n                  height={25}\n                  style={{ marginLeft: '5px' }} />\n              }\n            </a>\n          </div>\n        }\n\n        {/* Alerts toggle */}\n        {alerts && alerts.length > 0 && (\n          <div onClick={this._onToggleAlertsClick} className='transit-alerts-toggle'>\n            <i className='fa fa-exclamation-triangle' /> {alerts.length} {pluralize('alert', alerts)}\n            {' '}\n            <i className={`fa fa-caret-${this.state.alertsExpanded ? 'up' : 'down'}`} />\n          </div>\n        )}\n\n        {/* The Alerts body, if visible */}\n        <VelocityTransitionGroup enter={{animation: 'slideDown'}} leave={{animation: 'slideUp'}}>\n          {alertsExpanded &&\n            <AlertsBody\n              alerts={leg.alerts}\n              longDateFormat={longDateFormat}\n              timeFormat={timeFormat}\n            />\n          }\n        </VelocityTransitionGroup>\n        {/* The \"Ride X Min / X Stops\" Row, including IntermediateStops body */}\n        {leg.intermediateStops && leg.intermediateStops.length > 0 && (\n          <div className='transit-leg-details'>\n\n            {/* The header summary row, clickable to expand intermediate stops */}\n            <div onClick={this._onToggleStopsClick} className='header'>\n              {leg.duration && <span>Ride {formatDuration(leg.duration)}</span>}\n              {leg.intermediateStops && (\n                <span>\n                  {' / '}\n                  {leg.intermediateStops.length + 1}\n                  {' stops '}\n                  <i className={`fa fa-caret-${this.state.stopsExpanded ? 'up' : 'down'}`} />\n                </span>\n              )}\n\n              {/* The ViewTripButton. TODO: make configurable */}\n              <ViewTripButton\n                tripId={leg.tripId}\n                fromIndex={leg.from.stopIndex}\n                toIndex={leg.to.stopIndex}\n              />\n            </div>\n            {/* IntermediateStops expanded body */}\n            <VelocityTransitionGroup enter={{animation: 'slideDown'}} leave={{animation: 'slideUp'}}>\n              {stopsExpanded ? <IntermediateStops stops={leg.intermediateStops} /> : null }\n            </VelocityTransitionGroup>\n\n            {/* Average wait details, if present */}\n            {leg.averageWait && <span>Typical Wait: {formatDuration(leg.averageWait)}</span>}\n          </div>\n        )}\n      </div>\n    )\n  }\n}\n\n// Connect to the redux store\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    longDateFormat: getLongDateFormat(state.otp.config),\n    operator: state.otp.config.operators.find(operator => operator.id === ownProps.leg.agencyId),\n    timeFormat: getTimeFormat(state.otp.config)\n  }\n}\n\nconst mapDispatchToProps = {}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TransitLegBody)\n\nclass IntermediateStops extends Component {\n  static propTypes = {\n    stops: PropTypes.array\n  }\n\n  render () {\n    return (\n      <div className='intermediate-stops'>\n        {this.props.stops.map((stop, k) => {\n          return <div className='stop-row' key={k}>\n            <div className='stop-marker'>&bull;</div>\n            <div className='stop-name'>{stop.name}</div>\n          </div>\n        })}\n      </div>\n    )\n  }\n}\n\nclass AlertsBody extends Component {\n  static propTypes = {\n    alerts: PropTypes.array\n  }\n\n  render () {\n    const { longDateFormat, timeFormat } = this.props\n    return (\n      <div className='transit-alerts'>\n        {this.props.alerts\n          .sort((a, b) => b.effectiveStartDate - a.effectiveStartDate)\n          .map((alert, i) => {\n            // If alert is effective as of +/- one day, use today, tomorrow, or\n            // yesterday with time. Otherwise, use long date format.\n            const dateTimeString = moment(alert.effectiveStartDate)\n              .calendar(null, {\n                sameDay: `${timeFormat}, [Today]`,\n                nextDay: `${timeFormat}, [Tomorrow]`,\n                lastDay: `${timeFormat}, [Yesterday]`,\n                lastWeek: `${longDateFormat}`,\n                sameElse: `${longDateFormat}`\n              })\n            const effectiveDateString = `Effective as of ${dateTimeString}`\n            return (\n              <div key={i} className='transit-alert'>\n                <div className='alert-icon'><i className='fa fa-exclamation-triangle' /></div>\n                <div className='alert-body'>{alert.alertDescriptionText}</div>\n                <div className='effective-date'>{effectiveDateString}</div>\n              </div>\n            )\n          })\n        }\n      </div>\n    )\n  }\n}\n\n// TODO use pluralize that for internationalization (and complex plurals, i.e., not just adding 's')\nfunction pluralize (str, list) {\n  return `${str}${list.length > 1 ? 's' : ''}`\n}\n"]}