{"version":3,"sources":["results-screen.js"],"names":["MobileResultsScreen","props","clearActiveSearch","setMobileScreen","MobileScreens","SEARCH_FORM","_setExpanded","state","expanded","setUseRealtimeResponse","useRealtime","prevProps","activeLeg","setState","refs","scrollTop","error","icons","itineraryClass","itineraryFooter","query","realtimeEffects","resultCount","activeItineraryIndex","narrativeContainerStyle","top","overflowY","height","backgroundColor","headerAction","showRealtimeAnnotation","isAffectedByRealtimeData","exceedsThreshold","routesDiffer","locationsSummary","position","left","right","paddingRight","padding","fontSize","lineHeight","from","name","marginTop","to","_editSearchClicked","width","dots","i","push","map","bottom","_optionClicked","marginLeft","Component","PropTypes","number","element","object","func","mapStateToProps","ownProps","activeSearch","otp","response","nonRealtimeResponse","currentQuery","routingType","plan","itineraries","length","profile","activeItinerary","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Button, Col, Row } from 'react-bootstrap'\n\nimport DefaultMap from '../map/default-map'\nimport ErrorMessage from '../form/error-message'\nimport ItineraryCarousel from '../narrative/itinerary-carousel'\nimport LocationIcon from '../icons/location-icon'\n\nimport MobileContainer from './container'\nimport MobileNavigationBar from './navigation-bar'\n\nimport { MobileScreens, setMobileScreen } from '../../actions/ui'\nimport { setUseRealtimeResponse } from '../../actions/narrative'\nimport { clearActiveSearch } from '../../actions/form'\nimport { getActiveSearch, getRealtimeEffects } from '../../util/state'\nimport { enableScrollForSelector } from '../../util/ui'\n\nclass MobileResultsScreen extends Component {\n  static propTypes = {\n    activeItineraryIndex: PropTypes.number,\n    map: PropTypes.element,\n    query: PropTypes.object,\n    resultCount: PropTypes.number,\n\n    setMobileScreen: PropTypes.func\n  }\n\n  constructor () {\n    super()\n    this.state = {\n      expanded: false\n    }\n  }\n\n  componentDidMount () {\n    // Get the target element that we want to persist scrolling for\n    // FIXME Do we need to add something that removes the listeners when\n    // component unmounts?\n    enableScrollForSelector('.mobile-narrative-container')\n  }\n\n  componentDidUpdate (prevProps) {\n    // Check if the active leg changed\n    if (this.props.activeLeg !== prevProps.activeLeg) {\n      this._setExpanded(false)\n    }\n  }\n\n  _setExpanded (expanded) {\n    this.setState({ expanded })\n    this.refs['narrative-container'].scrollTop = 0\n  }\n\n  _editSearchClicked = () => {\n    this.props.clearActiveSearch()\n    this.props.setMobileScreen(MobileScreens.SEARCH_FORM)\n  }\n\n  _optionClicked = () => {\n    this._setExpanded(!this.state.expanded)\n  }\n\n  _toggleRealtime = () => this.props.setUseRealtimeResponse({useRealtime: !this.props.useRealtime})\n\n  render () {\n    const { error, icons, itineraryClass, itineraryFooter, query, realtimeEffects, resultCount, useRealtime, activeItineraryIndex } = this.props\n    const { expanded } = this.state\n\n    const narrativeContainerStyle = expanded\n      ? { top: 140, overflowY: 'auto' }\n      : { height: 80, overflowY: 'hidden' }\n\n    // Ensure that narrative covers map.\n    narrativeContainerStyle.backgroundColor = 'white'\n\n    let headerAction = null\n    const showRealtimeAnnotation = realtimeEffects.isAffectedByRealtimeData && (\n      realtimeEffects.exceedsThreshold ||\n      realtimeEffects.routesDiffer ||\n      !useRealtime\n    )\n\n    /* Old navbar alert\n    if (showRealtimeAnnotation) {\n      headerAction = (\n        <RealtimeAnnotation\n          componentClass='popover'\n          toggleRealtime={this._toggleRealtime}\n          realtimeEffects={realtimeEffects}\n          useRealtime={useRealtime}\n        />\n      )\n    */\n\n    const locationsSummary = (\n      <div style={{ position: 'fixed', top: 50, left: 0, right: 0, height: 50, paddingRight: 10 }}>\n        <Row className='locations-summary' style={{ padding: '4px 8px' }}>\n          <Col xs={8} sm={11} style={{ fontSize: '1.1em', lineHeight: '1.2em' }}>\n            <div className='location'>\n              <LocationIcon type='from' /> { query.from ? query.from.name : '' }\n            </div>\n            <div className='location' style={{ marginTop: '2px' }}>\n              <LocationIcon type='to' /> { query.to ? query.to.name : '' }\n            </div>\n          </Col>\n          <Col xs={4} sm={1}>\n            <Button\n              className='edit-search-button pull-right'\n              onClick={this._editSearchClicked}\n            >Edit</Button>\n          </Col>\n        </Row>\n      </div>\n    )\n\n    if (error) {\n      return (\n        <MobileContainer>\n          <MobileNavigationBar headerText='No Trip Found' />\n          {locationsSummary}\n          <div className='results-error-map'><DefaultMap /></div>\n          <div className='results-error-message'>\n            <ErrorMessage error={error} />\n            <div className='options-lower-tray mobile-padding'>\n              <Button className='back-to-search-button' onClick={this._editSearchClicked} style={{ width: '100%' }}>\n                <i className='fa fa-arrow-left' /> Back to Search\n              </Button>\n            </div>\n          </div>\n        </MobileContainer>\n      )\n    }\n\n    // Construct the 'dots'\n    const dots = []\n    for (let i = 0; i < resultCount; i++) {\n      dots.push(<div key={i} className={`dot${activeItineraryIndex === i ? ' active' : ''}`} />)\n    }\n\n    return (\n      <MobileContainer>\n        <MobileNavigationBar\n          headerText={resultCount\n            ? `We Found ${resultCount} Option${resultCount > 1 ? 's' : ''}`\n            : 'Waiting...'\n          }\n          headerAction={headerAction}\n        />\n        {locationsSummary}\n\n        <div className='results-map'>\n          {this.props.map}\n        </div>\n\n        <div\n          className='mobile-narrative-header'\n          style={{ bottom: expanded ? null : 100, top: expanded ? 100 : null }}\n          onClick={this._optionClicked}\n        >\n          Option {activeItineraryIndex + 1}\n          <i className={`fa fa-caret-${expanded ? 'down' : 'up'}`} style={{ marginLeft: 8 }} />\n        </div>\n\n        <div\n          ref='narrative-container'\n          className='mobile-narrative-container'\n          style={narrativeContainerStyle}\n        >\n          <ItineraryCarousel\n            itineraryClass={itineraryClass}\n            itineraryFooter={itineraryFooter}\n            hideHeader\n            expanded={this.state.expanded}\n            onClick={this._optionClicked}\n            showRealtimeAnnotation={showRealtimeAnnotation}\n            customIcons={icons}\n          />\n        </div>\n\n        <div className='dots-container' style={{ padding: 'none' }}>{dots}</div>\n      </MobileContainer>\n    )\n  }\n}\n\n// connect to the redux store\n\nconst mapStateToProps = (state, ownProps) => {\n  const activeSearch = getActiveSearch(state.otp)\n  const {useRealtime} = state.otp\n  const response = !activeSearch\n    ? null\n    : useRealtime ? activeSearch.response : activeSearch.nonRealtimeResponse\n\n  const realtimeEffects = getRealtimeEffects(state.otp)\n\n  return {\n    query: state.otp.currentQuery,\n    realtimeEffects,\n    error: response && response.error,\n    resultCount:\n      response\n        ? activeSearch.query.routingType === 'ITINERARY'\n          ? response.plan\n            ? response.plan.itineraries.length\n            : 0\n          : response.otp.profile.length\n        : null,\n    useRealtime,\n    activeItineraryIndex: activeSearch ? activeSearch.activeItinerary : null,\n    activeLeg: activeSearch ? activeSearch.activeLeg : null\n  }\n}\n\nconst mapDispatchToProps = {\n  clearActiveSearch,\n  setMobileScreen,\n  setUseRealtimeResponse\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MobileResultsScreen)\n"]}