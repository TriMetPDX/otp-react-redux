{"version":3,"sources":["welcome-screen.js"],"names":["MobileWelcomeScreen","props","setMobileScreen","MobileScreens","SET_INITIAL_LOCATION","selection","type","setLocationToCurrent","showUserSettings","title","_toFieldClicked","_locationSetFromPopup","Component","map","PropTypes","element","func","mapStateToProps","state","ownProps","otp","mapDispatchToProps"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;IAEMA,mB;;;;;;;;;;;;;;;;;;sEAQc,YAAM;AACtB,YAAKC,KAAL,CAAWC,eAAX,CAA2BC,kBAAcC,oBAAzC;AACD,K;;4EAMuB,UAACC,SAAD,EAAe;AACrC;AACA;AACA;AACA,UAAIA,SAAS,CAACC,IAAV,KAAmB,MAAvB,EAA+B;AAC7B,cAAKL,KAAL,CAAWM,oBAAX,CAAgC;AAAED,UAAAA,IAAI,EAAE;AAAR,SAAhC;AACD;AACF,K;;;;;;;6BAES;AAAA,wBAC4B,KAAKL,KADjC;AAAA,UACAO,gBADA,eACAA,gBADA;AAAA,UACkBC,KADlB,eACkBA,KADlB;AAER,aACE,6BAAC,kBAAD,QACE,6BAAC,sBAAD;AAAqB,QAAA,KAAK,EAAEA;AAA5B,QADF,EAEE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE,6BAAC,sBAAD;AACE,QAAA,IAAI,EAAC,IADP;AAEE,QAAA,KAAK,EAAC,0BAFR;AAGE,QAAA,OAAO,EAAE,KAAKC,eAHhB;AAIE,QAAA,eAAe,EAAE;AAJnB,QADF,CAFF,EAUE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE,6BAAC,mBAAD;AAAY,QAAA,aAAa,EAAE,KAAKC;AAAhC,QADF,EAEGH,gBAAgB,GAAG,6BAAC,qBAAD,OAAH,GAAsB,IAFzC,CAVF,CADF;AAiBD;;;;EA5C+BI,gB,GA+ClC;;;gBA/CMZ,mB,eACe;AACjBa,EAAAA,GAAG,EAAEC,mBAAUC,OADE;AAGjBR,EAAAA,oBAAoB,EAAEO,mBAAUE,IAHf;AAIjBd,EAAAA,eAAe,EAAEY,mBAAUE;AAJV,C;;AAgDrB,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,QAAR,EAAqB;AAC3C,MAAMX,gBAAgB,GAAG,gCAAoBU,KAAK,CAACE,GAA1B,CAAzB;AACA,SAAO;AAAEZ,IAAAA,gBAAgB,EAAhBA;AAAF,GAAP;AACD,CAHD;;AAKA,IAAMa,kBAAkB,GAAG;AACzBd,EAAAA,oBAAoB,EAApBA,yBADyB;AAEzBL,EAAAA,eAAe,EAAfA;AAFyB,CAA3B;;eAKe,yBAAQe,eAAR,EAAyBI,kBAAzB,EAA6CrB,mBAA7C,C","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\n\nimport MobileContainer from './container'\nimport LocationField from '../form/location-field'\nimport UserSettings from '../form/user-settings'\nimport DefaultMap from '../map/default-map'\nimport MobileNavigationBar from './navigation-bar'\n\nimport { MobileScreens, setMobileScreen } from '../../actions/ui'\nimport { setLocationToCurrent } from '../../actions/map'\nimport { getShowUserSettings } from '../../util/state'\n\nclass MobileWelcomeScreen extends Component {\n  static propTypes = {\n    map: PropTypes.element,\n\n    setLocationToCurrent: PropTypes.func,\n    setMobileScreen: PropTypes.func\n  }\n\n  _toFieldClicked = () => {\n    this.props.setMobileScreen(MobileScreens.SET_INITIAL_LOCATION)\n  }\n\n  /* Called when the user selects a from/to location using the selection\n   * popup (invoked in mobile mode via a long tap). Note that BaseMap already\n   * takes care of updating the query in the store w/ the selected location */\n\n  _locationSetFromPopup = (selection) => {\n    // If the tapped location was selected as the 'from' endpoint, set the 'to'\n    // endpoint to be the current user location. (If selected as the 'to' point,\n    // no action is needed since 'from' is the current location by default.)\n    if (selection.type === 'from') {\n      this.props.setLocationToCurrent({ type: 'to' })\n    }\n  }\n\n  render () {\n    const { showUserSettings, title } = this.props\n    return (\n      <MobileContainer>\n        <MobileNavigationBar title={title} />\n        <div className='welcome-location mobile-padding'>\n          <LocationField\n            type='to'\n            label='Where do you want to go?'\n            onClick={this._toFieldClicked}\n            showClearButton={false}\n          />\n        </div>\n        <div className='welcome-map'>\n          <DefaultMap onSetLocation={this._locationSetFromPopup} />\n          {showUserSettings ? <UserSettings /> : null}\n        </div>\n      </MobileContainer>\n    )\n  }\n}\n\n// connect to the redux store\n\nconst mapStateToProps = (state, ownProps) => {\n  const showUserSettings = getShowUserSettings(state.otp)\n  return { showUserSettings }\n}\n\nconst mapDispatchToProps = {\n  setLocationToCurrent,\n  setMobileScreen\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MobileWelcomeScreen)\n"]}