{"version":3,"sources":["navigation-bar.js"],"names":["MobileNavigationBar","props","backScreen","onBackClicked","setMobileScreen","showBackButton","headerAction","headerText","title","_backButtonPressed","Component","PropTypes","number","element","string","bool","func","mapStateToProps","state","ownProps","mapDispatchToProps"],"mappings":";;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;IAEMA,mB;;;;;;;;;;;;;;;;;;yEAUiB,YAAM;AAAA,wBACa,MAAKC,KADlB;AAAA,UACjBC,UADiB,eACjBA,UADiB;AAAA,UACLC,aADK,eACLA,aADK;AAEzB,UAAID,UAAJ,EAAgB,MAAKD,KAAL,CAAWG,eAAX,CAA2B,MAAKH,KAAL,CAAWC,UAAtC,EAAhB,KACK,IAAI,OAAOC,aAAP,KAAyB,UAA7B,EAAyCA,aAAa;AAC5D,K;;;;;;;6BAES;AAAA,yBACoD,KAAKF,KADzD;AAAA,UACAI,cADA,gBACAA,cADA;AAAA,UACgBC,YADhB,gBACgBA,YADhB;AAAA,UAC8BC,UAD9B,gBAC8BA,UAD9B;AAAA,UAC0CC,KAD1C,gBAC0CA,KAD1C;AAGR,aACE,6BAAC,sBAAD;AAAQ,QAAA,KAAK,MAAb;AAAc,QAAA,QAAQ;AAAtB,SAEE,6BAAC,sBAAD,CAAQ,MAAR,QACE,6BAAC,sBAAD,CAAQ,KAAR,QACGH,cAAc,GACX;AAAK,QAAA,SAAS,EAAC;AAAf,SAA6B,6BAAC,yBAAD;AAAa,QAAA,IAAI,EAAC,YAAlB;AAA+B,QAAA,OAAO,EAAE,KAAKI;AAA7C,QAA7B,CADW,GAEX,6BAAC,gBAAD,OAHN,CADF,CAFF,EAWE;AAAK,QAAA,SAAS,EAAC;AAAf,SACGF,UAAU,GACP;AAAK,QAAA,SAAS,EAAC;AAAf,SAAqCA,UAArC,CADO,GAEP,0CAAMC,KAAN,CAHN,CAXF,EAkBGF,YAAY,IACX;AAAK,QAAA,SAAS,EAAC;AAAf,SACE;AAAK,QAAA,SAAS,EAAC;AAAf,SAAuCA,YAAvC,CADF,CAnBJ,CADF;AA0BD;;;;EA7C+BI,gB,GAgDlC;;;gBAhDMV,mB,eACe;AACjBE,EAAAA,UAAU,EAAES,mBAAUC,MADL;AAEjBN,EAAAA,YAAY,EAAEK,mBAAUE,OAFP;AAGjBN,EAAAA,UAAU,EAAEI,mBAAUG,MAHL;AAIjBT,EAAAA,cAAc,EAAEM,mBAAUI,IAJT;AAKjBX,EAAAA,eAAe,EAAEO,mBAAUK,IALV;AAMjBR,EAAAA,KAAK,EAAEG,mBAAUE;AANA,C;;AAiDrB,IAAMI,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,QAAR,EAAqB;AAC3C,SAAO,EAAP;AACD,CAFD;;AAIA,IAAMC,kBAAkB,GAAG;AACzBhB,EAAAA,eAAe,EAAfA;AADyB,CAA3B;;eAIe,yBAAQa,eAAR,EAAyBG,kBAAzB,EAA6CpB,mBAA7C,C","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Navbar } from 'react-bootstrap'\nimport FontAwesome from 'react-fontawesome'\n\nimport AppMenu from '../app/app-menu'\nimport { setMobileScreen } from '../../actions/ui'\n\nclass MobileNavigationBar extends Component {\n  static propTypes = {\n    backScreen: PropTypes.number,\n    headerAction: PropTypes.element,\n    headerText: PropTypes.string,\n    showBackButton: PropTypes.bool,\n    setMobileScreen: PropTypes.func,\n    title: PropTypes.element\n  }\n\n  _backButtonPressed = () => {\n    const { backScreen, onBackClicked } = this.props\n    if (backScreen) this.props.setMobileScreen(this.props.backScreen)\n    else if (typeof onBackClicked === 'function') onBackClicked()\n  }\n\n  render () {\n    const { showBackButton, headerAction, headerText, title } = this.props\n\n    return (\n      <Navbar fluid fixedTop>\n\n        <Navbar.Header>\n          <Navbar.Brand>\n            {showBackButton\n              ? <div className='mobile-back'><FontAwesome name='arrow-left' onClick={this._backButtonPressed} /></div>\n              : <AppMenu />\n            }\n          </Navbar.Brand>\n        </Navbar.Header>\n\n        <div className='mobile-header'>\n          {headerText\n            ? <div className='mobile-header-text'>{headerText}</div>\n            : <div>{title}</div>\n          }\n        </div>\n\n        {headerAction && (\n          <div className='mobile-close'>\n            <div className='mobile-header-action'>{headerAction}</div>\n          </div>\n        )}\n      </Navbar>\n    )\n  }\n}\n\n// connect to the redux store\n\nconst mapStateToProps = (state, ownProps) => {\n  return { }\n}\n\nconst mapDispatchToProps = {\n  setMobileScreen\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MobileNavigationBar)\n"]}