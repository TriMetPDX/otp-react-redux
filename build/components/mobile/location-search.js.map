{"version":3,"sources":["location-search.js"],"names":["MobileLocationSearch","props","setMobileScreen","MobileScreens","SEARCH_FORM","backScreen","location","locationType","otherLocation","suppressNearby","category","name","_locationSelected","Component","PropTypes","number","string","mapStateToProps","state","ownProps","otp","currentQuery","type","to","from","mapDispatchToProps"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;IAEMA,oB;;;;;;;;;;;;;;;;;;wEAMgB,YAAM;AACxB,YAAKC,KAAL,CAAWC,eAAX,CAA2BC,kBAAcC,WAAzC;AACD,K;;;;;;;6BAES;AAAA,wBAMJ,KAAKH,KAND;AAAA,UAENI,UAFM,eAENA,UAFM;AAAA,UAGNC,QAHM,eAGNA,QAHM;AAAA,UAINC,YAJM,eAINA,YAJM;AAAA,UAKNC,aALM,eAKNA,aALM;AAOR,UAAMC,cAAc,GAAGD,aAAa,IAClCA,aAAa,CAACE,QAAd,KAA2B,kBAD7B;AAEA,aACE,6BAAC,kBAAD,QACE,6BAAC,sBAAD;AACE,QAAA,UAAU,gBAASH,YAAY,KAAK,IAAjB,GAAwB,aAAxB,GAAwC,QAAjD,CADZ;AAEE,QAAA,cAAc,MAFhB;AAGE,QAAA,UAAU,EAAEF;AAHd,QADF,EAME;AAAK,QAAA,SAAS,EAAC;AAAf,SACE,6BAAC,sBAAD;AACE,QAAA,IAAI,EAAEE,YADR;AAEE,QAAA,iBAAiB,MAFnB;AAGE,QAAA,cAAc,EAAEE,cAHlB;AAIE,QAAA,KAAK,EAAEH,QAAQ,GAAGA,QAAQ,CAACK,IAAZ,GAAmB,gBAJpC;AAKE,QAAA,MAAM,MALR;AAME,QAAA,kBAAkB,EAAE,KAAKC;AAN3B,QADF,CANF,CADF;AAmBD;;;;EAtCgCC,gB,GAyCnC;;;gBAzCMb,oB,eACe;AACjBK,EAAAA,UAAU,EAAES,mBAAUC,MADL;AAEjBR,EAAAA,YAAY,EAAEO,mBAAUE;AAFP,C;;AA0CrB,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,QAAR,EAAqB;AAC3C,SAAO;AACLb,IAAAA,QAAQ,EAAEY,KAAK,CAACE,GAAN,CAAUC,YAAV,CAAuBF,QAAQ,CAACZ,YAAhC,CADL;AAELC,IAAAA,aAAa,EAAEW,QAAQ,CAACG,IAAT,KAAkB,MAAlB,GACXJ,KAAK,CAACE,GAAN,CAAUC,YAAV,CAAuBE,EADZ,GAEXL,KAAK,CAACE,GAAN,CAAUC,YAAV,CAAuBG;AAJtB,GAAP;AAMD,CAPD;;AASA,IAAMC,kBAAkB,GAAG;AACzBvB,EAAAA,eAAe,EAAfA;AADyB,CAA3B;;eAIe,yBAAQe,eAAR,EAAyBQ,kBAAzB,EAA6CzB,oBAA7C,C","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\n\nimport MobileContainer from './container'\nimport MobileNavigationBar from './navigation-bar'\nimport LocationField from '../form/location-field'\n\nimport { MobileScreens, setMobileScreen } from '../../actions/ui'\n\nclass MobileLocationSearch extends Component {\n  static propTypes = {\n    backScreen: PropTypes.number,\n    locationType: PropTypes.string\n  }\n\n  _locationSelected = () => {\n    this.props.setMobileScreen(MobileScreens.SEARCH_FORM)\n  }\n\n  render () {\n    const {\n      backScreen,\n      location,\n      locationType,\n      otherLocation\n    } = this.props\n    const suppressNearby = otherLocation &&\n      otherLocation.category === 'CURRENT_LOCATION'\n    return (\n      <MobileContainer>\n        <MobileNavigationBar\n          headerText={`Set ${locationType === 'to' ? 'Destination' : 'Origin'}`}\n          showBackButton\n          backScreen={backScreen}\n        />\n        <div className='location-search mobile-padding'>\n          <LocationField\n            type={locationType}\n            hideExistingValue\n            suppressNearby={suppressNearby}\n            label={location ? location.name : 'Enter location'}\n            static\n            onLocationSelected={this._locationSelected}\n          />\n        </div>\n      </MobileContainer>\n    )\n  }\n}\n\n// connect to the redux store\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    location: state.otp.currentQuery[ownProps.locationType],\n    otherLocation: ownProps.type === 'from'\n      ? state.otp.currentQuery.to\n      : state.otp.currentQuery.from\n  }\n}\n\nconst mapDispatchToProps = {\n  setMobileScreen\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MobileLocationSearch)\n"]}