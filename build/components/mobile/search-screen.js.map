{"version":3,"sources":["search-screen.js"],"names":["MobileSearchScreen","props","setMobileScreen","MobileScreens","SET_FROM_LOCATION","SET_TO_LOCATION","SET_DATETIME","SET_OPTIONS","RESULTS_SUMMARY","icons","_fromFieldClicked","_toFieldClicked","marginBottom","borderRight","_expandDateTimeClicked","_expandOptionsClicked","_planTripClicked","Component","PropTypes","object","map","element","func","mapStateToProps","state","ownProps","mapDispatchToProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAEMA,kB;;;;;;;;;;;;;;;;;;wEAQgB,YAAM;AACxB,YAAKC,KAAL,CAAWC,eAAX,CAA2BC,kBAAcC,iBAAzC;AACD,K;;sEAEiB,YAAM;AACtB,YAAKH,KAAL,CAAWC,eAAX,CAA2BC,kBAAcE,eAAzC;AACD,K;;6EAEwB,YAAM;AAC7B,YAAKJ,KAAL,CAAWC,eAAX,CAA2BC,kBAAcG,YAAzC;AACD,K;;4EAEuB,YAAM;AAC5B,YAAKL,KAAL,CAAWC,eAAX,CAA2BC,kBAAcI,WAAzC;AACD,K;;uEAEkB,YAAM;AACvB,YAAKN,KAAL,CAAWC,eAAX,CAA2BC,kBAAcK,eAAzC;AACD,K;;;;;;;6BAES;AAAA,UACAC,KADA,GACU,KAAKR,KADf,CACAQ,KADA;AAGR,aACE,6BAAC,kBAAD,QACE,6BAAC,sBAAD;AAAqB,QAAA,UAAU,EAAC;AAAhC,QADF,EAEE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE,6BAAC,sBAAD;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,OAAO,EAAE,KAAKC,iBAFhB;AAGE,QAAA,eAAe,EAAE;AAHnB,QADF,EAME,6BAAC,sBAAD;AACE,QAAA,IAAI,EAAC,IADP;AAEE,QAAA,OAAO,EAAE,KAAKC,eAFhB;AAGE,QAAA,eAAe,EAAE;AAHnB,QANF,EAYE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE,6BAAC,qBAAD;AAAc,QAAA,OAAO,EAAE;AAAG,UAAA,SAAS,EAAC;AAAb;AAAvB,QADF,CAZF,EAgBE,6BAAC,mBAAD;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,YAAY,EAAE;AAAhB;AAAZ,SACE,6BAAC,mBAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAY,QAAA,KAAK,EAAE;AAAEC,UAAAA,WAAW,EAAE;AAAf;AAAnB,SACE,6BAAC,wBAAD;AACE,QAAA,OAAO,EAAE,KAAKC,sBADhB;AAEE,QAAA,UAAU;AAFZ,QADF,CADF,EAOE,6BAAC,mBAAD;AAAK,QAAA,EAAE,EAAE;AAAT,SACE,6BAAC,wBAAD;AACE,QAAA,OAAO,EAAE,KAAKC,qBADhB;AAEE,QAAA,KAAK,EAAEN,KAFT;AAGE,QAAA,UAAU;AAHZ,QADF,CAPF,CAhBF,EAgCE,6BAAC,uBAAD;AAAgB,QAAA,OAAO,EAAE,KAAKO;AAA9B,QAhCF,CAFF,EAoCE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE,6BAAC,mBAAD,OADF,CApCF,CADF;AA0CD;;;;EAzE8BC,gB,GA4EjC;;;gBA5EMjB,kB,eACe;AACjBS,EAAAA,KAAK,EAAES,mBAAUC,MADA;AAEjBC,EAAAA,GAAG,EAAEF,mBAAUG,OAFE;AAIjBnB,EAAAA,eAAe,EAAEgB,mBAAUI;AAJV,C;;AA6ErB,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,QAAR,EAAqB;AAC3C,SAAO,EAAP;AACD,CAFD;;AAIA,IAAMC,kBAAkB,GAAG;AACzBxB,EAAAA,eAAe,EAAfA;AADyB,CAA3B;;eAIe,yBAAQqB,eAAR,EAAyBG,kBAAzB,EAA6C1B,kBAA7C,C","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { Row, Col } from 'react-bootstrap'\n\nimport DateTimePreview from '../form/date-time-preview'\nimport DefaultMap from '../map/default-map'\nimport LocationField from '../form/location-field'\nimport PlanTripButton from '../form/plan-trip-button'\nimport SettingsPreview from '../form/settings-preview'\nimport SwitchButton from '../form/switch-button'\n\nimport MobileContainer from './container'\nimport MobileNavigationBar from './navigation-bar'\n\nimport { MobileScreens, setMobileScreen } from '../../actions/ui'\n\nclass MobileSearchScreen extends Component {\n  static propTypes = {\n    icons: PropTypes.object,\n    map: PropTypes.element,\n\n    setMobileScreen: PropTypes.func\n  }\n\n  _fromFieldClicked = () => {\n    this.props.setMobileScreen(MobileScreens.SET_FROM_LOCATION)\n  }\n\n  _toFieldClicked = () => {\n    this.props.setMobileScreen(MobileScreens.SET_TO_LOCATION)\n  }\n\n  _expandDateTimeClicked = () => {\n    this.props.setMobileScreen(MobileScreens.SET_DATETIME)\n  }\n\n  _expandOptionsClicked = () => {\n    this.props.setMobileScreen(MobileScreens.SET_OPTIONS)\n  }\n\n  _planTripClicked = () => {\n    this.props.setMobileScreen(MobileScreens.RESULTS_SUMMARY)\n  }\n\n  render () {\n    const { icons } = this.props\n\n    return (\n      <MobileContainer>\n        <MobileNavigationBar headerText='Plan Your Trip' />\n        <div className='search-settings mobile-padding'>\n          <LocationField\n            type='from'\n            onClick={this._fromFieldClicked}\n            showClearButton={false}\n          />\n          <LocationField\n            type='to'\n            onClick={this._toFieldClicked}\n            showClearButton={false}\n          />\n\n          <div className='switch-button-container-mobile'>\n            <SwitchButton content={<i className='fa fa-exchange fa-rotate-90' />} />\n          </div>\n\n          <Row style={{ marginBottom: 12 }}>\n            <Col xs={6} style={{ borderRight: '2px solid #ccc' }}>\n              <DateTimePreview\n                onClick={this._expandDateTimeClicked}\n                compressed\n              />\n            </Col>\n            <Col xs={6}>\n              <SettingsPreview\n                onClick={this._expandOptionsClicked}\n                icons={icons}\n                compressed\n              />\n            </Col>\n          </Row>\n\n          <PlanTripButton onClick={this._planTripClicked} />\n        </div>\n        <div className='search-map'>\n          <DefaultMap />\n        </div>\n      </MobileContainer>\n    )\n  }\n}\n\n// connect to the redux store\n\nconst mapStateToProps = (state, ownProps) => {\n  return { }\n}\n\nconst mapDispatchToProps = {\n  setMobileScreen\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MobileSearchScreen)\n"]}