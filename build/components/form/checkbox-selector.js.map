{"version":3,"sources":["checkbox-selector.js"],"names":["CheckboxSelector","evt","props","setQueryParam","name","target","checked","label","value","margin","_onQueryParamChange","Component","PropTypes","string","oneOfType","bool","func","mapStateToProps","state","ownProps","mapDispatchToProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAEMA,gB;;;;;;;;;;;;;;;;;;0EAWkB,UAACC,GAAD,EAAS;AAC7B,YAAKC,KAAL,CAAWC,aAAX,qBAA4B,MAAKD,KAAL,CAAWE,IAAvC,EAA8CH,GAAG,CAACI,MAAJ,CAAWC,OAAzD;AACD,K;;;;;;;6BAES;AAAA,UACAC,KADA,GACU,KAAKL,KADf,CACAK,KADA;AAER,UAAIC,KAAK,GAAG,KAAKN,KAAL,CAAWM,KAAvB;AACA,UAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+BA,KAAK,GAAIA,KAAK,KAAK,MAAnB;AAE/B,aACE,0CACE,6BAAC,mBAAD,QACE,6BAAC,mBAAD;AAAK,QAAA,EAAE,EAAE,EAAT;AAAa,QAAA,SAAS,EAAC;AAAvB,SACE,6BAAC,oBAAD,QACE,6BAAC,yBAAD,QACE,6BAAC,wBAAD;AAAU,QAAA,OAAO,EAAEA,KAAnB;AAA0B,QAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAAjC;AAAqD,QAAA,QAAQ,EAAE,KAAKC;AAApE,SAA0FH,KAA1F,CADF,CADF,CADF,CADF,CADF,CADF;AAaD;;;;EAjC4BI,gB;;gBAAzBX,gB,eACe;AACjBI,EAAAA,IAAI,EAAEQ,mBAAUC,MADC;AAEjBL,EAAAA,KAAK,EAAEI,mBAAUE,SAAV,CAAoB,CACzBF,mBAAUC,MADe,EAEzBD,mBAAUG,IAFe,CAApB,CAFU;AAMjBR,EAAAA,KAAK,EAAEK,mBAAUC,MANA;AAOjBV,EAAAA,aAAa,EAAES,mBAAUI;AAPR,C;;AAmCrB,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,QAAR,EAAqB;AAC3C,SAAO,EAAP;AACD,CAFD;;AAIA,IAAMC,kBAAkB,GAAG;AAAEjB,EAAAA,aAAa,EAAbA;AAAF,CAA3B;;eAEe,yBAAQc,eAAR,EAAyBG,kBAAzB,EAA6CpB,gBAA7C,C","sourcesContent":["import React, {Component} from 'react'\nimport PropTypes from 'prop-types'\nimport { Form, FormGroup, Row, Col, Checkbox } from 'react-bootstrap'\nimport { connect } from 'react-redux'\n\nimport { setQueryParam } from '../../actions/form'\n\nclass CheckboxSelector extends Component {\n  static propTypes = {\n    name: PropTypes.string,\n    value: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.bool\n    ]),\n    label: PropTypes.string,\n    setQueryParam: PropTypes.func\n  }\n\n  _onQueryParamChange = (evt) => {\n    this.props.setQueryParam({ [this.props.name]: evt.target.checked })\n  }\n\n  render () {\n    const { label } = this.props\n    let value = this.props.value\n    if (typeof value === 'string') value = (value === 'true')\n\n    return (\n      <div>\n        <Row>\n          <Col xs={12} className='setting-label'>\n            <Form>\n              <FormGroup>\n                <Checkbox checked={value} style={{ margin: 'none' }} onChange={this._onQueryParamChange}>{label}</Checkbox>\n              </FormGroup>\n            </Form>\n          </Col>\n        </Row>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return { }\n}\n\nconst mapDispatchToProps = { setQueryParam }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CheckboxSelector)\n"]}