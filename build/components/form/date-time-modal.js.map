{"version":3,"sources":["date-time-modal.js"],"names":["rtDefaults","key","text","component","DateTimeModal","props","config","routingType","setQueryParam","routingTypes","length","map","rtConfig","find","d","Component","PropTypes","string","func","mapStateToProps","state","ownProps","otp","currentQuery","departArrive","date","time","mapDispatchToProps"],"mappings":";;;;;;;;;;;;;AACA;;AACA;;AACA;;AAEA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;AACA,IAAMA,UAAU,GAAG,CACjB;AACEC,EAAAA,GAAG,EAAE,WADP;AAEEC,EAAAA,IAAI,EAAE,WAFR;AAGEC,EAAAA,SAAS,EAAE,6BAAC,yBAAD;AAHb,CADiB,EAKd;AACDF,EAAAA,GAAG,EAAE,SADJ;AAEDC,EAAAA,IAAI,EAAE,SAFL;AAGDC,EAAAA,SAAS,EAAE,6BAAC,yBAAD;AAAkB,IAAA,OAAO;AAAzB;AAHV,CALc,CAAnB;;IAYMC,a;;;;;;;;;;;;;6BAMM;AAAA,wBACuC,KAAKC,KAD5C;AAAA,UACAC,MADA,eACAA,MADA;AAAA,UACQC,WADR,eACQA,WADR;AAAA,UACqBC,aADrB,eACqBA,aADrB;AAGR,aACE;AAAK,QAAA,SAAS,EAAC;AAAf,SAEGF,MAAM,CAACG,YAAP,CAAoBC,MAApB,GAA6B,CAA7B,IACC;AAAK,QAAA,SAAS,EAAC;AAAf,SACE,6BAAC,2BAAD;AAAa,QAAA,SAAS;AAAtB,SACGJ,MAAM,CAACG,YAAP,CAAoBE,GAApB,CAAwB,UAAAC,QAAQ,EAAI;AACnC,eACE,6BAAC,2BAAD;AAAa,UAAA,GAAG,EAAEA,QAAQ,CAACX;AAA3B,WACE,6BAAC,sBAAD;AACE,UAAA,SAAS,EAAEW,QAAQ,CAACX,GAAT,KAAiBM,WAAjB,GAA+B,UAA/B,GAA4C,EADzD;AAEE,UAAA,OAAO,EAAE,mBAAM;AACbC,YAAAA,aAAa,CAAC;AAAED,cAAAA,WAAW,EAAEK,QAAQ,CAACX;AAAxB,aAAD,CAAb;AACD;AAJH,WAMGW,QAAQ,CAACV,IAAT,IAAiBF,UAAU,CAACa,IAAX,CAAgB,UAAAC,CAAC;AAAA,iBAAIA,CAAC,CAACb,GAAF,KAAUW,QAAQ,CAACX,GAAvB;AAAA,SAAjB,EAA6CC,IANjE,CADF,CADF;AAYD,OAbA,CADH,CADF,CAHJ,EAwBE;AAAK,QAAA,SAAS,EAAC;AAAf,SACGF,UAAU,CAACa,IAAX,CAAgB,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAACb,GAAF,KAAUM,WAAd;AAAA,OAAjB,EAA4CJ,SAD/C,CAxBF,CADF;AA8BD;;;;EAvCyBY,gB;;gBAAtBX,a,eACe;AACjBG,EAAAA,WAAW,EAAES,iBAAUC,MADN;AAEjBT,EAAAA,aAAa,EAAEQ,iBAAUE;AAFR,C;;AAyCrB,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,QAAR,EAAqB;AAAA,8BACKD,KAAK,CAACE,GAAN,CAAUC,YADf;AAAA,MACpCC,YADoC,yBACpCA,YADoC;AAAA,MACtBC,IADsB,yBACtBA,IADsB;AAAA,MAChBC,IADgB,yBAChBA,IADgB;AAAA,MACVnB,WADU,yBACVA,WADU;AAE3C,SAAO;AACLD,IAAAA,MAAM,EAAEc,KAAK,CAACE,GAAN,CAAUhB,MADb;AAELkB,IAAAA,YAAY,EAAZA,YAFK;AAGLC,IAAAA,IAAI,EAAJA,IAHK;AAILC,IAAAA,IAAI,EAAJA,IAJK;AAKLnB,IAAAA,WAAW,EAAXA;AALK,GAAP;AAOD,CATD;;AAWA,IAAMoB,kBAAkB,GAAG;AACzBnB,EAAAA,aAAa,EAAbA;AADyB,CAA3B;;eAIe,yBAAQW,eAAR,EAAyBQ,kBAAzB,EAA6CvB,aAA7C,C","sourcesContent":["// import necessary React/Redux libraries\nimport React, { Component, PropTypes } from 'react'\nimport { connect } from 'react-redux'\nimport { Button, ButtonGroup } from 'react-bootstrap'\n\nimport DateTimeSelector from './date-time-selector'\nimport { setQueryParam } from '../../actions/form'\n\n// Define default routingType labels and components\nconst rtDefaults = [\n  {\n    key: 'ITINERARY',\n    text: 'Itinerary',\n    component: <DateTimeSelector />\n  }, {\n    key: 'PROFILE',\n    text: 'Profile',\n    component: <DateTimeSelector profile />\n  }\n]\n\nclass DateTimeModal extends Component {\n  static propTypes = {\n    routingType: PropTypes.string,\n    setQueryParam: PropTypes.func\n  }\n\n  render () {\n    const { config, routingType, setQueryParam } = this.props\n\n    return (\n      <div className='date-time-modal'>\n        {/* The routing-type selection button row. Only show if more than one configured */}\n        {config.routingTypes.length > 1 && (\n          <div className='button-row'>\n            <ButtonGroup justified>\n              {config.routingTypes.map(rtConfig => {\n                return (\n                  <ButtonGroup key={rtConfig.key}>\n                    <Button\n                      className={rtConfig.key === routingType ? 'selected' : ''}\n                      onClick={() => {\n                        setQueryParam({ routingType: rtConfig.key })\n                      }}\n                    >\n                      {rtConfig.text || rtDefaults.find(d => d.key === rtConfig.key).text}\n                    </Button>\n                  </ButtonGroup>\n                )\n              })}\n            </ButtonGroup>\n          </div>\n        )}\n\n        {/* The main panel for the selected routing type */}\n        <div className='main-panel'>\n          {rtDefaults.find(d => d.key === routingType).component}\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const {departArrive, date, time, routingType} = state.otp.currentQuery\n  return {\n    config: state.otp.config,\n    departArrive,\n    date,\n    time,\n    routingType\n  }\n}\n\nconst mapDispatchToProps = {\n  setQueryParam\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DateTimeModal)\n"]}