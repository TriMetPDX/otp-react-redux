{"version":3,"sources":["mode-selector.js"],"names":["ModeSelector","evt","props","setQueryParam","mode","target","value","config","label","showLabel","_onChange","modes","map","m","i","_getDisplayText","Component","PropTypes","object","string","func","bool","mapStateToProps","state","ownProps","otp","currentQuery","mapDispatchToProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAEMA,Y;;;;;;;;;;;;;;;;;;gEAcQ,UAACC,GAAD;AAAA,aAAS,MAAKC,KAAL,CAAWC,aAAX,CAAyB;AAAEC,QAAAA,IAAI,EAAEH,GAAG,CAACI,MAAJ,CAAWC;AAAnB,OAAzB,CAAT;AAAA,K;;;;;;;oCAEKF,I,EAAM;AACrB,cAAQA,IAAR;AACE,aAAK,cAAL;AAAqB,iBAAO,iBAAP;;AACrB,aAAK,iBAAL;AAAwB,iBAAO,iBAAP;;AACxB,aAAK,MAAL;AAAa,iBAAO,WAAP;;AACb,aAAK,SAAL;AAAgB,iBAAO,WAAP;AAJlB;;AAMA,aAAOA,IAAP;AACD;;;6BAES;AAAA;;AAAA,wBACmC,KAAKF,KADxC;AAAA,UACAK,MADA,eACAA,MADA;AAAA,UACQH,IADR,eACQA,IADR;AAAA,UACcI,KADd,eACcA,KADd;AAAA,UACqBC,SADrB,eACqBA,SADrB;AAGR,aACE,2CACE,6BAAC,yBAAD;AAAW,QAAA,SAAS,EAAC;AAArB,SACGA,SAAS,GACN,6BAAC,4BAAD,QAAeD,KAAf,CADM,GAEN,IAHN,EAKE,6BAAC,2BAAD;AACE,QAAA,cAAc,EAAC,QADjB;AAEE,QAAA,KAAK,EAAEJ,IAFT;AAGE,QAAA,QAAQ,EAAE,KAAKM;AAHjB,SAKGH,MAAM,CAACI,KAAP,CAAaC,GAAb,CAAiB,UAACC,CAAD,EAAIC,CAAJ;AAAA,eAChB;AAAQ,UAAA,GAAG,EAAEA,CAAb;AAAgB,UAAA,KAAK,EAAED;AAAvB,WAA2B,MAAI,CAACE,eAAL,CAAqBF,CAArB,CAA3B,CADgB;AAAA,OAAjB,CALH,CALF,CADF,CADF;AAmBD;;;;EAhDwBG,gB;;gBAArBhB,Y,eACe;AACjBO,EAAAA,MAAM,EAAEU,mBAAUC,MADD;AAEjBV,EAAAA,KAAK,EAAES,mBAAUE,MAFA;AAGjBf,EAAAA,IAAI,EAAEa,mBAAUE,MAHC;AAIjBhB,EAAAA,aAAa,EAAEc,mBAAUG,IAJR;AAKjBX,EAAAA,SAAS,EAAEQ,mBAAUI;AALJ,C;;gBADfrB,Y,kBASkB;AACpBQ,EAAAA,KAAK,EAAE,MADa;AAEpBC,EAAAA,SAAS,EAAE;AAFS,C;;AA0CxB,IAAMa,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,QAAR,EAAqB;AAC3C,SAAO;AACLjB,IAAAA,MAAM,EAAEgB,KAAK,CAACE,GAAN,CAAUlB,MADb;AAELH,IAAAA,IAAI,EAAEmB,KAAK,CAACE,GAAN,CAAUC,YAAV,CAAuBtB;AAFxB,GAAP;AAID,CALD;;AAOA,IAAMuB,kBAAkB,GAAG;AACzBxB,EAAAA,aAAa,EAAbA;AADyB,CAA3B;;eAIe,yBAAQmB,eAAR,EAAyBK,kBAAzB,EAA6C3B,YAA7C,C","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { FormGroup, ControlLabel, FormControl } from 'react-bootstrap'\nimport { connect } from 'react-redux'\n\nimport { setQueryParam } from '../../actions/form'\n\nclass ModeSelector extends Component {\n  static propTypes = {\n    config: PropTypes.object,\n    label: PropTypes.string,\n    mode: PropTypes.string,\n    setQueryParam: PropTypes.func,\n    showLabel: PropTypes.bool\n  }\n\n  static defaultProps = {\n    label: 'Mode',\n    showLabel: true\n  }\n\n  _onChange = (evt) => this.props.setQueryParam({ mode: evt.target.value })\n\n  _getDisplayText (mode) {\n    switch (mode) {\n      case 'TRANSIT,WALK': return 'Walk to Transit'\n      case 'TRANSIT,BICYCLE': return 'Bike to Transit'\n      case 'WALK': return 'Walk Only'\n      case 'BICYCLE': return 'Bike Only'\n    }\n    return mode\n  }\n\n  render () {\n    const { config, mode, label, showLabel } = this.props\n\n    return (\n      <form>\n        <FormGroup className='mode-selector'>\n          {showLabel\n            ? <ControlLabel>{label}</ControlLabel>\n            : null\n          }\n          <FormControl\n            componentClass='select'\n            value={mode}\n            onChange={this._onChange}\n          >\n            {config.modes.map((m, i) => (\n              <option key={i} value={m}>{this._getDisplayText(m)}</option>\n            ))}\n          </FormControl>\n        </FormGroup>\n      </form>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    config: state.otp.config,\n    mode: state.otp.currentQuery.mode\n  }\n}\n\nconst mapDispatchToProps = {\n  setQueryParam\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ModeSelector)\n"]}