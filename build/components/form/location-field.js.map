{"version":3,"sources":["location-field.js"],"names":["LocationField","props","text","console","warn","config","geocoder","autocomplete","then","result","setState","geocodedFeatures","features","catch","err","error","type","clearLocation","value","ReactDOM","findDOMNode","formControl","focus","_onTextInputClick","v","e","targetIsInput","target","className","indexOf","_getFormControlClassname","menuVisible","state","relatedTarget","document","activeElement","location","getAttribute","evt","_geocodeAutocomplete","currentPosition","nearbyStops","onClick","length","coords","findNearbyStops","lat","latitude","lon","longitude","max","maxNearbyStops","activeIndex","key","preventDefault","menuItemCount","locationSelected","locationSelectedLookup","_geocodeSearch","getCurrentPosition","onLocationSelected","setLocationToCurrent","fetchingLocation","window","alert","host","message","hideExistingValue","name","prevProps","search","setLocation","label","user","showClearButton","showUserSettings","isStatic","static","suppressNearby","locations","recentPlaces","slice","sessionSearches","menuItems","itemIndex","concat","map","feature","i","getLocationFromGeocodedFeature","_setLocation","addLocationSearch","option","createOption","properties","push","stopId","stop","stopsIndex","createTransitStopOption","icon","optionIcon","optionTitle","_useCurrentLocation","_geolocationAlert","currentLocationOption","placeholder","fetching","textControl","ctl","_onTextInputChange","_onKeyDown","clearButton","_onClearButtonClick","width","_onBlurFormGroup","InputGroup","Button","_onDropdownToggle","Component","PropTypes","object","bool","string","array","func","itemKey","title","onSelect","isActive","isLast","paddingTop","paddingBottom","float","marginLeft","overflow","textOverflow","whiteSpace","fontSize","dist","code","routes","route","shortName","longName","clear","mapStateToProps","ownProps","activeSearch","otp","query","currentQuery","transitIndex","stops","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport ReactDOM from 'react-dom'\nimport {\n  Button,\n  FormGroup,\n  FormControl,\n  InputGroup,\n  DropdownButton,\n  MenuItem\n} from 'react-bootstrap'\nimport { connect } from 'react-redux'\nimport { throttle } from 'throttle-debounce'\n\nimport LocationIcon from '../icons/location-icon'\nimport { setLocation, setLocationToCurrent, clearLocation } from '../../actions/map'\nimport { addLocationSearch, getCurrentPosition } from '../../actions/location'\nimport { findNearbyStops } from '../../actions/api'\nimport { distanceStringImperial } from '../../util/distance'\nimport getGeocoder from '../../util/geocoder'\nimport { formatStoredPlaceName } from '../../util/map'\nimport { getActiveSearch, getShowUserSettings } from '../../util/state'\nimport { isIE } from '../../util/ui'\n\nclass LocationField extends Component {\n  static propTypes = {\n    config: PropTypes.object,\n    currentPosition: PropTypes.object,\n    hideExistingValue: PropTypes.bool,\n    location: PropTypes.object,\n    label: PropTypes.string,\n    nearbyStops: PropTypes.array,\n    sessionSearches: PropTypes.array,\n    showClearButton: PropTypes.bool,\n    static: PropTypes.bool, // show autocomplete options as fixed/inline element rather than dropdown\n    stopsIndex: PropTypes.object,\n    type: PropTypes.string, // replace with locationType?\n\n    // callbacks\n    onClick: PropTypes.func,\n    onLocationSelected: PropTypes.func,\n\n    // dispatch\n    addLocationSearch: PropTypes.func,\n    clearLocation: PropTypes.func,\n    setLocation: PropTypes.func,\n    setLocationToCurrent: PropTypes.func\n  }\n\n  static defaultProps = {\n    showClearButton: true\n  }\n\n  constructor (props) {\n    super(props)\n    this.state = {\n      value: props.location && !props.hideExistingValue\n        ? props.location.name\n        : '',\n      menuVisible: false,\n      geocodedFeatures: [],\n      activeIndex: null\n    }\n  }\n\n  componentDidUpdate (prevProps) {\n    // If location is updated externally, replace value and geocoded features\n    // in internal state.\n    // TODO: This might be considered an anti-pattern. There may be a more\n    // effective way to handle this.\n    const { location } = this.props\n    if (location !== prevProps.location) {\n      this.setState({\n        value: location !== null ? location.name : '',\n        geocodedFeatures: []\n      })\n    }\n  }\n\n  _geocodeAutocomplete = throttle(1000, (text) => {\n    if (!text) {\n      console.warn('No text entry provided for geocode autocomplete search.')\n      return\n    }\n    getGeocoder(this.props.config.geocoder)\n      .autocomplete({ text })\n      .then((result) => {\n        this.setState({ geocodedFeatures: result.features })\n      }).catch((err) => {\n        console.error(err)\n      })\n  })\n\n  _geocodeSearch (text) {\n    if (!text) {\n      console.warn('No text entry provided for geocode search.')\n      return\n    }\n    getGeocoder(this.props.config.geocoder)\n      .search({ text })\n      .then((result) => {\n        if (result.features && result.features.length > 0) {\n          // Only replace geocode items if results were found\n          this.setState({ geocodedFeatures: result.features })\n        } else {\n          console.warn('No results found for geocode search. Not replacing results.')\n        }\n      }).catch((err) => {\n        console.error(err)\n      })\n  }\n\n  _getFormControlClassname () {\n    return this.props.type + '-form-control'\n  }\n\n  _onClearButtonClick = () => {\n    const { type } = this.props\n    this.props.clearLocation({ type })\n    this.setState({\n      value: '',\n      geocodedFeatures: []\n    })\n    ReactDOM.findDOMNode(this.formControl).focus()\n    this._onTextInputClick()\n  }\n\n  _onDropdownToggle = (v, e) => {\n    // if clicked on input form control, keep dropdown open; otherwise, toggle\n    const targetIsInput =\n      e.target.className.indexOf(this._getFormControlClassname()) !== -1\n    const menuVisible = targetIsInput ? true : !this.state.menuVisible\n    this.setState({ menuVisible })\n  }\n  /**\n   * Only hide menu if the target clicked is not a menu item in the dropdown.\n   * Otherwise, the click will not \"finish\" and the menu will hide without the\n   * user having made a selection.\n   */\n  _onBlurFormGroup = (e) => {\n    // IE does not use relatedTarget, so this check handles cross-browser support.\n    // see https://stackoverflow.com/a/49325196/915811\n    const target = e.relatedTarget !== null ? e.relatedTarget : document.activeElement\n    if (!this.props.location && (!target || target.getAttribute('role') !== 'menuitem')) {\n      this.setState({ menuVisible: false, value: '', geocodedFeatures: [] })\n    }\n  }\n\n  _onTextInputChange = (evt) => {\n    this.setState({ value: evt.target.value, menuVisible: true })\n    this._geocodeAutocomplete(evt.target.value)\n  }\n\n  _onTextInputClick = () => {\n    const { config, currentPosition, nearbyStops, onClick } = this.props\n    if (typeof onClick === 'function') onClick()\n    this.setState({ menuVisible: true })\n    if (nearbyStops.length === 0 && currentPosition && currentPosition.coords) {\n      this.props.findNearbyStops({\n        lat: currentPosition.coords.latitude,\n        lon: currentPosition.coords.longitude,\n        max: config.geocoder.maxNearbyStops || 4\n      })\n    }\n  }\n\n  _onKeyDown = (evt) => {\n    const { activeIndex, menuVisible } = this.state\n    switch (evt.key) {\n      // 'Down' arrow key pressed: move selected menu item down by one position\n      case 'ArrowDown':\n        // Suppress default 'ArrowDown' behavior which moves cursor to end\n        evt.preventDefault()\n        if (!menuVisible) {\n          // If the menu is not visible, simulate a text input click to show it.\n          return this._onTextInputClick()\n        }\n        if (activeIndex === this.menuItemCount - 1) {\n          return this.setState({ activeIndex: null })\n        }\n        return this.setState({\n          activeIndex: activeIndex === null\n            ? 0\n            : activeIndex + 1\n        })\n\n      // 'Up' arrow key pressed: move selection up by one position\n      case 'ArrowUp':\n        // Suppress default 'ArrowUp' behavior which moves cursor to beginning\n        evt.preventDefault()\n        if (activeIndex === 0) {\n          return this.setState({ activeIndex: null })\n        }\n        return this.setState({\n          activeIndex: activeIndex === null\n            ? this.menuItemCount - 1\n            : activeIndex - 1\n        })\n\n      // 'Enter' keypress serves two purposes:\n      //  - If pressed when typing in search string, switch from 'autocomplete'\n      //    to 'search' geocoding\n      //  - If pressed when dropdown results menu is active, apply the location\n      //    associated with current selected menu item\n      case 'Enter':\n        if (typeof activeIndex === 'number') { // Menu is active\n          // Retrieve location selection handler from lookup object and invoke\n          const locationSelected = this.locationSelectedLookup[activeIndex]\n          if (locationSelected) locationSelected()\n\n          // Clear selection & hide the menu\n          this.setState({\n            menuVisible: false,\n            activeIndex: null\n          })\n        } else { // Menu not active; get geocode 'search' results\n          this._geocodeSearch(evt.target.value)\n          // Ensure menu is visible.\n          this.setState({ menuVisible: true })\n        }\n\n        // Suppress default 'Enter' behavior which causes page to reload\n        evt.preventDefault()\n        break\n      case 'Escape':\n        // Clear selection & hide the menu\n        return this.setState({\n          menuVisible: false,\n          activeIndex: null\n        })\n      // Any other key pressed: clear active selection\n      default:\n        return this.setState({ activeIndex: null })\n    }\n  }\n\n  _setLocation (location) {\n    const { onLocationSelected, setLocation, type } = this.props\n    onLocationSelected && onLocationSelected()\n    setLocation({ type, location })\n  }\n\n  _useCurrentLocation = () => {\n    const {\n      currentPosition,\n      getCurrentPosition,\n      onLocationSelected,\n      setLocationToCurrent,\n      type\n    } = this.props\n    if (currentPosition.coords) {\n      // We already have geolocation coordinates\n      setLocationToCurrent({ type })\n      onLocationSelected && onLocationSelected()\n    } else {\n      // Call geolocation.getCurrentPosition and set as from/to type\n      this.setState({ fetchingLocation: true })\n      getCurrentPosition(type, onLocationSelected)\n    }\n  }\n\n  /**\n   * Provide alert to user with reason for geolocation error\n   */\n  _geolocationAlert = () => {\n    window.alert(\n      `Geolocation either has been disabled for ${window.location.host} or is not available in your browser.\\n\\nReason: ${this.props.currentPosition.error.message || 'Unknown reason'}`\n    )\n  }\n\n  render () {\n    const {\n      currentPosition,\n      label,\n      location,\n      user,\n      showClearButton,\n      showUserSettings,\n      static: isStatic,\n      suppressNearby,\n      type,\n      nearbyStops\n    } = this.props\n    const locations = [...user.locations, ...user.recentPlaces]\n    const { activeIndex } = this.state\n    let geocodedFeatures = this.state.geocodedFeatures\n    if (geocodedFeatures.length > 5) geocodedFeatures = geocodedFeatures.slice(0, 5)\n\n    let sessionSearches = this.props.sessionSearches\n    if (sessionSearches.length > 5) sessionSearches = sessionSearches.slice(0, 5)\n\n    // Assemble menu contents, to be displayed either as dropdown or static panel.\n    // Menu items are created in four phases: (1) the current location, (2) any\n    // geocoder search results; (3) nearby transit stops; and (4) saved searches\n\n    let menuItems = [] // array of menu items for display (may include non-selectable items e.g. dividers/headings)\n    let itemIndex = 0 // the index of the current location-associated menu item (excluding non-selectable items)\n    this.locationSelectedLookup = {} // maps itemIndex to a location selection handler (for use by the _onKeyDown method)\n\n    /* 1) Process geocode search result option(s) */\n    if (geocodedFeatures.length > 0) {\n      // Add the menu sub-heading (not a selectable item)\n      // menuItems.push(<MenuItem header key='sr-header'>Search Results</MenuItem>)\n\n      // Iterate through the geocoder results\n      menuItems = menuItems.concat(geocodedFeatures.map((feature, i) => {\n        // Create the selection handler\n        const locationSelected = () => {\n          getGeocoder(this.props.config.geocoder)\n            .getLocationFromGeocodedFeature(feature)\n            .then(location => {\n              // Set the current location\n              this._setLocation(location)\n              // Add to the location search history\n              this.props.addLocationSearch({ location })\n            })\n        }\n\n        // Add to the selection handler lookup (for use in _onKeyDown)\n        this.locationSelectedLookup[itemIndex] = locationSelected\n\n        // Create and return the option menu item\n        const option = createOption('map-pin', feature.properties.label, locationSelected, itemIndex === activeIndex, i === geocodedFeatures.length - 1)\n        itemIndex++\n        return option\n      }))\n    }\n\n    /* 2) Process nearby transit stop options */\n    if (nearbyStops.length > 0 && !suppressNearby) {\n      // Add the menu sub-heading (not a selectable item)\n      menuItems.push(<MenuItem header key='ns-header'>Nearby Stops</MenuItem>)\n\n      // Iterate through the found nearby stops\n      menuItems = menuItems.concat(nearbyStops.map((stopId, i) => {\n        // Constuct the location\n        const stop = this.props.stopsIndex[stopId]\n        const location = {\n          name: stop.name,\n          lat: stop.lat,\n          lon: stop.lon\n        }\n\n        // Create the location selected handler\n        const locationSelected = () => { this._setLocation(location) }\n\n        // Add to the selection handler lookup (for use in _onKeyDown)\n        this.locationSelectedLookup[itemIndex] = locationSelected\n\n        // Create and return the option menu item\n        const option = createTransitStopOption(stop, locationSelected, itemIndex === activeIndex, i === nearbyStops.length - 1)\n        itemIndex++\n        return option\n      }))\n    }\n\n    /* 3) Process recent search history options */\n    if (sessionSearches.length > 0) {\n      // Add the menu sub-heading (not a selectable item)\n      menuItems.push(<MenuItem header key='ss-header'>Recently Searched</MenuItem>)\n\n      // Iterate through any saved locations\n      menuItems = menuItems.concat(sessionSearches.map((location, i) => {\n        // Create the location-selected handler\n        const locationSelected = () => { this._setLocation(location) }\n\n        // Add to the selection handler lookup (for use in _onKeyDown)\n        this.locationSelectedLookup[itemIndex] = locationSelected\n\n        // Create and return the option menu item\n        const option = createOption('search', location.name, locationSelected, itemIndex === activeIndex, i === sessionSearches.length - 1)\n        itemIndex++\n        return option\n      }))\n    }\n\n    /* 3b) Process stored user locations */\n    if (locations.length > 0 && showUserSettings) {\n      // Add the menu sub-heading (not a selectable item)\n      menuItems.push(<MenuItem header key='mp-header'>My Places</MenuItem>)\n\n      // Iterate through any saved locations\n      menuItems = menuItems.concat(locations.map((location, i) => {\n        // Create the location-selected handler\n        const locationSelected = () => { this._setLocation(location) }\n\n        // Add to the selection handler lookup (for use in _onKeyDown)\n        this.locationSelectedLookup[itemIndex] = locationSelected\n\n        // Create and return the option menu item\n        const option = createOption(\n          location.icon,\n          formatStoredPlaceName(location),\n          locationSelected,\n          itemIndex === activeIndex,\n          i === locations.length - 1\n        )\n        itemIndex++\n        return option\n      }))\n    }\n\n    /* 4) Process the current location */\n    let locationSelected, optionIcon, optionTitle\n\n    if (!currentPosition.error) { // current position detected successfully\n      locationSelected = this._useCurrentLocation\n      optionIcon = 'location-arrow'\n      optionTitle = 'Use Current Location'\n    } else { // error detecting current position\n      locationSelected = this._geolocationAlert\n      optionIcon = 'ban'\n      optionTitle = 'Current location not available'\n    }\n\n    // Add to the selection handler lookup (for use in _onKeyDown)\n    this.locationSelectedLookup[itemIndex] = locationSelected\n\n    if (!suppressNearby) {\n      // Create and add the option item to the menu items array\n      const currentLocationOption = createOption(\n        optionIcon,\n        optionTitle,\n        locationSelected,\n        itemIndex === activeIndex\n      )\n      menuItems.push(currentLocationOption)\n      itemIndex++\n    }\n\n    // Store the number of location-associated items for reference in the _onKeyDown method\n    this.menuItemCount = itemIndex\n\n    /** the text input element **/\n    const placeholder = currentPosition.fetching === type\n      ? 'Fetching location...'\n      : label || type\n    const textControl = <FormControl\n      autoFocus={isStatic} // focuses the input when the component mounts if static\n      ref={ctl => { this.formControl = ctl }}\n      className={this._getFormControlClassname()}\n      type='text'\n      value={this.state.value}\n      placeholder={placeholder}\n      onChange={this._onTextInputChange}\n      onClick={this._onTextInputClick}\n      onKeyDown={this._onKeyDown}\n    />\n\n    // Only include the clear ('X') button add-on if a location is selected\n    // or if the input field has text.\n    const clearButton = showClearButton && location\n      ? <InputGroup.Addon>\n        <Button\n          bsStyle='link'\n          className='clear-button'\n          onClick={this._onClearButtonClick}>\n          <i className='fa fa-times' />\n        </Button>\n      </InputGroup.Addon>\n      : null\n    if (isStatic) {\n      // 'static' mode (menu is displayed alongside input, e.g., for mobile view)\n      return (\n        <div\n          className='location-field static'>\n          <form>\n            <FormGroup>\n              <InputGroup>\n                <InputGroup.Addon>\n                  <LocationIcon type={type} />\n                </InputGroup.Addon>\n                {textControl}\n                {clearButton}\n              </InputGroup>\n            </FormGroup>\n          </form>\n          <ul className='dropdown-menu' style={{ width: '100%' }}>\n            {menuItems.length > 0 // Show typing prompt to avoid empty screen\n              ? menuItems\n              : <MenuItem header className={'text-center'}>\n                Begin typing to search for locations\n              </MenuItem>\n            }\n          </ul>\n        </div>\n      )\n    } else {\n      // default display mode with dropdown menu\n      return (\n        <form>\n          <FormGroup\n            onBlur={this._onBlurFormGroup}\n            className='location-field'>\n            <InputGroup>\n              {/* location field icon -- also serves as dropdown anchor */}\n              <DropdownButton\n                componentClass={InputGroup.Button}\n                open={this.state.menuVisible}\n                onToggle={this._onDropdownToggle}\n                id='location-dropdown'\n                title={<LocationIcon type={type} />}\n                noCaret\n              >\n                {menuItems}\n              </DropdownButton>\n              {textControl}\n              {clearButton}\n            </InputGroup>\n          </FormGroup>\n        </form>\n      )\n    }\n  }\n}\n\n// helper functions for dropdown options\n\nlet itemKey = 0\n\nfunction createOption (icon, title, onSelect, isActive, isLast) {\n  return <MenuItem\n    className={`location-option${isLast ? ' last-option' : ''}`}\n    onSelect={onSelect}\n    // style={{ borderBottom: '1px solid lightgrey' }}\n    key={itemKey++}\n    active={isActive}>\n    {isIE()\n      // In internet explorer 11, some really weird stuff is happening where it\n      // is not possible to click the text of the title, but if you click just\n      // above it, then it works. So, if using IE 11, just return the title text\n      // and avoid all the extra fancy stuff.\n      // See https://github.com/ibi-group/trimet-mod-otp/issues/237\n      ? title\n      : (\n        <div style={{ paddingTop: '5px', paddingBottom: '3px' }}>\n          <div style={{ float: 'left' }}><i className={`fa fa-${icon}`} /></div>\n          <div style={{\n            marginLeft: '30px',\n            overflow: 'hidden',\n            textOverflow: 'ellipsis',\n            whiteSpace: 'nowrap'\n          }}>\n            {title}\n          </div>\n        </div>\n      )\n    }\n  </MenuItem>\n}\n\nfunction createTransitStopOption (stop, onSelect, isActive) {\n  return <MenuItem className='location-option' onSelect={onSelect} key={itemKey++} active={isActive}>\n    <div>\n      <div style={{ float: 'left', paddingTop: '3px' }}>\n        <i className='fa fa-bus' style={{ fontSize: '20px' }} />\n        <div style={{ fontSize: '8px' }}>{distanceStringImperial(stop.dist, true)}</div>\n      </div>\n      <div style={{ marginLeft: '30px' }}>\n        <div>{stop.name} ({stop.code})</div>\n        <div style={{ fontSize: '9px' }}>\n          {(stop.routes || []).map((route, i) => {\n            const name = route.shortName || route.longName\n            return (\n              <span key={`route-${i}`} className='route'>\n                {name}\n              </span>\n            )\n          })}\n        </div>\n      </div>\n      <div style={{ clear: 'both' }} />\n    </div>\n  </MenuItem>\n}\n\n// connect to redux store\n\nconst mapStateToProps = (state, ownProps) => {\n  const activeSearch = getActiveSearch(state.otp)\n  const query = activeSearch ? activeSearch.query : state.otp.currentQuery\n  const location = query[ownProps.type]\n  const showUserSettings = getShowUserSettings(state.otp)\n  return {\n    config: state.otp.config,\n    location,\n    user: state.otp.user,\n    currentPosition: state.otp.location.currentPosition,\n    sessionSearches: state.otp.location.sessionSearches,\n    nearbyStops: state.otp.location.nearbyStops,\n    showUserSettings,\n    stopsIndex: state.otp.transitIndex.stops\n  }\n}\n\nconst mapDispatchToProps = {\n  addLocationSearch,\n  findNearbyStops,\n  getCurrentPosition,\n  setLocation,\n  setLocationToCurrent,\n  clearLocation\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LocationField)\n"]}