{"version":3,"sources":["dropdown-selector.js"],"names":["DropdownSelector","evt","val","target","value","props","setQueryParam","name","isNaN","parseFloat","label","options","_onQueryParamChange","map","o","i","text","Component","PropTypes","string","oneOfType","number","array","func","mapStateToProps","state","ownProps","mapDispatchToProps"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;IAEMA,gB;;;;;;;;;;;;;;;;;;0EAYkB,UAACC,GAAD,EAAS;AAC7B,UAAMC,GAAG,GAAGD,GAAG,CAACE,MAAJ,CAAWC,KAAvB;;AACA,YAAKC,KAAL,CAAWC,aAAX,qBACG,MAAKD,KAAL,CAAWE,IADd,EACqBC,KAAK,CAACN,GAAD,CAAL,GAAaA,GAAb,GAAmBO,UAAU,CAACP,GAAD,CADlD;AAGD,K;;;;;;;6BAES;AAAA,wBAC0B,KAAKG,KAD/B;AAAA,UACAD,KADA,eACAA,KADA;AAAA,UACOM,KADP,eACOA,KADP;AAAA,UACcC,OADd,eACcA,OADd;AAGR,aACE,6BAAC,mBAAD,QACE,6BAAC,mBAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAY,QAAA,SAAS,EAAC;AAAtB,SAAuCD,KAAvC,CADF,EAEE,6BAAC,mBAAD;AAAK,QAAA,EAAE,EAAE;AAAT,SACE,6BAAC,oBAAD,QACE,6BAAC,yBAAD;AAAW,QAAA,SAAS,EAAC;AAArB,SACE,6BAAC,2BAAD;AACE,QAAA,SAAS,EAAC,mBADZ;AAEE,QAAA,cAAc,EAAC,QAFjB;AAGE,QAAA,KAAK,EAAEN,KAHT;AAIE,QAAA,QAAQ,EAAE,KAAKQ;AAJjB,SAMGD,OAAO,CAACE,GAAR,CAAY,UAACC,CAAD,EAAIC,CAAJ;AAAA,eACX;AAAQ,UAAA,GAAG,EAAEA,CAAb;AAAgB,UAAA,KAAK,EAAED,CAAC,CAACV;AAAzB,WAAiCU,CAAC,CAACE,IAAnC,CADW;AAAA,OAAZ,CANH,CADF,CADF,CADF,CAFF,CADF;AAqBD;;;;EA3C4BC,gB;;gBAAzBjB,gB,eACe;AACjBO,EAAAA,IAAI,EAAEW,mBAAUC,MADC;AAEjBf,EAAAA,KAAK,EAAEc,mBAAUE,SAAV,CAAoB,CACzBF,mBAAUC,MADe,EAEzBD,mBAAUG,MAFe,CAApB,CAFU;AAMjBX,EAAAA,KAAK,EAAEQ,mBAAUC,MANA;AAOjBR,EAAAA,OAAO,EAAEO,mBAAUI,KAPF;AAQjBhB,EAAAA,aAAa,EAAEY,mBAAUK;AARR,C;;AA6CrB,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,QAAR,EAAqB;AAC3C,SAAO,EAAP;AACD,CAFD;;AAIA,IAAMC,kBAAkB,GAAG;AAAErB,EAAAA,aAAa,EAAbA;AAAF,CAA3B;;eAEe,yBAAQkB,eAAR,EAAyBG,kBAAzB,EAA6C3B,gBAA7C,C","sourcesContent":["import React, {Component} from 'react'\nimport PropTypes from 'prop-types'\nimport { Form, FormGroup, FormControl, Row, Col } from 'react-bootstrap'\nimport { connect } from 'react-redux'\n\nimport { setQueryParam } from '../../actions/form'\n\nclass DropdownSelector extends Component {\n  static propTypes = {\n    name: PropTypes.string,\n    value: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number\n    ]),\n    label: PropTypes.string,\n    options: PropTypes.array,\n    setQueryParam: PropTypes.func\n  }\n\n  _onQueryParamChange = (evt) => {\n    const val = evt.target.value\n    this.props.setQueryParam({\n      [this.props.name]: isNaN(val) ? val : parseFloat(val)\n    })\n  }\n\n  render () {\n    const { value, label, options } = this.props\n\n    return (\n      <Row>\n        <Col xs={6} className='setting-label'>{label}</Col>\n        <Col xs={6}>\n          <Form>\n            <FormGroup className='dropdown-selector-container'>\n              <FormControl\n                className='dropdown-selector'\n                componentClass='select'\n                value={value}\n                onChange={this._onQueryParamChange}\n              >\n                {options.map((o, i) => (\n                  <option key={i} value={o.value}>{o.text}</option>\n                ))}\n              </FormControl>\n            </FormGroup>\n          </Form>\n        </Col>\n      </Row>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return { }\n}\n\nconst mapDispatchToProps = { setQueryParam }\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DropdownSelector)\n"]}