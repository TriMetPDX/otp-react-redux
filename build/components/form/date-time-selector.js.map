{"version":3,"sources":["date-time-selector.js"],"names":["checkInput","type","input","document","createElement","setAttribute","DateTimeSelector","props","evt","setQueryParam","date","target","value","weekday","format","OTP_API_DATE_FORMAT","endTime","startTime","time","timeFormat","OTP_API_TIME_FORMAT","dateFormat","departArrive","state","dateFocused","_supportsDateTimeInputs","console","log","marginBottom","map","i","_setDepartArrive","marginTop","_onBackupTimeChange","_onBackupDateChange","_onTimeChange","width","display","_onDateChange","Component","PropTypes","string","location","object","label","profile","bool","func","DateOptionButton","setDepartArrive","active","text","classNames","push","join","_onClick","mapStateToProps","ownProps","otp","currentQuery","config","mapDispatchToProps"],"mappings":"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","sourcesContent":["// import moment from 'moment'\nimport React, {Component} from 'react'\nimport PropTypes from 'prop-types'\nimport { Form, FormGroup, FormControl, Row, Col, Button } from 'react-bootstrap'\n// import { SingleDatePicker } from 'react-dates'\nimport { connect } from 'react-redux'\nimport moment from 'moment'\n\nimport { setQueryParam } from '../../actions/form'\nimport {\n  OTP_API_DATE_FORMAT,\n  OTP_API_TIME_FORMAT,\n  getTimeFormat,\n  getDateFormat\n} from '../../util/time'\n\nfunction checkInput (type) {\n  var input = document.createElement('input')\n  input.setAttribute('type', type)\n  return input.type === type\n}\n\nclass DateTimeSelector extends Component {\n  static propTypes = {\n    date: PropTypes.string,\n    departArrive: PropTypes.string,\n    time: PropTypes.string,\n    location: PropTypes.object,\n    label: PropTypes.string,\n    profile: PropTypes.bool,\n    startTime: PropTypes.string,\n    endTime: PropTypes.string,\n\n    setQueryParam: PropTypes.func,\n    type: PropTypes.string // replace with locationType?\n  }\n\n  constructor (props) {\n    super(props)\n    this.state = {\n      dateFocused: false\n    }\n    this._supportsDateTimeInputs = checkInput('date') && checkInput('time')\n    console.log(`supports date time: ${this._supportsDateTimeInputs}`)\n  }\n\n  _onDateChange = (evt) => {\n    this.props.setQueryParam({ date: evt.target.value })\n  }\n\n  _onDayOfWeekChange = evt => {\n    this.props.setQueryParam({\n      date: moment().weekday(evt.target.value).format(OTP_API_DATE_FORMAT)\n    })\n  }\n\n  _onEndTimeChange = (evt) => {\n    this.props.setQueryParam({ endTime: evt.target.value })\n  }\n\n  _onStartTimeChange = (evt) => {\n    this.props.setQueryParam({ startTime: evt.target.value })\n  }\n\n  _onTimeChange = (evt) => {\n    this.props.setQueryParam({ time: evt.target.value })\n  }\n\n  _onBackupTimeChange = (evt) => {\n    const {setQueryParam, timeFormat} = this.props\n    const time = moment(evt.target.value, timeFormat).format(OTP_API_TIME_FORMAT)\n    setQueryParam({ time })\n  }\n\n  _onBackupDateChange = (evt) => {\n    const {setQueryParam, dateFormat} = this.props\n    const date = moment(evt.target.value, dateFormat).format(OTP_API_DATE_FORMAT)\n    setQueryParam({ date })\n  }\n\n  _setDepartArrive = (type) => {\n    const {setQueryParam} = this.props\n    setQueryParam({ departArrive: type })\n    if (type === 'NOW') {\n      setQueryParam({\n        date: moment().format(OTP_API_DATE_FORMAT),\n        time: moment().format(OTP_API_TIME_FORMAT)\n      })\n    }\n  }\n\n  render () {\n    const { departArrive, date, time, timeFormat, dateFormat } = this.props\n\n    // TODO: restore for profile mode\n    /* if (this.props.profile) {\n      const dowOptions = [{\n        text: 'WEEKDAY',\n        weekday: 3\n      }, {\n        text: 'SATURDAY',\n        weekday: 6\n      }, {\n        text: 'SUNDAY',\n        weekday: 0\n      }]\n\n      return (\n        <Form>\n          <FormGroup style={{marginBottom: '15px'}} className='date-time-selector'>\n            <Row>\n              <Col xs={12}>\n                <FormControl\n                  className='dropdown-selector'\n                  componentClass='select'\n                  style={{width: '100%'}}\n                  onChange={this._onDayOfWeekChange}\n                >\n                  {dowOptions.map((o, i) => (\n                    <option key={i} value={o.weekday}>{o.text}</option>\n                  ))}\n                </FormControl>\n              </Col>\n            </Row>\n            <Row style={{ marginTop: 20 }}>\n              <Col xs={5}>\n                <FormControl\n                  className='time-selector'\n                  type='time'\n                  required='true'\n                  value={startTime}\n                  style={{width: '100%'}}\n                  onChange={this._onStartTimeChange}\n                />\n              </Col>\n              <Col xs={2}>TO</Col>\n              <Col xs={5}>\n                <FormControl\n                  className='time-selector'\n                  type='time'\n                  required='true'\n                  value={endTime}\n                  style={{width: '100%'}}\n                  onChange={this._onEndTimeChange}\n                />\n              </Col>\n            </Row>\n          </FormGroup>\n        </Form>\n      )\n    } */\n\n    return (\n      <Form>\n        <FormGroup style={{marginBottom: '15px'}} className='date-time-selector'>\n          <Row>\n            {['NOW', 'DEPART', 'ARRIVE'].map((type, i) => (\n              <Col key={i} xs={4}>\n                <DateOptionButton\n                  type={type}\n                  active={departArrive === type}\n                  setDepartArrive={this._setDepartArrive}\n                />\n              </Col>\n            ))}\n          </Row>\n          {departArrive !== 'NOW' && !this._supportsDateTimeInputs && (\n            <Row style={{ marginTop: 20 }}>\n              <Col xs={6}>\n                <FormControl\n                  className='time-selector'\n                  type='text'\n                  defaultValue={moment(time, OTP_API_TIME_FORMAT).format(timeFormat)}\n                  required='true'\n                  onChange={this._onBackupTimeChange}\n                />\n              </Col>\n              <Col xs={6}>\n                <FormControl\n                  className='date-selector'\n                  type='text'\n                  defaultValue={moment(date, OTP_API_DATE_FORMAT).format(dateFormat)}\n                  required='true'\n                  onChange={this._onBackupDateChange}\n                />\n              </Col>\n            </Row>\n          )}\n          {departArrive !== 'NOW' && this._supportsDateTimeInputs && (\n            <Row style={{ marginTop: 20 }}>\n              <Col xs={6}>\n                <FormControl\n                  className='time-selector'\n                  type='time'\n                  value={time}\n                  required='true'\n                  onChange={this._onTimeChange}\n                  style={{width: '100%', display: departArrive === 'NOW' && 'none'}}\n                />\n              </Col>\n              <Col xs={6}>\n                <FormControl\n                  className='date-selector'\n                  type='date'\n                  value={date}\n                  required='true'\n                  onChange={this._onDateChange}\n                  style={{width: '100%', display: departArrive === 'NOW' && 'none'}}\n                />\n              </Col>\n            </Row>\n          )}\n        </FormGroup>\n      </Form>\n    )\n  }\n}\n\nclass DateOptionButton extends Component {\n  _onClick = () => {\n    this.props.setDepartArrive(this.props.type)\n  }\n\n  render () {\n    const { active, type } = this.props\n    let text = type\n    if (type === 'NOW') text = 'Leave now'\n    if (type === 'DEPART') text = 'Depart at'\n    if (type === 'ARRIVE') text = 'Arrive by'\n    const classNames = ['date-option-button', 'select-button']\n    if (active) classNames.push('active')\n    return <Button className={classNames.join(' ')} onClick={this._onClick}>{text}</Button>\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const { departArrive, date, time, startTime, endTime } = state.otp.currentQuery\n  return {\n    config: state.otp.config,\n    departArrive,\n    date,\n    time,\n    startTime,\n    endTime,\n    timeFormat: getTimeFormat(state.otp.config),\n    dateFormat: getDateFormat(state.otp.config)\n  }\n}\n\nconst mapDispatchToProps = {\n  setQueryParam\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DateTimeSelector)\n"]}