{"version":3,"sources":["zipcar.js"],"names":["fetch","require","receivedZipcarLocationsError","receivedZipcarLocationsResponse","requestZipcarLocationsResponse","zipcarLocationsQuery","url","dispatch","getState","response","status","error","Error","json"],"mappings":";;;;;;;;;;;;;;AAAA;;;;;;AACA,IAAI,OAAQA,KAAR,KAAmB,WAAvB,EAAoCC,OAAO,CAAC,kBAAD,CAAP;AAE7B,IAAMC,4BAA4B,GAAG,gCAAa,wBAAb,CAArC;;AACA,IAAMC,+BAA+B,GAAG,gCAAa,2BAAb,CAAxC;;AACA,IAAMC,8BAA8B,GAAG,gCAAa,0BAAb,CAAvC;;;AAEA,SAASC,oBAAT,CAA+BC,GAA/B,EAAoC;AACzC;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAO,iBAAgBC,QAAhB,EAA0BC,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AACLD,gBAAAA,QAAQ,CAACH,8BAA8B,EAA/B,CAAR;AADK;AAAA;AAAA,uBAIoBJ,KAAK,CAACM,GAAD,CAJzB;;AAAA;AAIGG,gBAAAA,QAJH;;AAAA,sBAKCA,QAAQ,CAACC,MAAT,IAAmB,GALpB;AAAA;AAAA;AAAA;;AAMKC,gBAAAA,KANL,GAMa,IAAIC,KAAJ,CAAU,4BAAV,CANb;AAODD,gBAAAA,KAAK,CAACF,QAAN,GAAiBA,QAAjB;AAPC,sBAQKE,KARL;;AAAA;AAAA;AAAA,uBAUUF,QAAQ,CAACI,IAAT,EAVV;;AAAA;AAUHA,gBAAAA,IAVG;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,iDAYIN,QAAQ,CAACL,4BAA4B,aAA7B,CAZZ;;AAAA;AAeLK,gBAAAA,QAAQ,CAACJ,+BAA+B,CAACU,IAAD,CAAhC,CAAR;;AAfK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBD","sourcesContent":["import { createAction } from 'redux-actions'\nif (typeof (fetch) === 'undefined') require('isomorphic-fetch')\n\nexport const receivedZipcarLocationsError = createAction('ZIPCAR_LOCATIONS_ERROR')\nexport const receivedZipcarLocationsResponse = createAction('ZIPCAR_LOCATIONS_RESPONSE')\nexport const requestZipcarLocationsResponse = createAction('ZIPCAR_LOCATIONS_REQUEST')\n\nexport function zipcarLocationsQuery (url) {\n  return async function (dispatch, getState) {\n    dispatch(requestZipcarLocationsResponse())\n    let json\n    try {\n      const response = await fetch(url)\n      if (response.status >= 400) {\n        const error = new Error('Received error from server')\n        error.response = response\n        throw error\n      }\n      json = await response.json()\n    } catch (err) {\n      return dispatch(receivedZipcarLocationsError(err))\n    }\n\n    dispatch(receivedZipcarLocationsResponse(json))\n  }\n}\n"]}