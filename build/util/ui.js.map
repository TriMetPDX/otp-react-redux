{"version":3,"sources":["ui.js"],"names":["DEFAULT_TITLE","document","title","isMobile","test","navigator","userAgent","isIE","bowser","name","enableScrollForSelector","selector","_overlay","querySelector","_clientY","addEventListener","event","targetTouches","length","clientY","disableRubberBand","scrollTop","preventDefault","isOverlayTotallyScrolled","scrollHeight","clientHeight","getTitle","state","otp","config","ui","user","mainPanelContent","viewedRoute","viewedStop","MainPanelContent","ROUTE_VIEWER","routeId","STOP_VIEWER","stopId","activeSearch","query","locations"],"mappings":"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","sourcesContent":["import bowser from 'bowser'\n\nimport { MainPanelContent } from '../actions/ui'\nimport { summarizeQuery } from './query'\nimport { getActiveSearch } from './state'\n\n// Set default title to the original document title (on load) set in index.html\nconst DEFAULT_TITLE = document.title\n\nexport function isMobile () {\n  // TODO: consider using 3rd-party library?\n  return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)\n}\n\n/**\n * Returns true if the user is using a [redacted] browser\n */\nexport function isIE () {\n  return bowser.name === 'Internet Explorer'\n}\n\n/**\n * Enables scrolling for a specified selector, while disabling scrolling for all\n * other targets. This is adapted from https://stackoverflow.com/a/41601290/915811\n * and intended to fix issues with iOS elastic scrolling, e.g.,\n * https://github.com/conveyal/trimet-mod-otp/issues/92.\n */\nexport function enableScrollForSelector (selector) {\n  const _overlay = document.querySelector(selector)\n  let _clientY = null // remember Y position on touch start\n\n  _overlay.addEventListener('touchstart', function (event) {\n    if (event.targetTouches.length === 1) {\n      // detect single touch\n      _clientY = event.targetTouches[0].clientY\n    }\n  }, false)\n\n  _overlay.addEventListener('touchmove', function (event) {\n    if (event.targetTouches.length === 1) {\n      // detect single touch\n      disableRubberBand(event)\n    }\n  }, false)\n\n  function disableRubberBand (event) {\n    const clientY = event.targetTouches[0].clientY - _clientY\n\n    if (_overlay.scrollTop === 0 && clientY > 0) {\n      // element is at the top of its scroll\n      event.preventDefault()\n    }\n\n    if (isOverlayTotallyScrolled() && clientY < 0) {\n      // element is at the top of its scroll\n      event.preventDefault()\n    }\n  }\n\n  function isOverlayTotallyScrolled () {\n    // https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollHeight#Problems_and_solutions\n    return _overlay.scrollHeight - _overlay.scrollTop <= _overlay.clientHeight\n  }\n}\n\nexport function getTitle (state) {\n  // Override title can optionally be provided in config.yml\n  const { config, ui, user } = state.otp\n  let title = config.title || DEFAULT_TITLE\n  const { mainPanelContent, viewedRoute, viewedStop } = ui\n  switch (mainPanelContent) {\n    case MainPanelContent.ROUTE_VIEWER:\n      title += ' | Route'\n      if (viewedRoute && viewedRoute.routeId) title += ` ${viewedRoute.routeId}`\n      break\n    case MainPanelContent.STOP_VIEWER:\n      title += ' | Stop'\n      if (viewedStop && viewedStop.stopId) title += ` ${viewedStop.stopId}`\n      break\n    default:\n      const activeSearch = getActiveSearch(state.otp)\n      if (activeSearch) {\n        title += ` | ${summarizeQuery(activeSearch.query, user.locations)}`\n      }\n      break\n  }\n  // if (printView) title += ' | Print'\n  return title\n}\n"]}