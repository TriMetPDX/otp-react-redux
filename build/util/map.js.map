{"version":3,"sources":["map.js"],"names":["latlngToString","latlng","lat","toFixed","lng","lon","coordsToString","coords","length","map","c","join","stringToCoords","str","split","constructLocation","name","formatStoredPlaceName","location","withDetails","displayName","type","detailText","getDetailText","id","timestamp","fromNow","matchLatLon","location1","location2","itineraryToTransitive","itin","includeGeometry","tdata","journeys","streetEdges","places","patterns","routes","stops","streetEdgeId","patternId","journey","journey_id","journey_name","segments","push","place_id","place_lat","legs","from","place_lon","to","forEach","leg","mode","fromPlaceId","bikeShareId","toPlaceId","segment","hailedCar","arc","edge_id","geometry","legGeometry","place_name","hasInterStopGeometry","interStopGeometry","intermediateStops","ptnId","pattern","pattern_id","pattern_name","route_id","routeId","stopId","stop_id","stop_name","stop_lat","stop_lon","entries","i","stop","points","agency_id","agencyId","route_short_name","routeShortName","route_long_name","routeLongName","route_type","routeType","route_color","routeColor","from_stop_index","to_stop_index","k","isBikeshareStation","place","lastIndexOf"],"mappings":"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","sourcesContent":["import moment from 'moment'\n\nimport { isTransit, toSentenceCase } from './itinerary'\n\nexport function latlngToString (latlng) {\n  return latlng && `${latlng.lat.toFixed(5)}, ${(latlng.lng || latlng.lon).toFixed(5)}`\n}\n\nexport function coordsToString (coords) {\n  return coords.length && coords.map(c => (+c).toFixed(5)).join(', ')\n}\n\nexport function stringToCoords (str) {\n  return (str && str.split(',').map(c => +c)) || []\n}\n\nexport function constructLocation (latlng) {\n  return {\n    name: latlngToString(latlng),\n    lat: latlng.lat,\n    lon: latlng.lng\n  }\n}\n\nexport function formatStoredPlaceName (location, withDetails = true) {\n  let displayName = location.type === 'home' || location.type === 'work'\n    ? toSentenceCase(location.type)\n    : location.name\n  if (withDetails) {\n    let detailText = getDetailText(location)\n    if (detailText) displayName += ` (${detailText})`\n  }\n  return displayName\n}\n\nexport function getDetailText (location) {\n  let detailText\n  if (location.type === 'home' || location.type === 'work') {\n    detailText = location.name\n  }\n  if (location.type === 'stop') {\n    detailText = location.id\n  } else if (location.type === 'recent' && location.timestamp) {\n    detailText = moment(location.timestamp).fromNow()\n  }\n  return detailText\n}\n\nexport function matchLatLon (location1, location2) {\n  if (!location1 || !location2) return location1 === location2\n  return location1.lat === location2.lat && location1.lon === location2.lon\n}\n\nexport function itineraryToTransitive (itin, includeGeometry) {\n  // console.log('itineraryToTransitive', itin);\n  const tdata = {\n    journeys: [],\n    streetEdges: [],\n    places: [],\n    patterns: [],\n    routes: [],\n    stops: []\n  }\n  const routes = {}\n  const stops = {}\n  let streetEdgeId = 0\n  let patternId = 0\n\n  const journey = {\n    journey_id: 'itin',\n    journey_name: 'Iterarary-derived Journey',\n    segments: []\n  }\n\n  // add 'from' and 'to' places to the tdata places array\n  tdata.places.push({\n    place_id: 'from',\n    place_lat: itin.legs[0].from.lat,\n    place_lon: itin.legs[0].from.lon\n  })\n  tdata.places.push({\n    place_id: 'to',\n    place_lat: itin.legs[itin.legs.length - 1].to.lat,\n    place_lon: itin.legs[itin.legs.length - 1].to.lon\n  })\n\n  itin.legs.forEach(leg => {\n    if (\n      leg.mode === 'WALK' ||\n      leg.mode === 'BICYCLE' ||\n      leg.mode === 'CAR' ||\n      leg.mode === 'MICROMOBILITY'\n    ) {\n      const fromPlaceId = leg.from.bikeShareId\n        ? `bicycle_rent_station_${leg.from.bikeShareId}`\n        : `itin_street_${streetEdgeId}_from`\n      const toPlaceId = leg.to.bikeShareId\n        ? `bicycle_rent_station_${leg.to.bikeShareId}`\n        : `itin_street_${streetEdgeId}_to`\n\n      const segment = {\n        type: leg.mode,\n        streetEdges: [streetEdgeId],\n        from: { type: 'PLACE', place_id: fromPlaceId },\n        to: { type: 'PLACE', place_id: toPlaceId }\n      }\n      // For TNC segments, draw using an arc\n      if (leg.mode === 'CAR' && leg.hailedCar) segment.arc = true\n      journey.segments.push(segment)\n\n      tdata.streetEdges.push({\n        edge_id: streetEdgeId,\n        geometry: leg.legGeometry\n      })\n      tdata.places.push({\n        place_id: fromPlaceId,\n        // Do not label the from place in addition to the to place. Otherwise,\n        // in some cases (bike rental station) the label for a single place will\n        // appear twice on the rendered transitive view.\n        // See https://github.com/conveyal/trimet-mod-otp/issues/152\n        // place_name: leg.from.name,\n        place_lat: leg.from.lat,\n        place_lon: leg.from.lon\n      })\n      tdata.places.push({\n        place_id: toPlaceId,\n        place_name: leg.to.name,\n        place_lat: leg.to.lat,\n        place_lon: leg.to.lon\n      })\n      streetEdgeId++\n    }\n    if (isTransit(leg.mode)) {\n      // determine if we have valid inter-stop geometry\n      const hasInterStopGeometry =\n        leg.interStopGeometry &&\n        leg.interStopGeometry.length === leg.intermediateStops.length + 1\n\n      // create leg-specific pattern\n      const ptnId = 'ptn_' + patternId\n      const pattern = {\n        pattern_id: ptnId,\n        pattern_name: 'Pattern ' + patternId,\n        route_id: leg.routeId,\n        stops: []\n      }\n\n      // add 'from' stop to stops dictionary and pattern object\n      stops[leg.from.stopId] = {\n        stop_id: leg.from.stopId,\n        stop_name: leg.from.name,\n        stop_lat: leg.from.lat,\n        stop_lon: leg.from.lon\n      }\n      pattern.stops.push({ stop_id: leg.from.stopId })\n\n      // add intermediate stops to stops dictionary and pattern object\n      for (const [i, stop] of leg.intermediateStops.entries()) {\n        stops[stop.stopId] = {\n          stop_id: stop.stopId,\n          stop_name: stop.name,\n          stop_lat: stop.lat,\n          stop_lon: stop.lon\n        }\n        pattern.stops.push({\n          stop_id: stop.stopId,\n          geometry: hasInterStopGeometry && leg.interStopGeometry[i].points\n        })\n      }\n\n      // add 'to' stop to stops dictionary and pattern object\n      stops[leg.to.stopId] = {\n        stop_id: leg.to.stopId,\n        stop_name: leg.to.name,\n        stop_lat: leg.to.lat,\n        stop_lon: leg.to.lon\n      }\n      pattern.stops.push({\n        stop_id: leg.to.stopId,\n        geometry: hasInterStopGeometry && leg.interStopGeometry[leg.interStopGeometry.length - 1].points\n      })\n\n      // add route to the route dictionary\n      routes[leg.routeId] = {\n        agency_id: leg.agencyId,\n        route_id: leg.routeId,\n        route_short_name: leg.routeShortName || '',\n        route_long_name: leg.routeLongName || '',\n        route_type: leg.routeType,\n        route_color: leg.routeColor\n      }\n\n      // add the pattern to the tdata patterns array\n      tdata.patterns.push(pattern)\n\n      // add the pattern refrerence to the journey object\n      journey.segments.push({\n        type: 'TRANSIT',\n        patterns: [{\n          pattern_id: ptnId,\n          from_stop_index: 0,\n          to_stop_index: (leg.intermediateStops.length + 2) - 1\n        }]\n      })\n\n      patternId++\n    }\n  })\n\n  // add the routes and stops to the tdata arrays\n  for (const k in routes) tdata.routes.push(routes[k])\n  for (const k in stops) tdata.stops.push(stops[k])\n\n  // add the journey to the tdata journeys array\n  tdata.journeys.push(journey)\n\n  // console.log('derived tdata', tdata);\n  return tdata\n}\n\nexport function isBikeshareStation (place) {\n  return place.place_id.lastIndexOf('bicycle_rent_station') !== -1\n}\n"]}