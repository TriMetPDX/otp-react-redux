{"version":3,"sources":["storage.js"],"names":["STORAGE_PREFIX","storeItem","key","object","window","localStorage","setItem","JSON","stringify","getItem","notFoundValue","itemAsString","json","parse","e","console","warn","removeItem","randId","Math","random","toString","substr"],"mappings":";;;;;;;;;;;;;;AAAA;AACA,IAAMA,cAAc,GAAG,KAAvB;AAEA;;;;AAGO,SAASC,SAAT,CAAoBC,GAApB,EAAyBC,MAAzB,EAAiC;AACtCC,EAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,WAA+BN,cAA/B,cAAiDE,GAAjD,GAAwDK,IAAI,CAACC,SAAL,CAAeL,MAAf,CAAxD;AACD;AAED;;;;;;AAIO,SAASM,OAAT,CAAkBP,GAAlB,EAA6C;AAAA,MAAtBQ,aAAsB,uEAAN,IAAM;AAClD,MAAIC,YAAJ;;AACA,MAAI;AACFA,IAAAA,YAAY,GAAGP,MAAM,CAACC,YAAP,CAAoBI,OAApB,WAA+BT,cAA/B,cAAiDE,GAAjD,EAAf;AACA,QAAMU,IAAI,GAAGL,IAAI,CAACM,KAAL,CAAWF,YAAX,CAAb;AACA,QAAIC,IAAJ,EAAU,OAAOA,IAAP,CAAV,KACK,OAAOF,aAAP;AACN,GALD,CAKE,OAAOI,CAAP,EAAU;AACV;AACAC,IAAAA,OAAO,CAACC,IAAR,CAAaF,CAAb,EAAgBH,YAAhB;AACA,WAAOD,aAAP;AACD;AACF;AAED;;;;;AAGO,SAASO,UAAT,CAAqBf,GAArB,EAA0B;AAC/BE,EAAAA,MAAM,CAACC,YAAP,CAAoBY,UAApB,WAAkCjB,cAAlC,cAAoDE,GAApD;AACD;AAED;;;;;;AAIO,SAASgB,MAAT,GAAmB;AACxB,SAAOC,IAAI,CAACC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,EAA2BC,MAA3B,CAAkC,CAAlC,EAAqC,CAArC,CAAP;AACD","sourcesContent":["// Prefix to use with local storage keys.\nconst STORAGE_PREFIX = 'otp'\n\n/**\n * Store a javascript object at the specified key.\n */\nexport function storeItem (key, object) {\n  window.localStorage.setItem(`${STORAGE_PREFIX}.${key}`, JSON.stringify(object))\n}\n\n/**\n * Retrieve a javascript object at the specified key. If not found, defaults to\n * null or, the optionally provided notFoundValue.\n */\nexport function getItem (key, notFoundValue = null) {\n  let itemAsString\n  try {\n    itemAsString = window.localStorage.getItem(`${STORAGE_PREFIX}.${key}`)\n    const json = JSON.parse(itemAsString)\n    if (json) return json\n    else return notFoundValue\n  } catch (e) {\n    // Catch any errors associated with parsing bad JSON.\n    console.warn(e, itemAsString)\n    return notFoundValue\n  }\n}\n\n/**\n * Remove item at specified key.\n */\nexport function removeItem (key) {\n  window.localStorage.removeItem(`${STORAGE_PREFIX}.${key}`)\n}\n\n/**\n * Generate a random ID. This might not quite be a UUID, but it serves our\n * purposes for now.\n */\nexport function randId () {\n  return Math.random().toString(36).substr(2, 9)\n}\n"]}